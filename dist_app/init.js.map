{"version":3,"file":"init.js","sources":["../node_modules/pixi.js/lib/rendering/renderers/shared/utils/createIdFromString.mjs","../node_modules/pixi.js/lib/rendering/renderers/gl/shader/program/getTestContext.mjs","../node_modules/pixi.js/lib/rendering/renderers/gl/shader/program/getMaxFragmentPrecision.mjs","../node_modules/pixi.js/lib/rendering/renderers/gl/shader/program/preprocessors/addProgramDefines.mjs","../node_modules/pixi.js/lib/rendering/renderers/gl/shader/program/preprocessors/ensurePrecision.mjs","../node_modules/pixi.js/lib/rendering/renderers/gl/shader/program/preprocessors/insertVersion.mjs","../node_modules/pixi.js/lib/rendering/renderers/gl/shader/program/preprocessors/setProgramName.mjs","../node_modules/pixi.js/lib/rendering/renderers/gl/shader/program/preprocessors/stripVersion.mjs","../node_modules/pixi.js/lib/rendering/renderers/gl/shader/GlProgram.mjs","../node_modules/pixi.js/lib/rendering/renderers/shared/geometry/utils/getAttributeInfoFromFormat.mjs","../node_modules/pixi.js/lib/rendering/renderers/gpu/shader/utils/extractAttributesFromGpuProgram.mjs","../node_modules/pixi.js/lib/rendering/renderers/gpu/shader/utils/extractStructAndGroups.mjs","../node_modules/pixi.js/lib/rendering/renderers/shared/shader/const.mjs","../node_modules/pixi.js/lib/rendering/renderers/gpu/shader/utils/generateGpuLayoutGroups.mjs","../node_modules/pixi.js/lib/rendering/renderers/gpu/shader/utils/generateLayoutHash.mjs","../node_modules/pixi.js/lib/rendering/renderers/gpu/shader/utils/removeStructAndGroupDuplicates.mjs","../node_modules/pixi.js/lib/rendering/renderers/gpu/shader/GpuProgram.mjs","../node_modules/pixi.js/lib/rendering/renderers/shared/shader/types.mjs","../node_modules/pixi.js/lib/rendering/renderers/shared/shader/utils/getDefaultUniformValue.mjs","../node_modules/pixi.js/lib/rendering/renderers/shared/shader/UniformGroup.mjs","../node_modules/pixi.js/lib/rendering/renderers/gpu/shader/BindGroup.mjs","../node_modules/pixi.js/lib/rendering/renderers/types.mjs","../node_modules/pixi.js/lib/rendering/renderers/shared/shader/Shader.mjs","../node_modules/pixi.js/lib/rendering/renderers/shared/state/State.mjs","../node_modules/pixi.js/lib/app/ResizePlugin.mjs","../node_modules/pixi.js/lib/app/TickerPlugin.mjs","../node_modules/pixi.js/lib/scene/text-bitmap/AbstractBitmapFont.mjs","../node_modules/pixi.js/lib/scene/graphics/shared/fill/FillGradient.mjs","../node_modules/pixi.js/lib/scene/graphics/shared/fill/FillPattern.mjs","../node_modules/parse-svg-path/index.js","../node_modules/pixi.js/lib/scene/graphics/shared/svg/SVGToGraphicsPath.mjs","../node_modules/pixi.js/lib/maths/shapes/Circle.mjs","../node_modules/pixi.js/lib/maths/shapes/Ellipse.mjs","../node_modules/pixi.js/lib/maths/misc/squaredDistanceToLineSegment.mjs","../node_modules/pixi.js/lib/maths/shapes/Polygon.mjs","../node_modules/pixi.js/lib/maths/shapes/RoundedRectangle.mjs","../node_modules/pixi.js/lib/rendering/batcher/gl/utils/checkMaxIfStatementsInShader.mjs","../node_modules/pixi.js/lib/rendering/batcher/gl/utils/maxRecommendedTextures.mjs","../node_modules/pixi.js/lib/rendering/batcher/gpu/getTextureBatchBindGroup.mjs","../node_modules/pixi.js/lib/utils/data/ViewableBuffer.mjs","../node_modules/pixi.js/lib/rendering/renderers/shared/buffer/utils/fastCopy.mjs","../node_modules/pixi.js/lib/rendering/renderers/shared/state/const.mjs","../node_modules/pixi.js/lib/rendering/renderers/shared/state/getAdjustedBlendModeBlend.mjs","../node_modules/pixi.js/lib/rendering/batcher/shared/BatchTextureArray.mjs","../node_modules/pixi.js/lib/rendering/batcher/shared/Batcher.mjs","../node_modules/pixi.js/lib/rendering/renderers/shared/buffer/const.mjs","../node_modules/pixi.js/lib/rendering/renderers/shared/buffer/Buffer.mjs","../node_modules/pixi.js/lib/rendering/renderers/shared/geometry/utils/ensureIsBuffer.mjs","../node_modules/pixi.js/lib/rendering/renderers/shared/geometry/utils/getGeometryBounds.mjs","../node_modules/pixi.js/lib/rendering/renderers/shared/geometry/Geometry.mjs","../node_modules/pixi.js/lib/rendering/batcher/shared/BatchGeometry.mjs","../node_modules/pixi.js/lib/rendering/high-shader/compiler/utils/addBits.mjs","../node_modules/pixi.js/lib/rendering/high-shader/compiler/utils/compileHooks.mjs","../node_modules/pixi.js/lib/rendering/high-shader/compiler/utils/compileInputs.mjs","../node_modules/pixi.js/lib/rendering/high-shader/compiler/utils/compileOutputs.mjs","../node_modules/pixi.js/lib/rendering/high-shader/compiler/utils/injectBits.mjs","../node_modules/pixi.js/lib/rendering/high-shader/compiler/compileHighShader.mjs","../node_modules/pixi.js/lib/rendering/high-shader/defaultProgramTemplate.mjs","../node_modules/pixi.js/lib/rendering/high-shader/shader-bits/globalUniformsBit.mjs","../node_modules/pixi.js/lib/rendering/high-shader/compileHighShaderToProgram.mjs","../node_modules/pixi.js/lib/rendering/high-shader/shader-bits/colorBit.mjs","../node_modules/pixi.js/lib/rendering/high-shader/shader-bits/generateTextureBatchBit.mjs","../node_modules/pixi.js/lib/rendering/high-shader/shader-bits/roundPixelsBit.mjs","../node_modules/pixi.js/lib/rendering/renderers/gl/shader/getBatchSamplersUniformGroup.mjs","../node_modules/pixi.js/lib/rendering/batcher/shared/DefaultShader.mjs","../node_modules/pixi.js/lib/rendering/batcher/shared/DefaultBatcher.mjs","../node_modules/pixi.js/lib/rendering/renderers/shared/geometry/utils/buildUvs.mjs","../node_modules/pixi.js/lib/rendering/renderers/shared/geometry/utils/transformVertices.mjs","../node_modules/pixi.js/lib/scene/graphics/shared/BatchableGraphics.mjs","../node_modules/pixi.js/lib/scene/graphics/shared/buildCommands/buildCircle.mjs","../node_modules/pixi.js/lib/scene/graphics/shared/const.mjs","../node_modules/pixi.js/lib/scene/graphics/shared/utils/getOrientationOfPoints.mjs","../node_modules/pixi.js/lib/scene/graphics/shared/buildCommands/buildLine.mjs","../node_modules/pixi.js/lib/scene/graphics/shared/buildCommands/buildPixelLine.mjs","../node_modules/pixi.js/lib/scene/graphics/shared/utils/triangulateWithHoles.mjs","../node_modules/pixi.js/lib/scene/graphics/shared/buildCommands/buildPolygon.mjs","../node_modules/pixi.js/lib/scene/graphics/shared/buildCommands/buildRectangle.mjs","../node_modules/pixi.js/lib/scene/graphics/shared/buildCommands/buildTriangle.mjs","../node_modules/pixi.js/lib/scene/graphics/shared/utils/buildContextBatches.mjs","../node_modules/pixi.js/lib/scene/graphics/shared/GraphicsContextSystem.mjs","../node_modules/pixi.js/lib/scene/graphics/shared/buildCommands/buildAdaptiveBezier.mjs","../node_modules/pixi.js/lib/scene/graphics/shared/buildCommands/buildAdaptiveQuadratic.mjs","../node_modules/pixi.js/lib/scene/graphics/shared/buildCommands/buildArc.mjs","../node_modules/pixi.js/lib/scene/graphics/shared/buildCommands/buildArcTo.mjs","../node_modules/pixi.js/lib/scene/graphics/shared/buildCommands/buildArcToSvg.mjs","../node_modules/pixi.js/lib/scene/graphics/shared/path/roundShape.mjs","../node_modules/pixi.js/lib/scene/graphics/shared/path/ShapePath.mjs","../node_modules/pixi.js/lib/scene/graphics/shared/path/GraphicsPath.mjs","../node_modules/pixi.js/lib/scene/graphics/shared/svg/SVGParser.mjs","../node_modules/pixi.js/lib/scene/graphics/shared/utils/convertFillInputToFillStyle.mjs","../node_modules/pixi.js/lib/scene/graphics/shared/GraphicsContext.mjs","../node_modules/pixi.js/lib/scene/text/utils/generateTextStyleKey.mjs","../node_modules/pixi.js/lib/scene/text/TextStyle.mjs","../node_modules/pixi.js/lib/rendering/renderers/shared/texture/CanvasPool.mjs","../node_modules/pixi.js/lib/scene/text/canvas/utils/fontStringFromTextStyle.mjs","../node_modules/pixi.js/lib/scene/text/canvas/CanvasTextMetrics.mjs","../node_modules/pixi.js/lib/scene/text/canvas/utils/getCanvasFillStyle.mjs","../node_modules/pixi.js/lib/scene/text-bitmap/utils/resolveCharacters.mjs","../node_modules/pixi.js/lib/scene/text-bitmap/DynamicBitmapFont.mjs","../node_modules/pixi.js/lib/scene/text-bitmap/utils/getBitmapTextLayout.mjs","../node_modules/pixi.js/lib/scene/text-bitmap/BitmapFontManager.mjs","../node_modules/pixi.js/lib/filters/FilterPipe.mjs","../node_modules/pixi.js/lib/scene/container/bounds/getFastGlobalBounds.mjs","../node_modules/pixi.js/lib/scene/container/bounds/getRenderableBounds.mjs","../node_modules/pixi.js/lib/filters/FilterSystem.mjs","../node_modules/pixi.js/lib/scene/graphics/shared/Graphics.mjs","../node_modules/pixi.js/lib/scene/mesh/shared/MeshGeometry.mjs","../node_modules/pixi.js/lib/scene/text-html/utils/textStyleToCSS.mjs","../node_modules/pixi.js/lib/scene/text-html/HTMLTextStyle.mjs","../node_modules/pixi.js/lib/scene/text-html/HTMLTextRenderData.mjs","../node_modules/pixi.js/lib/scene/text-html/utils/measureHtmlText.mjs","../node_modules/pixi.js/lib/rendering/high-shader/shader-bits/localUniformBit.mjs","../node_modules/pixi.js/lib/scene/sprite/BatchableSprite.mjs","../node_modules/pixi.js/lib/scene/graphics/gpu/colorToUniform.mjs","../node_modules/pixi.js/lib/scene/graphics/shared/GraphicsPipe.mjs","../node_modules/pixi.js/lib/scene/mesh-plane/PlaneGeometry.mjs","../node_modules/pixi.js/lib/scene/mesh/shared/BatchableMesh.mjs","../node_modules/pixi.js/lib/scene/mesh/shared/MeshPipe.mjs","../node_modules/pixi.js/lib/scene/particle-container/gl/GlParticleContainerAdaptor.mjs","../node_modules/pixi.js/lib/scene/particle-container/gpu/GpuParticleContainerAdaptor.mjs","../node_modules/pixi.js/lib/scene/particle-container/shared/utils/createIndicesForQuads.mjs","../node_modules/pixi.js/lib/scene/particle-container/shared/utils/generateParticleUpdateFunction.mjs","../node_modules/pixi.js/lib/scene/particle-container/shared/ParticleBuffer.mjs","../node_modules/pixi.js/lib/scene/particle-container/shared/shader/particles.frag.mjs","../node_modules/pixi.js/lib/scene/particle-container/shared/shader/particles.vert.mjs","../node_modules/pixi.js/lib/scene/particle-container/shared/shader/particles.wgsl.mjs","../node_modules/pixi.js/lib/scene/particle-container/shared/shader/ParticleShader.mjs","../node_modules/pixi.js/lib/scene/particle-container/shared/ParticleContainerPipe.mjs","../node_modules/pixi.js/lib/scene/particle-container/shared/GlParticleContainerPipe.mjs","../node_modules/pixi.js/lib/scene/particle-container/shared/GpuParticleContainerPipe.mjs","../node_modules/pixi.js/lib/scene/sprite-nine-slice/NineSliceGeometry.mjs","../node_modules/pixi.js/lib/scene/sprite-nine-slice/NineSliceSpritePipe.mjs","../node_modules/pixi.js/lib/scene/sprite-tiling/shader/tilingBit.mjs","../node_modules/pixi.js/lib/scene/sprite-tiling/shader/TilingSpriteShader.mjs","../node_modules/pixi.js/lib/scene/sprite-tiling/utils/QuadGeometry.mjs","../node_modules/pixi.js/lib/scene/sprite-tiling/utils/setPositions.mjs","../node_modules/pixi.js/lib/scene/sprite-tiling/utils/applyMatrix.mjs","../node_modules/pixi.js/lib/scene/sprite-tiling/utils/setUvs.mjs","../node_modules/pixi.js/lib/scene/sprite-tiling/TilingSpritePipe.mjs","../node_modules/pixi.js/lib/scene/text/sdfShader/shader-bits/localUniformMSDFBit.mjs","../node_modules/pixi.js/lib/scene/text/sdfShader/shader-bits/mSDFBit.mjs","../node_modules/pixi.js/lib/scene/text/sdfShader/SdfShader.mjs","../node_modules/pixi.js/lib/scene/text-bitmap/BitmapTextPipe.mjs","../node_modules/pixi.js/lib/scene/text-html/HTMLTextPipe.mjs","../node_modules/pixi.js/lib/utils/browser/isSafari.mjs","../node_modules/pixi.js/lib/scene/text/utils/getPo2TextureFromSource.mjs","../node_modules/pixi.js/lib/scene/text-html/utils/extractFontFamilies.mjs","../node_modules/pixi.js/lib/scene/text-html/utils/loadFontAsBase64.mjs","../node_modules/pixi.js/lib/scene/text-html/utils/loadFontCSS.mjs","../node_modules/pixi.js/lib/scene/text-html/utils/getFontCss.mjs","../node_modules/pixi.js/lib/scene/text-html/utils/getSVGUrl.mjs","../node_modules/pixi.js/lib/scene/text-html/utils/getTemporaryCanvasFromImage.mjs","../node_modules/pixi.js/lib/scene/text-html/utils/loadSVGImage.mjs","../node_modules/pixi.js/lib/scene/text-html/HTMLTextSystem.mjs","../node_modules/pixi.js/lib/scene/text/canvas/CanvasTextPipe.mjs","../node_modules/pixi.js/lib/utils/canvas/getCanvasBoundingBox.mjs","../node_modules/pixi.js/lib/scene/text/canvas/CanvasTextSystem.mjs","../node_modules/pixi.js/lib/app/init.mjs","../node_modules/pixi.js/lib/scene/graphics/init.mjs","../node_modules/pixi.js/lib/scene/mesh/init.mjs","../node_modules/pixi.js/lib/scene/particle-container/init.mjs","../node_modules/pixi.js/lib/scene/text/init.mjs","../node_modules/pixi.js/lib/scene/text-bitmap/init.mjs","../node_modules/pixi.js/lib/scene/text-html/init.mjs","../node_modules/pixi.js/lib/scene/sprite-tiling/init.mjs","../node_modules/pixi.js/lib/scene/sprite-nine-slice/init.mjs","../node_modules/pixi.js/lib/filters/init.mjs"],"sourcesContent":["\"use strict\";\nconst idCounts = /* @__PURE__ */ Object.create(null);\nconst idHash = /* @__PURE__ */ Object.create(null);\nfunction createIdFromString(value, groupId) {\n  let id = idHash[value];\n  if (id === void 0) {\n    if (idCounts[groupId] === void 0) {\n      idCounts[groupId] = 1;\n    }\n    idHash[value] = id = idCounts[groupId]++;\n  }\n  return id;\n}\n\nexport { createIdFromString };\n//# sourceMappingURL=createIdFromString.mjs.map\n","import { DOMAdapter } from '../../../../../environment/adapter.mjs';\n\n\"use strict\";\nlet context;\nfunction getTestContext() {\n  if (!context || context?.isContextLost()) {\n    const canvas = DOMAdapter.get().createCanvas();\n    context = canvas.getContext(\"webgl\", {});\n  }\n  return context;\n}\n\nexport { getTestContext };\n//# sourceMappingURL=getTestContext.mjs.map\n","import { getTestContext } from './getTestContext.mjs';\n\n\"use strict\";\nlet maxFragmentPrecision;\nfunction getMaxFragmentPrecision() {\n  if (!maxFragmentPrecision) {\n    maxFragmentPrecision = \"mediump\";\n    const gl = getTestContext();\n    if (gl) {\n      if (gl.getShaderPrecisionFormat) {\n        const shaderFragment = gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_FLOAT);\n        maxFragmentPrecision = shaderFragment.precision ? \"highp\" : \"mediump\";\n      }\n    }\n  }\n  return maxFragmentPrecision;\n}\n\nexport { getMaxFragmentPrecision };\n//# sourceMappingURL=getMaxFragmentPrecision.mjs.map\n","\"use strict\";\nfunction addProgramDefines(src, isES300, isFragment) {\n  if (isES300)\n    return src;\n  if (isFragment) {\n    src = src.replace(\"out vec4 finalColor;\", \"\");\n    return `\n        \n        #ifdef GL_ES // This checks if it is WebGL1\n        #define in varying\n        #define finalColor gl_FragColor\n        #define texture texture2D\n        #endif\n        ${src}\n        `;\n  }\n  return `\n        \n        #ifdef GL_ES // This checks if it is WebGL1\n        #define in attribute\n        #define out varying\n        #endif\n        ${src}\n        `;\n}\n\nexport { addProgramDefines };\n//# sourceMappingURL=addProgramDefines.mjs.map\n","\"use strict\";\nfunction ensurePrecision(src, options, isFragment) {\n  const maxSupportedPrecision = isFragment ? options.maxSupportedFragmentPrecision : options.maxSupportedVertexPrecision;\n  if (src.substring(0, 9) !== \"precision\") {\n    let precision = isFragment ? options.requestedFragmentPrecision : options.requestedVertexPrecision;\n    if (precision === \"highp\" && maxSupportedPrecision !== \"highp\") {\n      precision = \"mediump\";\n    }\n    return `precision ${precision} float;\n${src}`;\n  } else if (maxSupportedPrecision !== \"highp\" && src.substring(0, 15) === \"precision highp\") {\n    return src.replace(\"precision highp\", \"precision mediump\");\n  }\n  return src;\n}\n\nexport { ensurePrecision };\n//# sourceMappingURL=ensurePrecision.mjs.map\n","\"use strict\";\nfunction insertVersion(src, isES300) {\n  if (!isES300)\n    return src;\n  return `#version 300 es\n${src}`;\n}\n\nexport { insertVersion };\n//# sourceMappingURL=insertVersion.mjs.map\n","\"use strict\";\nconst fragmentNameCache = {};\nconst VertexNameCache = {};\nfunction setProgramName(src, { name = `pixi-program` }, isFragment = true) {\n  name = name.replace(/\\s+/g, \"-\");\n  name += isFragment ? \"-fragment\" : \"-vertex\";\n  const nameCache = isFragment ? fragmentNameCache : VertexNameCache;\n  if (nameCache[name]) {\n    nameCache[name]++;\n    name += `-${nameCache[name]}`;\n  } else {\n    nameCache[name] = 1;\n  }\n  if (src.indexOf(\"#define SHADER_NAME\") !== -1)\n    return src;\n  const shaderName = `#define SHADER_NAME ${name}`;\n  return `${shaderName}\n${src}`;\n}\n\nexport { setProgramName };\n//# sourceMappingURL=setProgramName.mjs.map\n","\"use strict\";\nfunction stripVersion(src, isES300) {\n  if (!isES300)\n    return src;\n  return src.replace(\"#version 300 es\", \"\");\n}\n\nexport { stripVersion };\n//# sourceMappingURL=stripVersion.mjs.map\n","import { createIdFromString } from '../../shared/utils/createIdFromString.mjs';\nimport { getMaxFragmentPrecision } from './program/getMaxFragmentPrecision.mjs';\nimport { addProgramDefines } from './program/preprocessors/addProgramDefines.mjs';\nimport { ensurePrecision } from './program/preprocessors/ensurePrecision.mjs';\nimport { insertVersion } from './program/preprocessors/insertVersion.mjs';\nimport { setProgramName } from './program/preprocessors/setProgramName.mjs';\nimport { stripVersion } from './program/preprocessors/stripVersion.mjs';\n\n\"use strict\";\nconst processes = {\n  // strips any version headers..\n  stripVersion,\n  // adds precision string if not already present\n  ensurePrecision,\n  // add some defines if WebGL1 to make it more compatible with WebGL2 shaders\n  addProgramDefines,\n  // add the program name to the shader\n  setProgramName,\n  // add the version string to the shader header\n  insertVersion\n};\nconst programCache = /* @__PURE__ */ Object.create(null);\nconst _GlProgram = class _GlProgram {\n  /**\n   * Creates a shiny new GlProgram. Used by WebGL renderer.\n   * @param options - The options for the program.\n   */\n  constructor(options) {\n    options = { ..._GlProgram.defaultOptions, ...options };\n    const isES300 = options.fragment.indexOf(\"#version 300 es\") !== -1;\n    const preprocessorOptions = {\n      stripVersion: isES300,\n      ensurePrecision: {\n        requestedFragmentPrecision: options.preferredFragmentPrecision,\n        requestedVertexPrecision: options.preferredVertexPrecision,\n        maxSupportedVertexPrecision: \"highp\",\n        maxSupportedFragmentPrecision: getMaxFragmentPrecision()\n      },\n      setProgramName: {\n        name: options.name\n      },\n      addProgramDefines: isES300,\n      insertVersion: isES300\n    };\n    let fragment = options.fragment;\n    let vertex = options.vertex;\n    Object.keys(processes).forEach((processKey) => {\n      const processOptions = preprocessorOptions[processKey];\n      fragment = processes[processKey](fragment, processOptions, true);\n      vertex = processes[processKey](vertex, processOptions, false);\n    });\n    this.fragment = fragment;\n    this.vertex = vertex;\n    this.transformFeedbackVaryings = options.transformFeedbackVaryings;\n    this._key = createIdFromString(`${this.vertex}:${this.fragment}`, \"gl-program\");\n  }\n  /** destroys the program */\n  destroy() {\n    this.fragment = null;\n    this.vertex = null;\n    this._attributeData = null;\n    this._uniformData = null;\n    this._uniformBlockData = null;\n    this.transformFeedbackVaryings = null;\n  }\n  /**\n   * Helper function that creates a program for a given source.\n   * It will check the program cache if the program has already been created.\n   * If it has that one will be returned, if not a new one will be created and cached.\n   * @param options - The options for the program.\n   * @returns A program using the same source\n   */\n  static from(options) {\n    const key = `${options.vertex}:${options.fragment}`;\n    if (!programCache[key]) {\n      programCache[key] = new _GlProgram(options);\n    }\n    return programCache[key];\n  }\n};\n/** The default options used by the program. */\n_GlProgram.defaultOptions = {\n  preferredVertexPrecision: \"highp\",\n  preferredFragmentPrecision: \"mediump\"\n};\nlet GlProgram = _GlProgram;\n\nexport { GlProgram };\n//# sourceMappingURL=GlProgram.mjs.map\n","\"use strict\";\nconst attributeFormatData = {\n  uint8x2: { size: 2, stride: 2, normalised: false },\n  uint8x4: { size: 4, stride: 4, normalised: false },\n  sint8x2: { size: 2, stride: 2, normalised: false },\n  sint8x4: { size: 4, stride: 4, normalised: false },\n  unorm8x2: { size: 2, stride: 2, normalised: true },\n  unorm8x4: { size: 4, stride: 4, normalised: true },\n  snorm8x2: { size: 2, stride: 2, normalised: true },\n  snorm8x4: { size: 4, stride: 4, normalised: true },\n  uint16x2: { size: 2, stride: 4, normalised: false },\n  uint16x4: { size: 4, stride: 8, normalised: false },\n  sint16x2: { size: 2, stride: 4, normalised: false },\n  sint16x4: { size: 4, stride: 8, normalised: false },\n  unorm16x2: { size: 2, stride: 4, normalised: true },\n  unorm16x4: { size: 4, stride: 8, normalised: true },\n  snorm16x2: { size: 2, stride: 4, normalised: true },\n  snorm16x4: { size: 4, stride: 8, normalised: true },\n  float16x2: { size: 2, stride: 4, normalised: false },\n  float16x4: { size: 4, stride: 8, normalised: false },\n  float32: { size: 1, stride: 4, normalised: false },\n  float32x2: { size: 2, stride: 8, normalised: false },\n  float32x3: { size: 3, stride: 12, normalised: false },\n  float32x4: { size: 4, stride: 16, normalised: false },\n  uint32: { size: 1, stride: 4, normalised: false },\n  uint32x2: { size: 2, stride: 8, normalised: false },\n  uint32x3: { size: 3, stride: 12, normalised: false },\n  uint32x4: { size: 4, stride: 16, normalised: false },\n  sint32: { size: 1, stride: 4, normalised: false },\n  sint32x2: { size: 2, stride: 8, normalised: false },\n  sint32x3: { size: 3, stride: 12, normalised: false },\n  sint32x4: { size: 4, stride: 16, normalised: false }\n};\nfunction getAttributeInfoFromFormat(format) {\n  return attributeFormatData[format] ?? attributeFormatData.float32;\n}\n\nexport { getAttributeInfoFromFormat };\n//# sourceMappingURL=getAttributeInfoFromFormat.mjs.map\n","import { getAttributeInfoFromFormat } from '../../../shared/geometry/utils/getAttributeInfoFromFormat.mjs';\n\n\"use strict\";\nconst WGSL_TO_VERTEX_TYPES = {\n  f32: \"float32\",\n  \"vec2<f32>\": \"float32x2\",\n  \"vec3<f32>\": \"float32x3\",\n  \"vec4<f32>\": \"float32x4\",\n  vec2f: \"float32x2\",\n  vec3f: \"float32x3\",\n  vec4f: \"float32x4\",\n  i32: \"sint32\",\n  \"vec2<i32>\": \"sint32x2\",\n  \"vec3<i32>\": \"sint32x3\",\n  \"vec4<i32>\": \"sint32x4\",\n  u32: \"uint32\",\n  \"vec2<u32>\": \"uint32x2\",\n  \"vec3<u32>\": \"uint32x3\",\n  \"vec4<u32>\": \"uint32x4\",\n  bool: \"uint32\",\n  \"vec2<bool>\": \"uint32x2\",\n  \"vec3<bool>\": \"uint32x3\",\n  \"vec4<bool>\": \"uint32x4\"\n};\nfunction extractAttributesFromGpuProgram({ source, entryPoint }) {\n  const results = {};\n  const mainVertStart = source.indexOf(`fn ${entryPoint}`);\n  if (mainVertStart !== -1) {\n    const arrowFunctionStart = source.indexOf(\"->\", mainVertStart);\n    if (arrowFunctionStart !== -1) {\n      const functionArgsSubstring = source.substring(mainVertStart, arrowFunctionStart);\n      const inputsRegex = /@location\\((\\d+)\\)\\s+([a-zA-Z0-9_]+)\\s*:\\s*([a-zA-Z0-9_<>]+)(?:,|\\s|$)/g;\n      let match;\n      while ((match = inputsRegex.exec(functionArgsSubstring)) !== null) {\n        const format = WGSL_TO_VERTEX_TYPES[match[3]] ?? \"float32\";\n        results[match[2]] = {\n          location: parseInt(match[1], 10),\n          format,\n          stride: getAttributeInfoFromFormat(format).stride,\n          offset: 0,\n          instance: false,\n          start: 0\n        };\n      }\n    }\n  }\n  return results;\n}\n\nexport { extractAttributesFromGpuProgram };\n//# sourceMappingURL=extractAttributesFromGpuProgram.mjs.map\n","\"use strict\";\nfunction extractStructAndGroups(wgsl) {\n  const linePattern = /(^|[^/])@(group|binding)\\(\\d+\\)[^;]+;/g;\n  const groupPattern = /@group\\((\\d+)\\)/;\n  const bindingPattern = /@binding\\((\\d+)\\)/;\n  const namePattern = /var(<[^>]+>)? (\\w+)/;\n  const typePattern = /:\\s*(\\w+)/;\n  const structPattern = /struct\\s+(\\w+)\\s*{([^}]+)}/g;\n  const structMemberPattern = /(\\w+)\\s*:\\s*([\\w\\<\\>]+)/g;\n  const structName = /struct\\s+(\\w+)/;\n  const groups = wgsl.match(linePattern)?.map((item) => ({\n    group: parseInt(item.match(groupPattern)[1], 10),\n    binding: parseInt(item.match(bindingPattern)[1], 10),\n    name: item.match(namePattern)[2],\n    isUniform: item.match(namePattern)[1] === \"<uniform>\",\n    type: item.match(typePattern)[1]\n  }));\n  if (!groups) {\n    return {\n      groups: [],\n      structs: []\n    };\n  }\n  const structs = wgsl.match(structPattern)?.map((struct) => {\n    const name = struct.match(structName)[1];\n    const members = struct.match(structMemberPattern).reduce((acc, member) => {\n      const [name2, type] = member.split(\":\");\n      acc[name2.trim()] = type.trim();\n      return acc;\n    }, {});\n    if (!members) {\n      return null;\n    }\n    return { name, members };\n  }).filter(({ name }) => groups.some((group) => group.type === name)) ?? [];\n  return {\n    groups,\n    structs\n  };\n}\n\nexport { extractStructAndGroups };\n//# sourceMappingURL=extractStructAndGroups.mjs.map\n","\"use strict\";\nvar ShaderStage = /* @__PURE__ */ ((ShaderStage2) => {\n  ShaderStage2[ShaderStage2[\"VERTEX\"] = 1] = \"VERTEX\";\n  ShaderStage2[ShaderStage2[\"FRAGMENT\"] = 2] = \"FRAGMENT\";\n  ShaderStage2[ShaderStage2[\"COMPUTE\"] = 4] = \"COMPUTE\";\n  return ShaderStage2;\n})(ShaderStage || {});\n\nexport { ShaderStage };\n//# sourceMappingURL=const.mjs.map\n","import { ShaderStage } from '../../../shared/shader/const.mjs';\n\n\"use strict\";\nfunction generateGpuLayoutGroups({ groups }) {\n  const layout = [];\n  for (let i = 0; i < groups.length; i++) {\n    const group = groups[i];\n    if (!layout[group.group]) {\n      layout[group.group] = [];\n    }\n    if (group.isUniform) {\n      layout[group.group].push({\n        binding: group.binding,\n        visibility: ShaderStage.VERTEX | ShaderStage.FRAGMENT,\n        buffer: {\n          type: \"uniform\"\n        }\n      });\n    } else if (group.type === \"sampler\") {\n      layout[group.group].push({\n        binding: group.binding,\n        visibility: ShaderStage.FRAGMENT,\n        sampler: {\n          type: \"filtering\"\n        }\n      });\n    } else if (group.type === \"texture_2d\") {\n      layout[group.group].push({\n        binding: group.binding,\n        visibility: ShaderStage.FRAGMENT,\n        texture: {\n          sampleType: \"float\",\n          viewDimension: \"2d\",\n          multisampled: false\n        }\n      });\n    }\n  }\n  return layout;\n}\n\nexport { generateGpuLayoutGroups };\n//# sourceMappingURL=generateGpuLayoutGroups.mjs.map\n","\"use strict\";\nfunction generateLayoutHash({ groups }) {\n  const layout = [];\n  for (let i = 0; i < groups.length; i++) {\n    const group = groups[i];\n    if (!layout[group.group]) {\n      layout[group.group] = {};\n    }\n    layout[group.group][group.name] = group.binding;\n  }\n  return layout;\n}\n\nexport { generateLayoutHash };\n//# sourceMappingURL=generateLayoutHash.mjs.map\n","\"use strict\";\nfunction removeStructAndGroupDuplicates(vertexStructsAndGroups, fragmentStructsAndGroups) {\n  const structNameSet = /* @__PURE__ */ new Set();\n  const dupeGroupKeySet = /* @__PURE__ */ new Set();\n  const structs = [...vertexStructsAndGroups.structs, ...fragmentStructsAndGroups.structs].filter((struct) => {\n    if (structNameSet.has(struct.name)) {\n      return false;\n    }\n    structNameSet.add(struct.name);\n    return true;\n  });\n  const groups = [...vertexStructsAndGroups.groups, ...fragmentStructsAndGroups.groups].filter((group) => {\n    const key = `${group.name}-${group.binding}`;\n    if (dupeGroupKeySet.has(key)) {\n      return false;\n    }\n    dupeGroupKeySet.add(key);\n    return true;\n  });\n  return { structs, groups };\n}\n\nexport { removeStructAndGroupDuplicates };\n//# sourceMappingURL=removeStructAndGroupDuplicates.mjs.map\n","import { createIdFromString } from '../../shared/utils/createIdFromString.mjs';\nimport { extractAttributesFromGpuProgram } from './utils/extractAttributesFromGpuProgram.mjs';\nimport { extractStructAndGroups } from './utils/extractStructAndGroups.mjs';\nimport { generateGpuLayoutGroups } from './utils/generateGpuLayoutGroups.mjs';\nimport { generateLayoutHash } from './utils/generateLayoutHash.mjs';\nimport { removeStructAndGroupDuplicates } from './utils/removeStructAndGroupDuplicates.mjs';\n\n\"use strict\";\nconst programCache = /* @__PURE__ */ Object.create(null);\nclass GpuProgram {\n  /**\n   * Create a new GpuProgram\n   * @param options - The options for the gpu program\n   */\n  constructor(options) {\n    /**\n     * @internal\n     * @ignore\n     */\n    this._layoutKey = 0;\n    /**\n     * @internal\n     * @ignore\n     */\n    this._attributeLocationsKey = 0;\n    const { fragment, vertex, layout, gpuLayout, name } = options;\n    this.name = name;\n    this.fragment = fragment;\n    this.vertex = vertex;\n    if (fragment.source === vertex.source) {\n      const structsAndGroups = extractStructAndGroups(fragment.source);\n      this.structsAndGroups = structsAndGroups;\n    } else {\n      const vertexStructsAndGroups = extractStructAndGroups(vertex.source);\n      const fragmentStructsAndGroups = extractStructAndGroups(fragment.source);\n      this.structsAndGroups = removeStructAndGroupDuplicates(vertexStructsAndGroups, fragmentStructsAndGroups);\n    }\n    this.layout = layout ?? generateLayoutHash(this.structsAndGroups);\n    this.gpuLayout = gpuLayout ?? generateGpuLayoutGroups(this.structsAndGroups);\n    this.autoAssignGlobalUniforms = !!(this.layout[0]?.globalUniforms !== void 0);\n    this.autoAssignLocalUniforms = !!(this.layout[1]?.localUniforms !== void 0);\n    this._generateProgramKey();\n  }\n  // TODO maker this pure\n  _generateProgramKey() {\n    const { vertex, fragment } = this;\n    const bigKey = vertex.source + fragment.source + vertex.entryPoint + fragment.entryPoint;\n    this._layoutKey = createIdFromString(bigKey, \"program\");\n  }\n  get attributeData() {\n    this._attributeData ?? (this._attributeData = extractAttributesFromGpuProgram(this.vertex));\n    return this._attributeData;\n  }\n  /** destroys the program */\n  destroy() {\n    this.gpuLayout = null;\n    this.layout = null;\n    this.structsAndGroups = null;\n    this.fragment = null;\n    this.vertex = null;\n  }\n  /**\n   * Helper function that creates a program for a given source.\n   * It will check the program cache if the program has already been created.\n   * If it has that one will be returned, if not a new one will be created and cached.\n   * @param options - The options for the program.\n   * @returns A program using the same source\n   */\n  static from(options) {\n    const key = `${options.vertex.source}:${options.fragment.source}:${options.fragment.entryPoint}:${options.vertex.entryPoint}`;\n    if (!programCache[key]) {\n      programCache[key] = new GpuProgram(options);\n    }\n    return programCache[key];\n  }\n}\n\nexport { GpuProgram };\n//# sourceMappingURL=GpuProgram.mjs.map\n","\"use strict\";\nconst UNIFORM_TYPES_VALUES = [\n  \"f32\",\n  \"i32\",\n  \"vec2<f32>\",\n  \"vec3<f32>\",\n  \"vec4<f32>\",\n  \"mat2x2<f32>\",\n  \"mat3x3<f32>\",\n  \"mat4x4<f32>\",\n  \"mat3x2<f32>\",\n  \"mat4x2<f32>\",\n  \"mat2x3<f32>\",\n  \"mat4x3<f32>\",\n  \"mat2x4<f32>\",\n  \"mat3x4<f32>\",\n  \"vec2<i32>\",\n  \"vec3<i32>\",\n  \"vec4<i32>\"\n];\nconst UNIFORM_TYPES_MAP = UNIFORM_TYPES_VALUES.reduce((acc, type) => {\n  acc[type] = true;\n  return acc;\n}, {});\n\nexport { UNIFORM_TYPES_MAP, UNIFORM_TYPES_VALUES };\n//# sourceMappingURL=types.mjs.map\n","\"use strict\";\nfunction getDefaultUniformValue(type, size) {\n  switch (type) {\n    case \"f32\":\n      return 0;\n    case \"vec2<f32>\":\n      return new Float32Array(2 * size);\n    case \"vec3<f32>\":\n      return new Float32Array(3 * size);\n    case \"vec4<f32>\":\n      return new Float32Array(4 * size);\n    case \"mat2x2<f32>\":\n      return new Float32Array([\n        1,\n        0,\n        0,\n        1\n      ]);\n    case \"mat3x3<f32>\":\n      return new Float32Array([\n        1,\n        0,\n        0,\n        0,\n        1,\n        0,\n        0,\n        0,\n        1\n      ]);\n    case \"mat4x4<f32>\":\n      return new Float32Array([\n        1,\n        0,\n        0,\n        0,\n        0,\n        1,\n        0,\n        0,\n        0,\n        0,\n        1,\n        0,\n        0,\n        0,\n        0,\n        1\n      ]);\n  }\n  return null;\n}\n\nexport { getDefaultUniformValue };\n//# sourceMappingURL=getDefaultUniformValue.mjs.map\n","import { uid } from '../../../../utils/data/uid.mjs';\nimport { createIdFromString } from '../utils/createIdFromString.mjs';\nimport { UNIFORM_TYPES_MAP, UNIFORM_TYPES_VALUES } from './types.mjs';\nimport { getDefaultUniformValue } from './utils/getDefaultUniformValue.mjs';\n\n\"use strict\";\nconst _UniformGroup = class _UniformGroup {\n  /**\n   * Create a new Uniform group\n   * @param uniformStructures - The structures of the uniform group\n   * @param options - The optional parameters of this uniform group\n   */\n  constructor(uniformStructures, options) {\n    /** used internally to know if a uniform group was used in the last render pass */\n    this._touched = 0;\n    /** a unique id for this uniform group used through the renderer */\n    this.uid = uid(\"uniform\");\n    /** a resource type, used to identify how to handle it when its in a bind group / shader resource */\n    this._resourceType = \"uniformGroup\";\n    /** the resource id used internally by the renderer to build bind group keys */\n    this._resourceId = uid(\"resource\");\n    /** used ito identify if this is a uniform group */\n    this.isUniformGroup = true;\n    /**\n     * used to flag if this Uniform groups data is different from what it has stored in its buffer / on the GPU\n     * @internal\n     * @ignore\n     */\n    this._dirtyId = 0;\n    // implementing the interface - UniformGroup are not destroyed\n    this.destroyed = false;\n    options = { ..._UniformGroup.defaultOptions, ...options };\n    this.uniformStructures = uniformStructures;\n    const uniforms = {};\n    for (const i in uniformStructures) {\n      const uniformData = uniformStructures[i];\n      uniformData.name = i;\n      uniformData.size = uniformData.size ?? 1;\n      if (!UNIFORM_TYPES_MAP[uniformData.type]) {\n        throw new Error(`Uniform type ${uniformData.type} is not supported. Supported uniform types are: ${UNIFORM_TYPES_VALUES.join(\", \")}`);\n      }\n      uniformData.value ?? (uniformData.value = getDefaultUniformValue(uniformData.type, uniformData.size));\n      uniforms[i] = uniformData.value;\n    }\n    this.uniforms = uniforms;\n    this._dirtyId = 1;\n    this.ubo = options.ubo;\n    this.isStatic = options.isStatic;\n    this._signature = createIdFromString(Object.keys(uniforms).map(\n      (i) => `${i}-${uniformStructures[i].type}`\n    ).join(\"-\"), \"uniform-group\");\n  }\n  /** Call this if you want the uniform groups data to be uploaded to the GPU only useful if `isStatic` is true. */\n  update() {\n    this._dirtyId++;\n  }\n};\n/** The default options used by the uniform group. */\n_UniformGroup.defaultOptions = {\n  /** if true the UniformGroup is handled as an Uniform buffer object. */\n  ubo: false,\n  /** if true, then you are responsible for when the data is uploaded to the GPU by calling `update()` */\n  isStatic: false\n};\nlet UniformGroup = _UniformGroup;\n\nexport { UniformGroup };\n//# sourceMappingURL=UniformGroup.mjs.map\n","\"use strict\";\nclass BindGroup {\n  /**\n   * Create a new instance eof the Bind Group.\n   * @param resources - The resources that are bound together for use by a shader.\n   */\n  constructor(resources) {\n    /** The resources that are bound together for use by a shader. */\n    this.resources = /* @__PURE__ */ Object.create(null);\n    this._dirty = true;\n    let index = 0;\n    for (const i in resources) {\n      const resource = resources[i];\n      this.setResource(resource, index++);\n    }\n    this._updateKey();\n  }\n  /**\n   * Updates the key if its flagged as dirty. This is used internally to\n   * match this bind group to a WebGPU BindGroup.\n   * @internal\n   * @ignore\n   */\n  _updateKey() {\n    if (!this._dirty)\n      return;\n    this._dirty = false;\n    const keyParts = [];\n    let index = 0;\n    for (const i in this.resources) {\n      keyParts[index++] = this.resources[i]._resourceId;\n    }\n    this._key = keyParts.join(\"|\");\n  }\n  /**\n   * Set a resource at a given index. this function will\n   * ensure that listeners will be removed from the current resource\n   * and added to the new resource.\n   * @param resource - The resource to set.\n   * @param index - The index to set the resource at.\n   */\n  setResource(resource, index) {\n    const currentResource = this.resources[index];\n    if (resource === currentResource)\n      return;\n    if (currentResource) {\n      resource.off?.(\"change\", this.onResourceChange, this);\n    }\n    resource.on?.(\"change\", this.onResourceChange, this);\n    this.resources[index] = resource;\n    this._dirty = true;\n  }\n  /**\n   * Returns the resource at the current specified index.\n   * @param index - The index of the resource to get.\n   * @returns - The resource at the specified index.\n   */\n  getResource(index) {\n    return this.resources[index];\n  }\n  /**\n   * Used internally to 'touch' each resource, to ensure that the GC\n   * knows that all resources in this bind group are still being used.\n   * @param tick - The current tick.\n   * @internal\n   * @ignore\n   */\n  _touch(tick) {\n    const resources = this.resources;\n    for (const i in resources) {\n      resources[i]._touched = tick;\n    }\n  }\n  /** Destroys this bind group and removes all listeners. */\n  destroy() {\n    const resources = this.resources;\n    for (const i in resources) {\n      const resource = resources[i];\n      resource.off?.(\"change\", this.onResourceChange, this);\n    }\n    this.resources = null;\n  }\n  onResourceChange(resource) {\n    this._dirty = true;\n    if (resource.destroyed) {\n      const resources = this.resources;\n      for (const i in resources) {\n        if (resources[i] === resource) {\n          resources[i] = null;\n        }\n      }\n    } else {\n      this._updateKey();\n    }\n  }\n}\n\nexport { BindGroup };\n//# sourceMappingURL=BindGroup.mjs.map\n","\"use strict\";\nvar RendererType = /* @__PURE__ */ ((RendererType2) => {\n  RendererType2[RendererType2[\"WEBGL\"] = 1] = \"WEBGL\";\n  RendererType2[RendererType2[\"WEBGPU\"] = 2] = \"WEBGPU\";\n  RendererType2[RendererType2[\"BOTH\"] = 3] = \"BOTH\";\n  return RendererType2;\n})(RendererType || {});\n\nexport { RendererType };\n//# sourceMappingURL=types.mjs.map\n","import EventEmitter from 'eventemitter3';\nimport { GlProgram } from '../../gl/shader/GlProgram.mjs';\nimport { BindGroup } from '../../gpu/shader/BindGroup.mjs';\nimport { GpuProgram } from '../../gpu/shader/GpuProgram.mjs';\nimport { RendererType } from '../../types.mjs';\nimport { UniformGroup } from './UniformGroup.mjs';\n\n\"use strict\";\nclass Shader extends EventEmitter {\n  constructor(options) {\n    super();\n    /**\n     * A record of the uniform groups and resources used by the shader.\n     * This is used by WebGL renderer to sync uniform data.\n     * @internal\n     * @ignore\n     */\n    this._uniformBindMap = /* @__PURE__ */ Object.create(null);\n    this._ownedBindGroups = [];\n    let {\n      gpuProgram,\n      glProgram,\n      groups,\n      resources,\n      compatibleRenderers,\n      groupMap\n    } = options;\n    this.gpuProgram = gpuProgram;\n    this.glProgram = glProgram;\n    if (compatibleRenderers === void 0) {\n      compatibleRenderers = 0;\n      if (gpuProgram)\n        compatibleRenderers |= RendererType.WEBGPU;\n      if (glProgram)\n        compatibleRenderers |= RendererType.WEBGL;\n    }\n    this.compatibleRenderers = compatibleRenderers;\n    const nameHash = {};\n    if (!resources && !groups) {\n      resources = {};\n    }\n    if (resources && groups) {\n      throw new Error(\"[Shader] Cannot have both resources and groups\");\n    } else if (!gpuProgram && groups && !groupMap) {\n      throw new Error(\"[Shader] No group map or WebGPU shader provided - consider using resources instead.\");\n    } else if (!gpuProgram && groups && groupMap) {\n      for (const i in groupMap) {\n        for (const j in groupMap[i]) {\n          const uniformName = groupMap[i][j];\n          nameHash[uniformName] = {\n            group: i,\n            binding: j,\n            name: uniformName\n          };\n        }\n      }\n    } else if (gpuProgram && groups && !groupMap) {\n      const groupData = gpuProgram.structsAndGroups.groups;\n      groupMap = {};\n      groupData.forEach((data) => {\n        groupMap[data.group] = groupMap[data.group] || {};\n        groupMap[data.group][data.binding] = data.name;\n        nameHash[data.name] = data;\n      });\n    } else if (resources) {\n      groups = {};\n      groupMap = {};\n      if (gpuProgram) {\n        const groupData = gpuProgram.structsAndGroups.groups;\n        groupData.forEach((data) => {\n          groupMap[data.group] = groupMap[data.group] || {};\n          groupMap[data.group][data.binding] = data.name;\n          nameHash[data.name] = data;\n        });\n      }\n      let bindTick = 0;\n      for (const i in resources) {\n        if (nameHash[i])\n          continue;\n        if (!groups[99]) {\n          groups[99] = new BindGroup();\n          this._ownedBindGroups.push(groups[99]);\n        }\n        nameHash[i] = { group: 99, binding: bindTick, name: i };\n        groupMap[99] = groupMap[99] || {};\n        groupMap[99][bindTick] = i;\n        bindTick++;\n      }\n      for (const i in resources) {\n        const name = i;\n        let value = resources[i];\n        if (!value.source && !value._resourceType) {\n          value = new UniformGroup(value);\n        }\n        const data = nameHash[name];\n        if (data) {\n          if (!groups[data.group]) {\n            groups[data.group] = new BindGroup();\n            this._ownedBindGroups.push(groups[data.group]);\n          }\n          groups[data.group].setResource(value, data.binding);\n        }\n      }\n    }\n    this.groups = groups;\n    this._uniformBindMap = groupMap;\n    this.resources = this._buildResourceAccessor(groups, nameHash);\n  }\n  /**\n   * Sometimes a resource group will be provided later (for example global uniforms)\n   * In such cases, this method can be used to let the shader know about the group.\n   * @param name - the name of the resource group\n   * @param groupIndex - the index of the group (should match the webGPU shader group location)\n   * @param bindIndex - the index of the bind point (should match the webGPU shader bind point)\n   */\n  addResource(name, groupIndex, bindIndex) {\n    var _a, _b;\n    (_a = this._uniformBindMap)[groupIndex] || (_a[groupIndex] = {});\n    (_b = this._uniformBindMap[groupIndex])[bindIndex] || (_b[bindIndex] = name);\n    if (!this.groups[groupIndex]) {\n      this.groups[groupIndex] = new BindGroup();\n      this._ownedBindGroups.push(this.groups[groupIndex]);\n    }\n  }\n  _buildResourceAccessor(groups, nameHash) {\n    const uniformsOut = {};\n    for (const i in nameHash) {\n      const data = nameHash[i];\n      Object.defineProperty(uniformsOut, data.name, {\n        get() {\n          return groups[data.group].getResource(data.binding);\n        },\n        set(value) {\n          groups[data.group].setResource(value, data.binding);\n        }\n      });\n    }\n    return uniformsOut;\n  }\n  /**\n   * Use to destroy the shader when its not longer needed.\n   * It will destroy the resources and remove listeners.\n   * @param destroyPrograms - if the programs should be destroyed as well.\n   * Make sure its not being used by other shaders!\n   */\n  destroy(destroyPrograms = false) {\n    this.emit(\"destroy\", this);\n    if (destroyPrograms) {\n      this.gpuProgram?.destroy();\n      this.glProgram?.destroy();\n    }\n    this.gpuProgram = null;\n    this.glProgram = null;\n    this.removeAllListeners();\n    this._uniformBindMap = null;\n    this._ownedBindGroups.forEach((bindGroup) => {\n      bindGroup.destroy();\n    });\n    this._ownedBindGroups = null;\n    this.resources = null;\n    this.groups = null;\n  }\n  static from(options) {\n    const { gpu, gl, ...rest } = options;\n    let gpuProgram;\n    let glProgram;\n    if (gpu) {\n      gpuProgram = GpuProgram.from(gpu);\n    }\n    if (gl) {\n      glProgram = GlProgram.from(gl);\n    }\n    return new Shader({\n      gpuProgram,\n      glProgram,\n      ...rest\n    });\n  }\n}\n\nexport { Shader };\n//# sourceMappingURL=Shader.mjs.map\n","\"use strict\";\nconst blendModeIds = {\n  normal: 0,\n  add: 1,\n  multiply: 2,\n  screen: 3,\n  overlay: 4,\n  erase: 5,\n  \"normal-npm\": 6,\n  \"add-npm\": 7,\n  \"screen-npm\": 8,\n  min: 9,\n  max: 10\n};\nconst BLEND = 0;\nconst OFFSET = 1;\nconst CULLING = 2;\nconst DEPTH_TEST = 3;\nconst WINDING = 4;\nconst DEPTH_MASK = 5;\nconst _State = class _State {\n  constructor() {\n    this.data = 0;\n    this.blendMode = \"normal\";\n    this.polygonOffset = 0;\n    this.blend = true;\n    this.depthMask = true;\n  }\n  /**\n   * Activates blending of the computed fragment color values.\n   * @default true\n   */\n  get blend() {\n    return !!(this.data & 1 << BLEND);\n  }\n  set blend(value) {\n    if (!!(this.data & 1 << BLEND) !== value) {\n      this.data ^= 1 << BLEND;\n    }\n  }\n  /**\n   * Activates adding an offset to depth values of polygon's fragments\n   * @default false\n   */\n  get offsets() {\n    return !!(this.data & 1 << OFFSET);\n  }\n  set offsets(value) {\n    if (!!(this.data & 1 << OFFSET) !== value) {\n      this.data ^= 1 << OFFSET;\n    }\n  }\n  /** The culling settings for this state none - No culling back - Back face culling front - Front face culling */\n  set cullMode(value) {\n    if (value === \"none\") {\n      this.culling = false;\n      return;\n    }\n    this.culling = true;\n    this.clockwiseFrontFace = value === \"front\";\n  }\n  get cullMode() {\n    if (!this.culling) {\n      return \"none\";\n    }\n    return this.clockwiseFrontFace ? \"front\" : \"back\";\n  }\n  /**\n   * Activates culling of polygons.\n   * @default false\n   */\n  get culling() {\n    return !!(this.data & 1 << CULLING);\n  }\n  set culling(value) {\n    if (!!(this.data & 1 << CULLING) !== value) {\n      this.data ^= 1 << CULLING;\n    }\n  }\n  /**\n   * Activates depth comparisons and updates to the depth buffer.\n   * @default false\n   */\n  get depthTest() {\n    return !!(this.data & 1 << DEPTH_TEST);\n  }\n  set depthTest(value) {\n    if (!!(this.data & 1 << DEPTH_TEST) !== value) {\n      this.data ^= 1 << DEPTH_TEST;\n    }\n  }\n  /**\n   * Enables or disables writing to the depth buffer.\n   * @default true\n   */\n  get depthMask() {\n    return !!(this.data & 1 << DEPTH_MASK);\n  }\n  set depthMask(value) {\n    if (!!(this.data & 1 << DEPTH_MASK) !== value) {\n      this.data ^= 1 << DEPTH_MASK;\n    }\n  }\n  /**\n   * Specifies whether or not front or back-facing polygons can be culled.\n   * @default false\n   */\n  get clockwiseFrontFace() {\n    return !!(this.data & 1 << WINDING);\n  }\n  set clockwiseFrontFace(value) {\n    if (!!(this.data & 1 << WINDING) !== value) {\n      this.data ^= 1 << WINDING;\n    }\n  }\n  /**\n   * The blend mode to be applied when this state is set. Apply a value of `normal` to reset the blend mode.\n   * Setting this mode to anything other than NO_BLEND will automatically switch blending on.\n   * @default 'normal'\n   */\n  get blendMode() {\n    return this._blendMode;\n  }\n  set blendMode(value) {\n    this.blend = value !== \"none\";\n    this._blendMode = value;\n    this._blendModeId = blendModeIds[value] || 0;\n  }\n  /**\n   * The polygon offset. Setting this property to anything other than 0 will automatically enable polygon offset fill.\n   * @default 0\n   */\n  get polygonOffset() {\n    return this._polygonOffset;\n  }\n  set polygonOffset(value) {\n    this.offsets = !!value;\n    this._polygonOffset = value;\n  }\n  toString() {\n    return `[pixi.js/core:State blendMode=${this.blendMode} clockwiseFrontFace=${this.clockwiseFrontFace} culling=${this.culling} depthMask=${this.depthMask} polygonOffset=${this.polygonOffset}]`;\n  }\n  /**\n   * A quickly getting an instance of a State that is configured for 2d rendering.\n   * @returns a new State with values set for 2d rendering\n   */\n  static for2d() {\n    const state = new _State();\n    state.depthTest = false;\n    state.blend = true;\n    return state;\n  }\n};\n_State.default2d = _State.for2d();\nlet State = _State;\n\nexport { State };\n//# sourceMappingURL=State.mjs.map\n","import { ExtensionType } from '../extensions/Extensions.mjs';\n\n\"use strict\";\nclass ResizePlugin {\n  /**\n   * Initialize the plugin with scope of application instance\n   * @static\n   * @private\n   * @param {object} [options] - See application options\n   */\n  static init(options) {\n    Object.defineProperty(\n      this,\n      \"resizeTo\",\n      /**\n       * The HTML element or window to automatically resize the\n       * renderer's view element to match width and height.\n       * @member {Window|HTMLElement}\n       * @name resizeTo\n       * @memberof app.Application#\n       */\n      {\n        set(dom) {\n          globalThis.removeEventListener(\"resize\", this.queueResize);\n          this._resizeTo = dom;\n          if (dom) {\n            globalThis.addEventListener(\"resize\", this.queueResize);\n            this.resize();\n          }\n        },\n        get() {\n          return this._resizeTo;\n        }\n      }\n    );\n    this.queueResize = () => {\n      if (!this._resizeTo) {\n        return;\n      }\n      this._cancelResize();\n      this._resizeId = requestAnimationFrame(() => this.resize());\n    };\n    this._cancelResize = () => {\n      if (this._resizeId) {\n        cancelAnimationFrame(this._resizeId);\n        this._resizeId = null;\n      }\n    };\n    this.resize = () => {\n      if (!this._resizeTo) {\n        return;\n      }\n      this._cancelResize();\n      let width;\n      let height;\n      if (this._resizeTo === globalThis.window) {\n        width = globalThis.innerWidth;\n        height = globalThis.innerHeight;\n      } else {\n        const { clientWidth, clientHeight } = this._resizeTo;\n        width = clientWidth;\n        height = clientHeight;\n      }\n      this.renderer.resize(width, height);\n      this.render();\n    };\n    this._resizeId = null;\n    this._resizeTo = null;\n    this.resizeTo = options.resizeTo || null;\n  }\n  /**\n   * Clean up the ticker, scoped to application\n   * @static\n   * @private\n   */\n  static destroy() {\n    globalThis.removeEventListener(\"resize\", this.queueResize);\n    this._cancelResize();\n    this._cancelResize = null;\n    this.queueResize = null;\n    this.resizeTo = null;\n    this.resize = null;\n  }\n}\n/** @ignore */\nResizePlugin.extension = ExtensionType.Application;\n\nexport { ResizePlugin };\n//# sourceMappingURL=ResizePlugin.mjs.map\n","import { ExtensionType } from '../extensions/Extensions.mjs';\nimport { UPDATE_PRIORITY } from '../ticker/const.mjs';\nimport { Ticker } from '../ticker/Ticker.mjs';\n\n\"use strict\";\nclass TickerPlugin {\n  /**\n   * Initialize the plugin with scope of application instance\n   * @static\n   * @private\n   * @param {object} [options] - See application options\n   */\n  static init(options) {\n    options = Object.assign({\n      autoStart: true,\n      sharedTicker: false\n    }, options);\n    Object.defineProperty(\n      this,\n      \"ticker\",\n      {\n        set(ticker) {\n          if (this._ticker) {\n            this._ticker.remove(this.render, this);\n          }\n          this._ticker = ticker;\n          if (ticker) {\n            ticker.add(this.render, this, UPDATE_PRIORITY.LOW);\n          }\n        },\n        get() {\n          return this._ticker;\n        }\n      }\n    );\n    this.stop = () => {\n      this._ticker.stop();\n    };\n    this.start = () => {\n      this._ticker.start();\n    };\n    this._ticker = null;\n    this.ticker = options.sharedTicker ? Ticker.shared : new Ticker();\n    if (options.autoStart) {\n      this.start();\n    }\n  }\n  /**\n   * Clean up the ticker, scoped to application.\n   * @static\n   * @private\n   */\n  static destroy() {\n    if (this._ticker) {\n      const oldTicker = this._ticker;\n      this.ticker = null;\n      oldTicker.destroy();\n    }\n  }\n}\n/** @ignore */\nTickerPlugin.extension = ExtensionType.Application;\n\nexport { TickerPlugin };\n//# sourceMappingURL=TickerPlugin.mjs.map\n","import EventEmitter from 'eventemitter3';\nimport { deprecation, v8_0_0 } from '../../utils/logging/deprecation.mjs';\n\n\"use strict\";\nclass AbstractBitmapFont extends EventEmitter {\n  constructor() {\n    super(...arguments);\n    /** The map of characters by character code. */\n    this.chars = /* @__PURE__ */ Object.create(null);\n    /**\n     * The line-height of the font face in pixels.\n     * @type {number}\n     */\n    this.lineHeight = 0;\n    /**\n     * The name of the font face\n     * @type {string}\n     */\n    this.fontFamily = \"\";\n    /** The metrics of the font face. */\n    this.fontMetrics = { fontSize: 0, ascent: 0, descent: 0 };\n    /**\n     * The offset of the font face from the baseline.\n     * @type {number}\n     */\n    this.baseLineOffset = 0;\n    /** The range and type of the distance field for this font. */\n    this.distanceField = { type: \"none\", range: 0 };\n    /** The map of base page textures (i.e., sheets of glyphs). */\n    this.pages = [];\n    /** should the fill for this font be applied as a tint to the text. */\n    this.applyFillAsTint = true;\n    /** The size of the font face in pixels. */\n    this.baseMeasurementFontSize = 100;\n    this.baseRenderedFontSize = 100;\n  }\n  /**\n   * The name of the font face.\n   * @deprecated since 8.0.0 Use `fontFamily` instead.\n   */\n  get font() {\n    deprecation(v8_0_0, \"BitmapFont.font is deprecated, please use BitmapFont.fontFamily instead.\");\n    return this.fontFamily;\n  }\n  /**\n   * The map of base page textures (i.e., sheets of glyphs).\n   * @deprecated since 8.0.0 Use `pages` instead.\n   */\n  get pageTextures() {\n    deprecation(v8_0_0, \"BitmapFont.pageTextures is deprecated, please use BitmapFont.pages instead.\");\n    return this.pages;\n  }\n  /**\n   * The size of the font face in pixels.\n   * @deprecated since 8.0.0 Use `fontMetrics.fontSize` instead.\n   */\n  get size() {\n    deprecation(v8_0_0, \"BitmapFont.size is deprecated, please use BitmapFont.fontMetrics.fontSize instead.\");\n    return this.fontMetrics.fontSize;\n  }\n  /**\n   * The kind of distance field for this font or \"none\".\n   * @deprecated since 8.0.0 Use `distanceField.type` instead.\n   */\n  get distanceFieldRange() {\n    deprecation(v8_0_0, \"BitmapFont.distanceFieldRange is deprecated, please use BitmapFont.distanceField.range instead.\");\n    return this.distanceField.range;\n  }\n  /**\n   * The range of the distance field in pixels.\n   * @deprecated since 8.0.0 Use `distanceField.range` instead.\n   */\n  get distanceFieldType() {\n    deprecation(v8_0_0, \"BitmapFont.distanceFieldType is deprecated, please use BitmapFont.distanceField.type instead.\");\n    return this.distanceField.type;\n  }\n  destroy(destroyTextures = false) {\n    this.emit(\"destroy\", this);\n    this.removeAllListeners();\n    for (const i in this.chars) {\n      this.chars[i].texture?.destroy();\n    }\n    this.chars = null;\n    if (destroyTextures) {\n      this.pages.forEach((page) => page.texture.destroy(true));\n      this.pages = null;\n    }\n  }\n}\n\nexport { AbstractBitmapFont };\n//# sourceMappingURL=AbstractBitmapFont.mjs.map\n","import { Color } from '../../../../color/Color.mjs';\nimport { DOMAdapter } from '../../../../environment/adapter.mjs';\nimport { Matrix } from '../../../../maths/matrix/Matrix.mjs';\nimport { ImageSource } from '../../../../rendering/renderers/shared/texture/sources/ImageSource.mjs';\nimport { Texture } from '../../../../rendering/renderers/shared/texture/Texture.mjs';\nimport { uid } from '../../../../utils/data/uid.mjs';\n\n\"use strict\";\nconst _FillGradient = class _FillGradient {\n  constructor(x0, y0, x1, y1) {\n    /** unique id for this fill gradient */\n    this.uid = uid(\"fillGradient\");\n    this.type = \"linear\";\n    this.gradientStops = [];\n    this._styleKey = null;\n    this.x0 = x0;\n    this.y0 = y0;\n    this.x1 = x1;\n    this.y1 = y1;\n  }\n  addColorStop(offset, color) {\n    this.gradientStops.push({ offset, color: Color.shared.setValue(color).toHexa() });\n    this._styleKey = null;\n    return this;\n  }\n  // TODO move to the system!\n  buildLinearGradient() {\n    if (this.texture)\n      return;\n    const defaultSize = _FillGradient.defaultTextureSize;\n    const { gradientStops } = this;\n    const canvas = DOMAdapter.get().createCanvas();\n    canvas.width = defaultSize;\n    canvas.height = defaultSize;\n    const ctx = canvas.getContext(\"2d\");\n    const gradient = ctx.createLinearGradient(0, 0, _FillGradient.defaultTextureSize, 1);\n    for (let i = 0; i < gradientStops.length; i++) {\n      const stop = gradientStops[i];\n      gradient.addColorStop(stop.offset, stop.color);\n    }\n    ctx.fillStyle = gradient;\n    ctx.fillRect(0, 0, defaultSize, defaultSize);\n    this.texture = new Texture({\n      source: new ImageSource({\n        resource: canvas,\n        addressModeU: \"clamp-to-edge\",\n        addressModeV: \"repeat\"\n      })\n    });\n    const { x0, y0, x1, y1 } = this;\n    const m = new Matrix();\n    const dx = x1 - x0;\n    const dy = y1 - y0;\n    const dist = Math.sqrt(dx * dx + dy * dy);\n    const angle = Math.atan2(dy, dx);\n    m.translate(-x0, -y0);\n    m.scale(1 / defaultSize, 1 / defaultSize);\n    m.rotate(-angle);\n    m.scale(256 / dist, 1);\n    this.transform = m;\n    this._styleKey = null;\n  }\n  get styleKey() {\n    if (this._styleKey) {\n      return this._styleKey;\n    }\n    const stops = this.gradientStops.map((stop) => `${stop.offset}-${stop.color}`).join(\"-\");\n    const texture = this.texture.uid;\n    const transform = this.transform.toArray().join(\"-\");\n    return `fill-gradient-${this.uid}-${stops}-${texture}-${transform}-${this.x0}-${this.y0}-${this.x1}-${this.y1}`;\n  }\n};\n_FillGradient.defaultTextureSize = 256;\nlet FillGradient = _FillGradient;\n\nexport { FillGradient };\n//# sourceMappingURL=FillGradient.mjs.map\n","import { Matrix } from '../../../../maths/matrix/Matrix.mjs';\nimport { uid } from '../../../../utils/data/uid.mjs';\n\n\"use strict\";\nconst repetitionMap = {\n  repeat: {\n    addressModeU: \"repeat\",\n    addressModeV: \"repeat\"\n  },\n  \"repeat-x\": {\n    addressModeU: \"repeat\",\n    addressModeV: \"clamp-to-edge\"\n  },\n  \"repeat-y\": {\n    addressModeU: \"clamp-to-edge\",\n    addressModeV: \"repeat\"\n  },\n  \"no-repeat\": {\n    addressModeU: \"clamp-to-edge\",\n    addressModeV: \"clamp-to-edge\"\n  }\n};\nclass FillPattern {\n  constructor(texture, repetition) {\n    /** unique id for this fill pattern */\n    this.uid = uid(\"fillPattern\");\n    this.transform = new Matrix();\n    this._styleKey = null;\n    this.texture = texture;\n    this.transform.scale(\n      1 / texture.frame.width,\n      1 / texture.frame.height\n    );\n    if (repetition) {\n      texture.source.style.addressModeU = repetitionMap[repetition].addressModeU;\n      texture.source.style.addressModeV = repetitionMap[repetition].addressModeV;\n    }\n  }\n  setTransform(transform) {\n    const texture = this.texture;\n    this.transform.copyFrom(transform);\n    this.transform.invert();\n    this.transform.scale(\n      1 / texture.frame.width,\n      1 / texture.frame.height\n    );\n    this._styleKey = null;\n  }\n  get styleKey() {\n    if (this._styleKey)\n      return this._styleKey;\n    this._styleKey = `fill-pattern-${this.uid}-${this.texture.uid}-${this.transform.toArray().join(\"-\")}`;\n    return this._styleKey;\n  }\n}\n\nexport { FillPattern };\n//# sourceMappingURL=FillPattern.mjs.map\n","\nmodule.exports = parse\n\n/**\n * expected argument lengths\n * @type {Object}\n */\n\nvar length = {a: 7, c: 6, h: 1, l: 2, m: 2, q: 4, s: 4, t: 2, v: 1, z: 0}\n\n/**\n * segment pattern\n * @type {RegExp}\n */\n\nvar segment = /([astvzqmhlc])([^astvzqmhlc]*)/ig\n\n/**\n * parse an svg path data string. Generates an Array\n * of commands where each command is an Array of the\n * form `[command, arg1, arg2, ...]`\n *\n * @param {String} path\n * @return {Array}\n */\n\nfunction parse(path) {\n\tvar data = []\n\tpath.replace(segment, function(_, command, args){\n\t\tvar type = command.toLowerCase()\n\t\targs = parseValues(args)\n\n\t\t// overloaded moveTo\n\t\tif (type == 'm' && args.length > 2) {\n\t\t\tdata.push([command].concat(args.splice(0, 2)))\n\t\t\ttype = 'l'\n\t\t\tcommand = command == 'm' ? 'l' : 'L'\n\t\t}\n\n\t\twhile (true) {\n\t\t\tif (args.length == length[type]) {\n\t\t\t\targs.unshift(command)\n\t\t\t\treturn data.push(args)\n\t\t\t}\n\t\t\tif (args.length < length[type]) throw new Error('malformed path data')\n\t\t\tdata.push([command].concat(args.splice(0, length[type])))\n\t\t}\n\t})\n\treturn data\n}\n\nvar number = /-?[0-9]*\\.?[0-9]+(?:e[-+]?\\d+)?/ig\n\nfunction parseValues(args) {\n\tvar numbers = args.match(number)\n\treturn numbers ? numbers.map(Number) : []\n}\n","import parse from 'parse-svg-path';\nimport { warn } from '../../../../utils/logging/warn.mjs';\n\n\"use strict\";\nfunction SVGToGraphicsPath(svgPath, path) {\n  const commands = parse(svgPath);\n  const subpaths = [];\n  let currentSubPath = null;\n  let lastX = 0;\n  let lastY = 0;\n  for (let i = 0; i < commands.length; i++) {\n    const command = commands[i];\n    const type = command[0];\n    const data = command;\n    switch (type) {\n      case \"M\":\n        lastX = data[1];\n        lastY = data[2];\n        path.moveTo(lastX, lastY);\n        break;\n      case \"m\":\n        lastX += data[1];\n        lastY += data[2];\n        path.moveTo(lastX, lastY);\n        break;\n      case \"H\":\n        lastX = data[1];\n        path.lineTo(lastX, lastY);\n        break;\n      case \"h\":\n        lastX += data[1];\n        path.lineTo(lastX, lastY);\n        break;\n      case \"V\":\n        lastY = data[1];\n        path.lineTo(lastX, lastY);\n        break;\n      case \"v\":\n        lastY += data[1];\n        path.lineTo(lastX, lastY);\n        break;\n      case \"L\":\n        lastX = data[1];\n        lastY = data[2];\n        path.lineTo(lastX, lastY);\n        break;\n      case \"l\":\n        lastX += data[1];\n        lastY += data[2];\n        path.lineTo(lastX, lastY);\n        break;\n      case \"C\":\n        lastX = data[5];\n        lastY = data[6];\n        path.bezierCurveTo(\n          data[1],\n          data[2],\n          data[3],\n          data[4],\n          lastX,\n          lastY\n        );\n        break;\n      case \"c\":\n        path.bezierCurveTo(\n          lastX + data[1],\n          lastY + data[2],\n          lastX + data[3],\n          lastY + data[4],\n          lastX + data[5],\n          lastY + data[6]\n        );\n        lastX += data[5];\n        lastY += data[6];\n        break;\n      case \"S\":\n        lastX = data[3];\n        lastY = data[4];\n        path.bezierCurveToShort(\n          data[1],\n          data[2],\n          lastX,\n          lastY\n        );\n        break;\n      case \"s\":\n        path.bezierCurveToShort(\n          lastX + data[1],\n          lastY + data[2],\n          lastX + data[3],\n          lastY + data[4]\n        );\n        lastX += data[3];\n        lastY += data[4];\n        break;\n      case \"Q\":\n        lastX = data[3];\n        lastY = data[4];\n        path.quadraticCurveTo(\n          data[1],\n          data[2],\n          lastX,\n          lastY\n        );\n        break;\n      case \"q\":\n        path.quadraticCurveTo(\n          lastX + data[1],\n          lastY + data[2],\n          lastX + data[3],\n          lastY + data[4]\n        );\n        lastX += data[3];\n        lastY += data[4];\n        break;\n      case \"T\":\n        lastX = data[1];\n        lastY = data[2];\n        path.quadraticCurveToShort(\n          lastX,\n          lastY\n        );\n        break;\n      case \"t\":\n        lastX += data[1];\n        lastY += data[2];\n        path.quadraticCurveToShort(\n          lastX,\n          lastY\n        );\n        break;\n      case \"A\":\n        lastX = data[6];\n        lastY = data[7];\n        path.arcToSvg(\n          data[1],\n          data[2],\n          data[3],\n          data[4],\n          data[5],\n          lastX,\n          lastY\n        );\n        break;\n      case \"a\":\n        lastX += data[6];\n        lastY += data[7];\n        path.arcToSvg(\n          data[1],\n          data[2],\n          data[3],\n          data[4],\n          data[5],\n          lastX,\n          lastY\n        );\n        break;\n      case \"Z\":\n      case \"z\":\n        path.closePath();\n        if (subpaths.length > 0) {\n          currentSubPath = subpaths.pop();\n          if (currentSubPath) {\n            lastX = currentSubPath.startX;\n            lastY = currentSubPath.startY;\n          } else {\n            lastX = 0;\n            lastY = 0;\n          }\n        }\n        currentSubPath = null;\n        break;\n      default:\n        warn(`Unknown SVG path command: ${type}`);\n    }\n    if (type !== \"Z\" && type !== \"z\") {\n      if (currentSubPath === null) {\n        currentSubPath = { startX: lastX, startY: lastY };\n        subpaths.push(currentSubPath);\n      }\n    }\n  }\n  return path;\n}\n\nexport { SVGToGraphicsPath };\n//# sourceMappingURL=SVGToGraphicsPath.mjs.map\n","import { Rectangle } from './Rectangle.mjs';\n\n\"use strict\";\nclass Circle {\n  /**\n   * @param x - The X coordinate of the center of this circle\n   * @param y - The Y coordinate of the center of this circle\n   * @param radius - The radius of the circle\n   */\n  constructor(x = 0, y = 0, radius = 0) {\n    /**\n     * The type of the object, mainly used to avoid `instanceof` checks\n     * @default 'circle'\n     */\n    this.type = \"circle\";\n    this.x = x;\n    this.y = y;\n    this.radius = radius;\n  }\n  /**\n   * Creates a clone of this Circle instance\n   * @returns A copy of the Circle\n   */\n  clone() {\n    return new Circle(this.x, this.y, this.radius);\n  }\n  /**\n   * Checks whether the x and y coordinates given are contained within this circle\n   * @param x - The X coordinate of the point to test\n   * @param y - The Y coordinate of the point to test\n   * @returns Whether the x/y coordinates are within this Circle\n   */\n  contains(x, y) {\n    if (this.radius <= 0)\n      return false;\n    const r2 = this.radius * this.radius;\n    let dx = this.x - x;\n    let dy = this.y - y;\n    dx *= dx;\n    dy *= dy;\n    return dx + dy <= r2;\n  }\n  /**\n   * Checks whether the x and y coordinates given are contained within this circle including the stroke.\n   * @param x - The X coordinate of the point to test\n   * @param y - The Y coordinate of the point to test\n   * @param width - The width of the line to check\n   * @param alignment - The alignment of the stroke, 0.5 by default\n   * @returns Whether the x/y coordinates are within this Circle\n   */\n  strokeContains(x, y, width, alignment = 0.5) {\n    if (this.radius === 0)\n      return false;\n    const dx = this.x - x;\n    const dy = this.y - y;\n    const radius = this.radius;\n    const outerWidth = (1 - alignment) * width;\n    const distance = Math.sqrt(dx * dx + dy * dy);\n    return distance <= radius + outerWidth && distance > radius - (width - outerWidth);\n  }\n  /**\n   * Returns the framing rectangle of the circle as a Rectangle object\n   * @param out\n   * @returns The framing rectangle\n   */\n  getBounds(out) {\n    out || (out = new Rectangle());\n    out.x = this.x - this.radius;\n    out.y = this.y - this.radius;\n    out.width = this.radius * 2;\n    out.height = this.radius * 2;\n    return out;\n  }\n  /**\n   * Copies another circle to this one.\n   * @param circle - The circle to copy from.\n   * @returns Returns itself.\n   */\n  copyFrom(circle) {\n    this.x = circle.x;\n    this.y = circle.y;\n    this.radius = circle.radius;\n    return this;\n  }\n  /**\n   * Copies this circle to another one.\n   * @param circle - The circle to copy to.\n   * @returns Returns given parameter.\n   */\n  copyTo(circle) {\n    circle.copyFrom(this);\n    return circle;\n  }\n  toString() {\n    return `[pixi.js/math:Circle x=${this.x} y=${this.y} radius=${this.radius}]`;\n  }\n}\n\nexport { Circle };\n//# sourceMappingURL=Circle.mjs.map\n","import { Rectangle } from './Rectangle.mjs';\n\n\"use strict\";\nclass Ellipse {\n  /**\n   * @param x - The X coordinate of the center of this ellipse\n   * @param y - The Y coordinate of the center of this ellipse\n   * @param halfWidth - The half width of this ellipse\n   * @param halfHeight - The half height of this ellipse\n   */\n  constructor(x = 0, y = 0, halfWidth = 0, halfHeight = 0) {\n    /**\n     * The type of the object, mainly used to avoid `instanceof` checks\n     * @default 'ellipse'\n     */\n    this.type = \"ellipse\";\n    this.x = x;\n    this.y = y;\n    this.halfWidth = halfWidth;\n    this.halfHeight = halfHeight;\n  }\n  /**\n   * Creates a clone of this Ellipse instance\n   * @returns {Ellipse} A copy of the ellipse\n   */\n  clone() {\n    return new Ellipse(this.x, this.y, this.halfWidth, this.halfHeight);\n  }\n  /**\n   * Checks whether the x and y coordinates given are contained within this ellipse\n   * @param x - The X coordinate of the point to test\n   * @param y - The Y coordinate of the point to test\n   * @returns Whether the x/y coords are within this ellipse\n   */\n  contains(x, y) {\n    if (this.halfWidth <= 0 || this.halfHeight <= 0) {\n      return false;\n    }\n    let normx = (x - this.x) / this.halfWidth;\n    let normy = (y - this.y) / this.halfHeight;\n    normx *= normx;\n    normy *= normy;\n    return normx + normy <= 1;\n  }\n  /**\n   * Checks whether the x and y coordinates given are contained within this ellipse including stroke\n   * @param x - The X coordinate of the point to test\n   * @param y - The Y coordinate of the point to test\n   * @param strokeWidth - The width of the line to check\n   * @param alignment - The alignment of the stroke\n   * @returns Whether the x/y coords are within this ellipse\n   */\n  strokeContains(x, y, strokeWidth, alignment = 0.5) {\n    const { halfWidth, halfHeight } = this;\n    if (halfWidth <= 0 || halfHeight <= 0) {\n      return false;\n    }\n    const strokeOuterWidth = strokeWidth * (1 - alignment);\n    const strokeInnerWidth = strokeWidth - strokeOuterWidth;\n    const innerHorizontal = halfWidth - strokeInnerWidth;\n    const innerVertical = halfHeight - strokeInnerWidth;\n    const outerHorizontal = halfWidth + strokeOuterWidth;\n    const outerVertical = halfHeight + strokeOuterWidth;\n    const normalizedX = x - this.x;\n    const normalizedY = y - this.y;\n    const innerEllipse = normalizedX * normalizedX / (innerHorizontal * innerHorizontal) + normalizedY * normalizedY / (innerVertical * innerVertical);\n    const outerEllipse = normalizedX * normalizedX / (outerHorizontal * outerHorizontal) + normalizedY * normalizedY / (outerVertical * outerVertical);\n    return innerEllipse > 1 && outerEllipse <= 1;\n  }\n  /**\n   * Returns the framing rectangle of the ellipse as a Rectangle object\n   * @param out\n   * @returns The framing rectangle\n   */\n  getBounds(out) {\n    out || (out = new Rectangle());\n    out.x = this.x - this.halfWidth;\n    out.y = this.y - this.halfHeight;\n    out.width = this.halfWidth * 2;\n    out.height = this.halfHeight * 2;\n    return out;\n  }\n  /**\n   * Copies another ellipse to this one.\n   * @param ellipse - The ellipse to copy from.\n   * @returns Returns itself.\n   */\n  copyFrom(ellipse) {\n    this.x = ellipse.x;\n    this.y = ellipse.y;\n    this.halfWidth = ellipse.halfWidth;\n    this.halfHeight = ellipse.halfHeight;\n    return this;\n  }\n  /**\n   * Copies this ellipse to another one.\n   * @param ellipse - The ellipse to copy to.\n   * @returns Returns given parameter.\n   */\n  copyTo(ellipse) {\n    ellipse.copyFrom(this);\n    return ellipse;\n  }\n  toString() {\n    return `[pixi.js/math:Ellipse x=${this.x} y=${this.y} halfWidth=${this.halfWidth} halfHeight=${this.halfHeight}]`;\n  }\n}\n\nexport { Ellipse };\n//# sourceMappingURL=Ellipse.mjs.map\n","\"use strict\";\nfunction squaredDistanceToLineSegment(x, y, x1, y1, x2, y2) {\n  const a = x - x1;\n  const b = y - y1;\n  const c = x2 - x1;\n  const d = y2 - y1;\n  const dot = a * c + b * d;\n  const lenSq = c * c + d * d;\n  let param = -1;\n  if (lenSq !== 0) {\n    param = dot / lenSq;\n  }\n  let xx;\n  let yy;\n  if (param < 0) {\n    xx = x1;\n    yy = y1;\n  } else if (param > 1) {\n    xx = x2;\n    yy = y2;\n  } else {\n    xx = x1 + param * c;\n    yy = y1 + param * d;\n  }\n  const dx = x - xx;\n  const dy = y - yy;\n  return dx * dx + dy * dy;\n}\n\nexport { squaredDistanceToLineSegment };\n//# sourceMappingURL=squaredDistanceToLineSegment.mjs.map\n","import { squaredDistanceToLineSegment } from '../misc/squaredDistanceToLineSegment.mjs';\nimport { Rectangle } from './Rectangle.mjs';\n\n\"use strict\";\nclass Polygon {\n  /**\n   * @param points - This can be an array of Points\n   *  that form the polygon, a flat array of numbers that will be interpreted as [x,y, x,y, ...], or\n   *  the arguments passed can be all the points of the polygon e.g.\n   *  `new Polygon(new Point(), new Point(), ...)`, or the arguments passed can be flat\n   *  x,y values e.g. `new Polygon(x,y, x,y, x,y, ...)` where `x` and `y` are Numbers.\n   */\n  constructor(...points) {\n    /**\n     * The type of the object, mainly used to avoid `instanceof` checks\n     * @default 'polygon'\n     */\n    this.type = \"polygon\";\n    let flat = Array.isArray(points[0]) ? points[0] : points;\n    if (typeof flat[0] !== \"number\") {\n      const p = [];\n      for (let i = 0, il = flat.length; i < il; i++) {\n        p.push(flat[i].x, flat[i].y);\n      }\n      flat = p;\n    }\n    this.points = flat;\n    this.closePath = true;\n  }\n  /**\n   * Creates a clone of this polygon.\n   * @returns - A copy of the polygon.\n   */\n  clone() {\n    const points = this.points.slice();\n    const polygon = new Polygon(points);\n    polygon.closePath = this.closePath;\n    return polygon;\n  }\n  /**\n   * Checks whether the x and y coordinates passed to this function are contained within this polygon.\n   * @param x - The X coordinate of the point to test.\n   * @param y - The Y coordinate of the point to test.\n   * @returns - Whether the x/y coordinates are within this polygon.\n   */\n  contains(x, y) {\n    let inside = false;\n    const length = this.points.length / 2;\n    for (let i = 0, j = length - 1; i < length; j = i++) {\n      const xi = this.points[i * 2];\n      const yi = this.points[i * 2 + 1];\n      const xj = this.points[j * 2];\n      const yj = this.points[j * 2 + 1];\n      const intersect = yi > y !== yj > y && x < (xj - xi) * ((y - yi) / (yj - yi)) + xi;\n      if (intersect) {\n        inside = !inside;\n      }\n    }\n    return inside;\n  }\n  /**\n   * Checks whether the x and y coordinates given are contained within this polygon including the stroke.\n   * @param x - The X coordinate of the point to test\n   * @param y - The Y coordinate of the point to test\n   * @param strokeWidth - The width of the line to check\n   * @param alignment - The alignment of the stroke, 0.5 by default\n   * @returns Whether the x/y coordinates are within this polygon\n   */\n  strokeContains(x, y, strokeWidth, alignment = 0.5) {\n    const strokeWidthSquared = strokeWidth * strokeWidth;\n    const rightWidthSquared = strokeWidthSquared * (1 - alignment);\n    const leftWidthSquared = strokeWidthSquared - rightWidthSquared;\n    const { points } = this;\n    const iterationLength = points.length - (this.closePath ? 0 : 2);\n    for (let i = 0; i < iterationLength; i += 2) {\n      const x1 = points[i];\n      const y1 = points[i + 1];\n      const x2 = points[(i + 2) % points.length];\n      const y2 = points[(i + 3) % points.length];\n      const distanceSquared = squaredDistanceToLineSegment(x, y, x1, y1, x2, y2);\n      const sign = Math.sign((x2 - x1) * (y - y1) - (y2 - y1) * (x - x1));\n      if (distanceSquared <= (sign < 0 ? leftWidthSquared : rightWidthSquared)) {\n        return true;\n      }\n    }\n    return false;\n  }\n  /**\n   * Returns the framing rectangle of the polygon as a Rectangle object\n   * @param out - optional rectangle to store the result\n   * @returns The framing rectangle\n   */\n  getBounds(out) {\n    out || (out = new Rectangle());\n    const points = this.points;\n    let minX = Infinity;\n    let maxX = -Infinity;\n    let minY = Infinity;\n    let maxY = -Infinity;\n    for (let i = 0, n = points.length; i < n; i += 2) {\n      const x = points[i];\n      const y = points[i + 1];\n      minX = x < minX ? x : minX;\n      maxX = x > maxX ? x : maxX;\n      minY = y < minY ? y : minY;\n      maxY = y > maxY ? y : maxY;\n    }\n    out.x = minX;\n    out.width = maxX - minX;\n    out.y = minY;\n    out.height = maxY - minY;\n    return out;\n  }\n  /**\n   * Copies another polygon to this one.\n   * @param polygon - The polygon to copy from.\n   * @returns Returns itself.\n   */\n  copyFrom(polygon) {\n    this.points = polygon.points.slice();\n    this.closePath = polygon.closePath;\n    return this;\n  }\n  /**\n   * Copies this polygon to another one.\n   * @param polygon - The polygon to copy to.\n   * @returns Returns given parameter.\n   */\n  copyTo(polygon) {\n    polygon.copyFrom(this);\n    return polygon;\n  }\n  toString() {\n    return `[pixi.js/math:PolygoncloseStroke=${this.closePath}points=${this.points.reduce((pointsDesc, currentPoint) => `${pointsDesc}, ${currentPoint}`, \"\")}]`;\n  }\n  /**\n   * Get the last X coordinate of the polygon\n   * @readonly\n   */\n  get lastX() {\n    return this.points[this.points.length - 2];\n  }\n  /**\n   * Get the last Y coordinate of the polygon\n   * @readonly\n   */\n  get lastY() {\n    return this.points[this.points.length - 1];\n  }\n  /**\n   * Get the first X coordinate of the polygon\n   * @readonly\n   */\n  get x() {\n    return this.points[this.points.length - 2];\n  }\n  /**\n   * Get the first Y coordinate of the polygon\n   * @readonly\n   */\n  get y() {\n    return this.points[this.points.length - 1];\n  }\n}\n\nexport { Polygon };\n//# sourceMappingURL=Polygon.mjs.map\n","import { Rectangle } from './Rectangle.mjs';\n\n\"use strict\";\nconst isCornerWithinStroke = (pX, pY, cornerX, cornerY, radius, strokeWidthInner, strokeWidthOuter) => {\n  const dx = pX - cornerX;\n  const dy = pY - cornerY;\n  const distance = Math.sqrt(dx * dx + dy * dy);\n  return distance >= radius - strokeWidthInner && distance <= radius + strokeWidthOuter;\n};\nclass RoundedRectangle {\n  /**\n   * @param x - The X coordinate of the upper-left corner of the rounded rectangle\n   * @param y - The Y coordinate of the upper-left corner of the rounded rectangle\n   * @param width - The overall width of this rounded rectangle\n   * @param height - The overall height of this rounded rectangle\n   * @param radius - Controls the radius of the rounded corners\n   */\n  constructor(x = 0, y = 0, width = 0, height = 0, radius = 20) {\n    /**\n     * The type of the object, mainly used to avoid `instanceof` checks\n     * @default 'roundedRectangle'\n     */\n    this.type = \"roundedRectangle\";\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n    this.radius = radius;\n  }\n  /**\n   * Returns the framing rectangle of the rounded rectangle as a Rectangle object\n   * @param out - optional rectangle to store the result\n   * @returns The framing rectangle\n   */\n  getBounds(out) {\n    out || (out = new Rectangle());\n    out.x = this.x;\n    out.y = this.y;\n    out.width = this.width;\n    out.height = this.height;\n    return out;\n  }\n  /**\n   * Creates a clone of this Rounded Rectangle.\n   * @returns - A copy of the rounded rectangle.\n   */\n  clone() {\n    return new RoundedRectangle(this.x, this.y, this.width, this.height, this.radius);\n  }\n  /**\n   * Copies another rectangle to this one.\n   * @param rectangle - The rectangle to copy from.\n   * @returns Returns itself.\n   */\n  copyFrom(rectangle) {\n    this.x = rectangle.x;\n    this.y = rectangle.y;\n    this.width = rectangle.width;\n    this.height = rectangle.height;\n    return this;\n  }\n  /**\n   * Copies this rectangle to another one.\n   * @param rectangle - The rectangle to copy to.\n   * @returns Returns given parameter.\n   */\n  copyTo(rectangle) {\n    rectangle.copyFrom(this);\n    return rectangle;\n  }\n  /**\n   * Checks whether the x and y coordinates given are contained within this Rounded Rectangle\n   * @param x - The X coordinate of the point to test.\n   * @param y - The Y coordinate of the point to test.\n   * @returns - Whether the x/y coordinates are within this Rounded Rectangle.\n   */\n  contains(x, y) {\n    if (this.width <= 0 || this.height <= 0) {\n      return false;\n    }\n    if (x >= this.x && x <= this.x + this.width) {\n      if (y >= this.y && y <= this.y + this.height) {\n        const radius = Math.max(0, Math.min(this.radius, Math.min(this.width, this.height) / 2));\n        if (y >= this.y + radius && y <= this.y + this.height - radius || x >= this.x + radius && x <= this.x + this.width - radius) {\n          return true;\n        }\n        let dx = x - (this.x + radius);\n        let dy = y - (this.y + radius);\n        const radius2 = radius * radius;\n        if (dx * dx + dy * dy <= radius2) {\n          return true;\n        }\n        dx = x - (this.x + this.width - radius);\n        if (dx * dx + dy * dy <= radius2) {\n          return true;\n        }\n        dy = y - (this.y + this.height - radius);\n        if (dx * dx + dy * dy <= radius2) {\n          return true;\n        }\n        dx = x - (this.x + radius);\n        if (dx * dx + dy * dy <= radius2) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n  /**\n   * Checks whether the x and y coordinates given are contained within this rectangle including the stroke.\n   * @param pX - The X coordinate of the point to test\n   * @param pY - The Y coordinate of the point to test\n   * @param strokeWidth - The width of the line to check\n   * @param alignment - The alignment of the stroke, 0.5 by default\n   * @returns Whether the x/y coordinates are within this rectangle\n   */\n  strokeContains(pX, pY, strokeWidth, alignment = 0.5) {\n    const { x, y, width, height, radius } = this;\n    const strokeWidthOuter = strokeWidth * (1 - alignment);\n    const strokeWidthInner = strokeWidth - strokeWidthOuter;\n    const innerX = x + radius;\n    const innerY = y + radius;\n    const innerWidth = width - radius * 2;\n    const innerHeight = height - radius * 2;\n    const rightBound = x + width;\n    const bottomBound = y + height;\n    if ((pX >= x - strokeWidthOuter && pX <= x + strokeWidthInner || pX >= rightBound - strokeWidthInner && pX <= rightBound + strokeWidthOuter) && pY >= innerY && pY <= innerY + innerHeight) {\n      return true;\n    }\n    if ((pY >= y - strokeWidthOuter && pY <= y + strokeWidthInner || pY >= bottomBound - strokeWidthInner && pY <= bottomBound + strokeWidthOuter) && pX >= innerX && pX <= innerX + innerWidth) {\n      return true;\n    }\n    return (\n      // Top-left\n      pX < innerX && pY < innerY && isCornerWithinStroke(\n        pX,\n        pY,\n        innerX,\n        innerY,\n        radius,\n        strokeWidthInner,\n        strokeWidthOuter\n      ) || pX > rightBound - radius && pY < innerY && isCornerWithinStroke(\n        pX,\n        pY,\n        rightBound - radius,\n        innerY,\n        radius,\n        strokeWidthInner,\n        strokeWidthOuter\n      ) || pX > rightBound - radius && pY > bottomBound - radius && isCornerWithinStroke(\n        pX,\n        pY,\n        rightBound - radius,\n        bottomBound - radius,\n        radius,\n        strokeWidthInner,\n        strokeWidthOuter\n      ) || pX < innerX && pY > bottomBound - radius && isCornerWithinStroke(\n        pX,\n        pY,\n        innerX,\n        bottomBound - radius,\n        radius,\n        strokeWidthInner,\n        strokeWidthOuter\n      )\n    );\n  }\n  toString() {\n    return `[pixi.js/math:RoundedRectangle x=${this.x} y=${this.y}width=${this.width} height=${this.height} radius=${this.radius}]`;\n  }\n}\n\nexport { RoundedRectangle };\n//# sourceMappingURL=RoundedRectangle.mjs.map\n","\"use strict\";\nconst fragTemplate = [\n  \"precision mediump float;\",\n  \"void main(void){\",\n  \"float test = 0.1;\",\n  \"%forloop%\",\n  \"gl_FragColor = vec4(0.0);\",\n  \"}\"\n].join(\"\\n\");\nfunction generateIfTestSrc(maxIfs) {\n  let src = \"\";\n  for (let i = 0; i < maxIfs; ++i) {\n    if (i > 0) {\n      src += \"\\nelse \";\n    }\n    if (i < maxIfs - 1) {\n      src += `if(test == ${i}.0){}`;\n    }\n  }\n  return src;\n}\nfunction checkMaxIfStatementsInShader(maxIfs, gl) {\n  if (maxIfs === 0) {\n    throw new Error(\"Invalid value of `0` passed to `checkMaxIfStatementsInShader`\");\n  }\n  const shader = gl.createShader(gl.FRAGMENT_SHADER);\n  try {\n    while (true) {\n      const fragmentSrc = fragTemplate.replace(/%forloop%/gi, generateIfTestSrc(maxIfs));\n      gl.shaderSource(shader, fragmentSrc);\n      gl.compileShader(shader);\n      if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n        maxIfs = maxIfs / 2 | 0;\n      } else {\n        break;\n      }\n    }\n  } finally {\n    gl.deleteShader(shader);\n  }\n  return maxIfs;\n}\n\nexport { checkMaxIfStatementsInShader };\n//# sourceMappingURL=checkMaxIfStatementsInShader.mjs.map\n","import { getTestContext } from '../../../renderers/gl/shader/program/getTestContext.mjs';\nimport { checkMaxIfStatementsInShader } from './checkMaxIfStatementsInShader.mjs';\n\n\"use strict\";\nlet maxTexturesPerBatchCache = null;\nfunction getMaxTexturesPerBatch() {\n  if (maxTexturesPerBatchCache)\n    return maxTexturesPerBatchCache;\n  const gl = getTestContext();\n  maxTexturesPerBatchCache = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS);\n  maxTexturesPerBatchCache = checkMaxIfStatementsInShader(\n    maxTexturesPerBatchCache,\n    gl\n  );\n  gl.getExtension(\"WEBGL_lose_context\")?.loseContext();\n  return maxTexturesPerBatchCache;\n}\n\nexport { getMaxTexturesPerBatch };\n//# sourceMappingURL=maxRecommendedTextures.mjs.map\n","import { BindGroup } from '../../renderers/gpu/shader/BindGroup.mjs';\nimport { Texture } from '../../renderers/shared/texture/Texture.mjs';\nimport { getMaxTexturesPerBatch } from '../gl/utils/maxRecommendedTextures.mjs';\n\n\"use strict\";\nconst cachedGroups = {};\nfunction getTextureBatchBindGroup(textures, size) {\n  let uid = 2166136261;\n  for (let i = 0; i < size; i++) {\n    uid ^= textures[i].uid;\n    uid = Math.imul(uid, 16777619);\n    uid >>>= 0;\n  }\n  return cachedGroups[uid] || generateTextureBatchBindGroup(textures, size, uid);\n}\nlet maxTextures = 0;\nfunction generateTextureBatchBindGroup(textures, size, key) {\n  const bindGroupResources = {};\n  let bindIndex = 0;\n  if (!maxTextures)\n    maxTextures = getMaxTexturesPerBatch();\n  for (let i = 0; i < maxTextures; i++) {\n    const texture = i < size ? textures[i] : Texture.EMPTY.source;\n    bindGroupResources[bindIndex++] = texture.source;\n    bindGroupResources[bindIndex++] = texture.style;\n  }\n  const bindGroup = new BindGroup(bindGroupResources);\n  cachedGroups[key] = bindGroup;\n  return bindGroup;\n}\n\nexport { getTextureBatchBindGroup };\n//# sourceMappingURL=getTextureBatchBindGroup.mjs.map\n","\"use strict\";\nclass ViewableBuffer {\n  constructor(sizeOrBuffer) {\n    if (typeof sizeOrBuffer === \"number\") {\n      this.rawBinaryData = new ArrayBuffer(sizeOrBuffer);\n    } else if (sizeOrBuffer instanceof Uint8Array) {\n      this.rawBinaryData = sizeOrBuffer.buffer;\n    } else {\n      this.rawBinaryData = sizeOrBuffer;\n    }\n    this.uint32View = new Uint32Array(this.rawBinaryData);\n    this.float32View = new Float32Array(this.rawBinaryData);\n    this.size = this.rawBinaryData.byteLength;\n  }\n  /** View on the raw binary data as a `Int8Array`. */\n  get int8View() {\n    if (!this._int8View) {\n      this._int8View = new Int8Array(this.rawBinaryData);\n    }\n    return this._int8View;\n  }\n  /** View on the raw binary data as a `Uint8Array`. */\n  get uint8View() {\n    if (!this._uint8View) {\n      this._uint8View = new Uint8Array(this.rawBinaryData);\n    }\n    return this._uint8View;\n  }\n  /**  View on the raw binary data as a `Int16Array`. */\n  get int16View() {\n    if (!this._int16View) {\n      this._int16View = new Int16Array(this.rawBinaryData);\n    }\n    return this._int16View;\n  }\n  /** View on the raw binary data as a `Int32Array`. */\n  get int32View() {\n    if (!this._int32View) {\n      this._int32View = new Int32Array(this.rawBinaryData);\n    }\n    return this._int32View;\n  }\n  /** View on the raw binary data as a `Float64Array`. */\n  get float64View() {\n    if (!this._float64Array) {\n      this._float64Array = new Float64Array(this.rawBinaryData);\n    }\n    return this._float64Array;\n  }\n  /** View on the raw binary data as a `BigUint64Array`. */\n  get bigUint64View() {\n    if (!this._bigUint64Array) {\n      this._bigUint64Array = new BigUint64Array(this.rawBinaryData);\n    }\n    return this._bigUint64Array;\n  }\n  /**\n   * Returns the view of the given type.\n   * @param type - One of `int8`, `uint8`, `int16`,\n   *    `uint16`, `int32`, `uint32`, and `float32`.\n   * @returns - typed array of given type\n   */\n  view(type) {\n    return this[`${type}View`];\n  }\n  /** Destroys all buffer references. Do not use after calling this. */\n  destroy() {\n    this.rawBinaryData = null;\n    this._int8View = null;\n    this._uint8View = null;\n    this._int16View = null;\n    this.uint16View = null;\n    this._int32View = null;\n    this.uint32View = null;\n    this.float32View = null;\n  }\n  /**\n   * Returns the size of the given type in bytes.\n   * @param type - One of `int8`, `uint8`, `int16`,\n   *   `uint16`, `int32`, `uint32`, and `float32`.\n   * @returns - size of the type in bytes\n   */\n  static sizeOf(type) {\n    switch (type) {\n      case \"int8\":\n      case \"uint8\":\n        return 1;\n      case \"int16\":\n      case \"uint16\":\n        return 2;\n      case \"int32\":\n      case \"uint32\":\n      case \"float32\":\n        return 4;\n      default:\n        throw new Error(`${type} isn't a valid view type`);\n    }\n  }\n}\n\nexport { ViewableBuffer };\n//# sourceMappingURL=ViewableBuffer.mjs.map\n","\"use strict\";\nfunction fastCopy(sourceBuffer, destinationBuffer) {\n  const lengthDouble = sourceBuffer.byteLength / 8 | 0;\n  const sourceFloat64View = new Float64Array(sourceBuffer, 0, lengthDouble);\n  const destinationFloat64View = new Float64Array(destinationBuffer, 0, lengthDouble);\n  destinationFloat64View.set(sourceFloat64View);\n  const remainingBytes = sourceBuffer.byteLength - lengthDouble * 8;\n  if (remainingBytes > 0) {\n    const sourceUint8View = new Uint8Array(sourceBuffer, lengthDouble * 8, remainingBytes);\n    const destinationUint8View = new Uint8Array(destinationBuffer, lengthDouble * 8, remainingBytes);\n    destinationUint8View.set(sourceUint8View);\n  }\n}\n\nexport { fastCopy };\n//# sourceMappingURL=fastCopy.mjs.map\n","\"use strict\";\nconst BLEND_TO_NPM = {\n  normal: \"normal-npm\",\n  add: \"add-npm\",\n  screen: \"screen-npm\"\n};\nvar STENCIL_MODES = /* @__PURE__ */ ((STENCIL_MODES2) => {\n  STENCIL_MODES2[STENCIL_MODES2[\"DISABLED\"] = 0] = \"DISABLED\";\n  STENCIL_MODES2[STENCIL_MODES2[\"RENDERING_MASK_ADD\"] = 1] = \"RENDERING_MASK_ADD\";\n  STENCIL_MODES2[STENCIL_MODES2[\"MASK_ACTIVE\"] = 2] = \"MASK_ACTIVE\";\n  STENCIL_MODES2[STENCIL_MODES2[\"INVERSE_MASK_ACTIVE\"] = 3] = \"INVERSE_MASK_ACTIVE\";\n  STENCIL_MODES2[STENCIL_MODES2[\"RENDERING_MASK_REMOVE\"] = 4] = \"RENDERING_MASK_REMOVE\";\n  STENCIL_MODES2[STENCIL_MODES2[\"NONE\"] = 5] = \"NONE\";\n  return STENCIL_MODES2;\n})(STENCIL_MODES || {});\n\nexport { BLEND_TO_NPM, STENCIL_MODES };\n//# sourceMappingURL=const.mjs.map\n","import { BLEND_TO_NPM } from './const.mjs';\n\n\"use strict\";\nfunction getAdjustedBlendModeBlend(blendMode, textureSource) {\n  if (textureSource.alphaMode === \"no-premultiply-alpha\") {\n    return BLEND_TO_NPM[blendMode] || blendMode;\n  }\n  return blendMode;\n}\n\nexport { getAdjustedBlendModeBlend };\n//# sourceMappingURL=getAdjustedBlendModeBlend.mjs.map\n","\"use strict\";\nclass BatchTextureArray {\n  constructor() {\n    /** Respective locations for textures. */\n    this.ids = /* @__PURE__ */ Object.create(null);\n    this.textures = [];\n    this.count = 0;\n  }\n  /** Clear the textures and their locations. */\n  clear() {\n    for (let i = 0; i < this.count; i++) {\n      const t = this.textures[i];\n      this.textures[i] = null;\n      this.ids[t.uid] = null;\n    }\n    this.count = 0;\n  }\n}\n\nexport { BatchTextureArray };\n//# sourceMappingURL=BatchTextureArray.mjs.map\n","import { uid } from '../../../utils/data/uid.mjs';\nimport { ViewableBuffer } from '../../../utils/data/ViewableBuffer.mjs';\nimport { fastCopy } from '../../renderers/shared/buffer/utils/fastCopy.mjs';\nimport { getAdjustedBlendModeBlend } from '../../renderers/shared/state/getAdjustedBlendModeBlend.mjs';\nimport { getMaxTexturesPerBatch } from '../gl/utils/maxRecommendedTextures.mjs';\nimport { BatchTextureArray } from './BatchTextureArray.mjs';\n\n\"use strict\";\nclass Batch {\n  constructor() {\n    this.renderPipeId = \"batch\";\n    this.action = \"startBatch\";\n    // TODO - eventually this could be useful for flagging batches as dirty and then only rebuilding those ones\n    // public elementStart = 0;\n    // public elementSize = 0;\n    // for drawing..\n    this.start = 0;\n    this.size = 0;\n    this.textures = new BatchTextureArray();\n    this.blendMode = \"normal\";\n    this.topology = \"triangle-strip\";\n    this.canBundle = true;\n  }\n  destroy() {\n    this.textures = null;\n    this.gpuBindGroup = null;\n    this.bindGroup = null;\n    this.batcher = null;\n  }\n}\nconst batchPool = [];\nlet batchPoolIndex = 0;\nfunction getBatchFromPool() {\n  return batchPoolIndex > 0 ? batchPool[--batchPoolIndex] : new Batch();\n}\nfunction returnBatchToPool(batch) {\n  batchPool[batchPoolIndex++] = batch;\n}\nlet BATCH_TICK = 0;\nconst _Batcher = class _Batcher {\n  constructor(options = {}) {\n    /** unique id for this batcher */\n    this.uid = uid(\"batcher\");\n    /** Indicates whether the batch data has been modified and needs updating. */\n    this.dirty = true;\n    /** The current index of the batch being processed. */\n    this.batchIndex = 0;\n    /** An array of all batches created during the current rendering process. */\n    this.batches = [];\n    this._elements = [];\n    _Batcher.defaultOptions.maxTextures = _Batcher.defaultOptions.maxTextures ?? getMaxTexturesPerBatch();\n    options = { ..._Batcher.defaultOptions, ...options };\n    const { maxTextures, attributesInitialSize, indicesInitialSize } = options;\n    this.attributeBuffer = new ViewableBuffer(attributesInitialSize * 4);\n    this.indexBuffer = new Uint16Array(indicesInitialSize);\n    this.maxTextures = maxTextures;\n  }\n  begin() {\n    this.elementSize = 0;\n    this.elementStart = 0;\n    this.indexSize = 0;\n    this.attributeSize = 0;\n    for (let i = 0; i < this.batchIndex; i++) {\n      returnBatchToPool(this.batches[i]);\n    }\n    this.batchIndex = 0;\n    this._batchIndexStart = 0;\n    this._batchIndexSize = 0;\n    this.dirty = true;\n  }\n  add(batchableObject) {\n    this._elements[this.elementSize++] = batchableObject;\n    batchableObject._indexStart = this.indexSize;\n    batchableObject._attributeStart = this.attributeSize;\n    batchableObject._batcher = this;\n    this.indexSize += batchableObject.indexSize;\n    this.attributeSize += batchableObject.attributeSize * this.vertexSize;\n  }\n  checkAndUpdateTexture(batchableObject, texture) {\n    const textureId = batchableObject._batch.textures.ids[texture._source.uid];\n    if (!textureId && textureId !== 0)\n      return false;\n    batchableObject._textureId = textureId;\n    batchableObject.texture = texture;\n    return true;\n  }\n  updateElement(batchableObject) {\n    this.dirty = true;\n    const attributeBuffer = this.attributeBuffer;\n    if (batchableObject.packAsQuad) {\n      this.packQuadAttributes(\n        batchableObject,\n        attributeBuffer.float32View,\n        attributeBuffer.uint32View,\n        batchableObject._attributeStart,\n        batchableObject._textureId\n      );\n    } else {\n      this.packAttributes(\n        batchableObject,\n        attributeBuffer.float32View,\n        attributeBuffer.uint32View,\n        batchableObject._attributeStart,\n        batchableObject._textureId\n      );\n    }\n  }\n  /**\n   * breaks the batcher. This happens when a batch gets too big,\n   * or we need to switch to a different type of rendering (a filter for example)\n   * @param instructionSet\n   */\n  break(instructionSet) {\n    const elements = this._elements;\n    if (!elements[this.elementStart])\n      return;\n    let batch = getBatchFromPool();\n    let textureBatch = batch.textures;\n    textureBatch.clear();\n    const firstElement = elements[this.elementStart];\n    let blendMode = getAdjustedBlendModeBlend(firstElement.blendMode, firstElement.texture._source);\n    let topology = firstElement.topology;\n    if (this.attributeSize * 4 > this.attributeBuffer.size) {\n      this._resizeAttributeBuffer(this.attributeSize * 4);\n    }\n    if (this.indexSize > this.indexBuffer.length) {\n      this._resizeIndexBuffer(this.indexSize);\n    }\n    const f32 = this.attributeBuffer.float32View;\n    const u32 = this.attributeBuffer.uint32View;\n    const indexBuffer = this.indexBuffer;\n    let size = this._batchIndexSize;\n    let start = this._batchIndexStart;\n    let action = \"startBatch\";\n    const maxTextures = this.maxTextures;\n    for (let i = this.elementStart; i < this.elementSize; ++i) {\n      const element = elements[i];\n      elements[i] = null;\n      const texture = element.texture;\n      const source = texture._source;\n      const adjustedBlendMode = getAdjustedBlendModeBlend(element.blendMode, source);\n      const breakRequired = blendMode !== adjustedBlendMode || topology !== element.topology;\n      if (source._batchTick === BATCH_TICK && !breakRequired) {\n        element._textureId = source._textureBindLocation;\n        size += element.indexSize;\n        if (element.packAsQuad) {\n          this.packQuadAttributes(\n            element,\n            f32,\n            u32,\n            element._attributeStart,\n            element._textureId\n          );\n          this.packQuadIndex(\n            indexBuffer,\n            element._indexStart,\n            element._attributeStart / this.vertexSize\n          );\n        } else {\n          this.packAttributes(\n            element,\n            f32,\n            u32,\n            element._attributeStart,\n            element._textureId\n          );\n          this.packIndex(\n            element,\n            indexBuffer,\n            element._indexStart,\n            element._attributeStart / this.vertexSize\n          );\n        }\n        element._batch = batch;\n        continue;\n      }\n      source._batchTick = BATCH_TICK;\n      if (textureBatch.count >= maxTextures || breakRequired) {\n        this._finishBatch(\n          batch,\n          start,\n          size - start,\n          textureBatch,\n          blendMode,\n          topology,\n          instructionSet,\n          action\n        );\n        action = \"renderBatch\";\n        start = size;\n        blendMode = adjustedBlendMode;\n        topology = element.topology;\n        batch = getBatchFromPool();\n        textureBatch = batch.textures;\n        textureBatch.clear();\n        ++BATCH_TICK;\n      }\n      element._textureId = source._textureBindLocation = textureBatch.count;\n      textureBatch.ids[source.uid] = textureBatch.count;\n      textureBatch.textures[textureBatch.count++] = source;\n      element._batch = batch;\n      size += element.indexSize;\n      if (element.packAsQuad) {\n        this.packQuadAttributes(\n          element,\n          f32,\n          u32,\n          element._attributeStart,\n          element._textureId\n        );\n        this.packQuadIndex(\n          indexBuffer,\n          element._indexStart,\n          element._attributeStart / this.vertexSize\n        );\n      } else {\n        this.packAttributes(\n          element,\n          f32,\n          u32,\n          element._attributeStart,\n          element._textureId\n        );\n        this.packIndex(\n          element,\n          indexBuffer,\n          element._indexStart,\n          element._attributeStart / this.vertexSize\n        );\n      }\n    }\n    if (textureBatch.count > 0) {\n      this._finishBatch(\n        batch,\n        start,\n        size - start,\n        textureBatch,\n        blendMode,\n        topology,\n        instructionSet,\n        action\n      );\n      start = size;\n      ++BATCH_TICK;\n    }\n    this.elementStart = this.elementSize;\n    this._batchIndexStart = start;\n    this._batchIndexSize = size;\n  }\n  _finishBatch(batch, indexStart, indexSize, textureBatch, blendMode, topology, instructionSet, action) {\n    batch.gpuBindGroup = null;\n    batch.bindGroup = null;\n    batch.action = action;\n    batch.batcher = this;\n    batch.textures = textureBatch;\n    batch.blendMode = blendMode;\n    batch.topology = topology;\n    batch.start = indexStart;\n    batch.size = indexSize;\n    ++BATCH_TICK;\n    this.batches[this.batchIndex++] = batch;\n    instructionSet.add(batch);\n  }\n  finish(instructionSet) {\n    this.break(instructionSet);\n  }\n  /**\n   * Resizes the attribute buffer to the given size (1 = 1 float32)\n   * @param size - the size in vertices to ensure (not bytes!)\n   */\n  ensureAttributeBuffer(size) {\n    if (size * 4 <= this.attributeBuffer.size)\n      return;\n    this._resizeAttributeBuffer(size * 4);\n  }\n  /**\n   * Resizes the index buffer to the given size (1 = 1 float32)\n   * @param size - the size in vertices to ensure (not bytes!)\n   */\n  ensureIndexBuffer(size) {\n    if (size <= this.indexBuffer.length)\n      return;\n    this._resizeIndexBuffer(size);\n  }\n  _resizeAttributeBuffer(size) {\n    const newSize = Math.max(size, this.attributeBuffer.size * 2);\n    const newArrayBuffer = new ViewableBuffer(newSize);\n    fastCopy(this.attributeBuffer.rawBinaryData, newArrayBuffer.rawBinaryData);\n    this.attributeBuffer = newArrayBuffer;\n  }\n  _resizeIndexBuffer(size) {\n    const indexBuffer = this.indexBuffer;\n    let newSize = Math.max(size, indexBuffer.length * 1.5);\n    newSize += newSize % 2;\n    const newIndexBuffer = newSize > 65535 ? new Uint32Array(newSize) : new Uint16Array(newSize);\n    if (newIndexBuffer.BYTES_PER_ELEMENT !== indexBuffer.BYTES_PER_ELEMENT) {\n      for (let i = 0; i < indexBuffer.length; i++) {\n        newIndexBuffer[i] = indexBuffer[i];\n      }\n    } else {\n      fastCopy(indexBuffer.buffer, newIndexBuffer.buffer);\n    }\n    this.indexBuffer = newIndexBuffer;\n  }\n  packQuadIndex(indexBuffer, index, indicesOffset) {\n    indexBuffer[index] = indicesOffset + 0;\n    indexBuffer[index + 1] = indicesOffset + 1;\n    indexBuffer[index + 2] = indicesOffset + 2;\n    indexBuffer[index + 3] = indicesOffset + 0;\n    indexBuffer[index + 4] = indicesOffset + 2;\n    indexBuffer[index + 5] = indicesOffset + 3;\n  }\n  packIndex(element, indexBuffer, index, indicesOffset) {\n    const indices = element.indices;\n    const size = element.indexSize;\n    const indexOffset = element.indexOffset;\n    const attributeOffset = element.attributeOffset;\n    for (let i = 0; i < size; i++) {\n      indexBuffer[index++] = indicesOffset + indices[i + indexOffset] - attributeOffset;\n    }\n  }\n  destroy() {\n    for (let i = 0; i < this.batches.length; i++) {\n      returnBatchToPool(this.batches[i]);\n    }\n    this.batches = null;\n    for (let i = 0; i < this._elements.length; i++) {\n      this._elements[i]._batch = null;\n    }\n    this._elements = null;\n    this.indexBuffer = null;\n    this.attributeBuffer.destroy();\n    this.attributeBuffer = null;\n  }\n};\n_Batcher.defaultOptions = {\n  maxTextures: null,\n  attributesInitialSize: 4,\n  indicesInitialSize: 6\n};\nlet Batcher = _Batcher;\n\nexport { Batch, Batcher };\n//# sourceMappingURL=Batcher.mjs.map\n","\"use strict\";\nvar BufferUsage = /* @__PURE__ */ ((BufferUsage2) => {\n  BufferUsage2[BufferUsage2[\"MAP_READ\"] = 1] = \"MAP_READ\";\n  BufferUsage2[BufferUsage2[\"MAP_WRITE\"] = 2] = \"MAP_WRITE\";\n  BufferUsage2[BufferUsage2[\"COPY_SRC\"] = 4] = \"COPY_SRC\";\n  BufferUsage2[BufferUsage2[\"COPY_DST\"] = 8] = \"COPY_DST\";\n  BufferUsage2[BufferUsage2[\"INDEX\"] = 16] = \"INDEX\";\n  BufferUsage2[BufferUsage2[\"VERTEX\"] = 32] = \"VERTEX\";\n  BufferUsage2[BufferUsage2[\"UNIFORM\"] = 64] = \"UNIFORM\";\n  BufferUsage2[BufferUsage2[\"STORAGE\"] = 128] = \"STORAGE\";\n  BufferUsage2[BufferUsage2[\"INDIRECT\"] = 256] = \"INDIRECT\";\n  BufferUsage2[BufferUsage2[\"QUERY_RESOLVE\"] = 512] = \"QUERY_RESOLVE\";\n  BufferUsage2[BufferUsage2[\"STATIC\"] = 1024] = \"STATIC\";\n  return BufferUsage2;\n})(BufferUsage || {});\n\nexport { BufferUsage };\n//# sourceMappingURL=const.mjs.map\n","import EventEmitter from 'eventemitter3';\nimport { uid } from '../../../../utils/data/uid.mjs';\nimport { BufferUsage } from './const.mjs';\n\n\"use strict\";\nclass Buffer extends EventEmitter {\n  /**\n   * Creates a new Buffer with the given options\n   * @param options - the options for the buffer\n   */\n  constructor(options) {\n    let { data, size } = options;\n    const { usage, label, shrinkToFit } = options;\n    super();\n    /**\n     * emits when the underlying buffer has changed shape (i.e. resized)\n     * letting the renderer know that it needs to discard the old buffer on the GPU and create a new one\n     * @event change\n     */\n    /**\n     * emits when the underlying buffer data has been updated. letting the renderer know\n     * that it needs to update the buffer on the GPU\n     * @event update\n     */\n    /**\n     * emits when the buffer is destroyed. letting the renderer know that it needs to destroy the buffer on the GPU\n     * @event destroy\n     */\n    /** a unique id for this uniform group used through the renderer */\n    this.uid = uid(\"buffer\");\n    /**\n     * a resource type, used to identify how to handle it when its in a bind group / shader resource\n     * @internal\n     * @ignore\n     */\n    this._resourceType = \"buffer\";\n    /**\n     * the resource id used internally by the renderer to build bind group keys\n     * @internal\n     * @ignore\n     */\n    this._resourceId = uid(\"resource\");\n    /**\n     * used internally to know if a uniform group was used in the last render pass\n     * @internal\n     * @ignore\n     */\n    this._touched = 0;\n    /**\n     * @internal\n     * @ignore\n     */\n    this._updateID = 1;\n    this._dataInt32 = null;\n    /**\n     * should the GPU buffer be shrunk when the data becomes smaller?\n     * changing this will cause the buffer to be destroyed and a new one created on the GPU\n     * this can be expensive, especially if the buffer is already big enough!\n     * setting this to false will prevent the buffer from being shrunk. This will yield better performance\n     * if you are constantly setting data that is changing size often.\n     * @default true\n     */\n    this.shrinkToFit = true;\n    /**\n     * Has the buffer been destroyed?\n     * @readonly\n     */\n    this.destroyed = false;\n    if (data instanceof Array) {\n      data = new Float32Array(data);\n    }\n    this._data = data;\n    size ?? (size = data?.byteLength);\n    const mappedAtCreation = !!data;\n    this.descriptor = {\n      size,\n      usage,\n      mappedAtCreation,\n      label\n    };\n    this.shrinkToFit = shrinkToFit ?? true;\n  }\n  /** the data in the buffer */\n  get data() {\n    return this._data;\n  }\n  set data(value) {\n    this.setDataWithSize(value, value.length, true);\n  }\n  get dataInt32() {\n    if (!this._dataInt32) {\n      this._dataInt32 = new Int32Array(this.data.buffer);\n    }\n    return this._dataInt32;\n  }\n  /** whether the buffer is static or not */\n  get static() {\n    return !!(this.descriptor.usage & BufferUsage.STATIC);\n  }\n  set static(value) {\n    if (value) {\n      this.descriptor.usage |= BufferUsage.STATIC;\n    } else {\n      this.descriptor.usage &= ~BufferUsage.STATIC;\n    }\n  }\n  /**\n   * Sets the data in the buffer to the given value. This will immediately update the buffer on the GPU.\n   * If you only want to update a subset of the buffer, you can pass in the size of the data.\n   * @param value - the data to set\n   * @param size - the size of the data in bytes\n   * @param syncGPU - should the buffer be updated on the GPU immediately?\n   */\n  setDataWithSize(value, size, syncGPU) {\n    this._updateID++;\n    this._updateSize = size * value.BYTES_PER_ELEMENT;\n    if (this._data === value) {\n      if (syncGPU)\n        this.emit(\"update\", this);\n      return;\n    }\n    const oldData = this._data;\n    this._data = value;\n    this._dataInt32 = null;\n    if (!oldData || oldData.length !== value.length) {\n      if (!this.shrinkToFit && oldData && value.byteLength < oldData.byteLength) {\n        if (syncGPU)\n          this.emit(\"update\", this);\n      } else {\n        this.descriptor.size = value.byteLength;\n        this._resourceId = uid(\"resource\");\n        this.emit(\"change\", this);\n      }\n      return;\n    }\n    if (syncGPU)\n      this.emit(\"update\", this);\n  }\n  /**\n   * updates the buffer on the GPU to reflect the data in the buffer.\n   * By default it will update the entire buffer. If you only want to update a subset of the buffer,\n   * you can pass in the size of the buffer to update.\n   * @param sizeInBytes - the new size of the buffer in bytes\n   */\n  update(sizeInBytes) {\n    this._updateSize = sizeInBytes ?? this._updateSize;\n    this._updateID++;\n    this.emit(\"update\", this);\n  }\n  /** Destroys the buffer */\n  destroy() {\n    this.destroyed = true;\n    this.emit(\"destroy\", this);\n    this.emit(\"change\", this);\n    this._data = null;\n    this.descriptor = null;\n    this.removeAllListeners();\n  }\n}\n\nexport { Buffer };\n//# sourceMappingURL=Buffer.mjs.map\n","import { Buffer } from '../../buffer/Buffer.mjs';\nimport { BufferUsage } from '../../buffer/const.mjs';\n\n\"use strict\";\nfunction ensureIsBuffer(buffer, index) {\n  if (!(buffer instanceof Buffer)) {\n    let usage = index ? BufferUsage.INDEX : BufferUsage.VERTEX;\n    if (buffer instanceof Array) {\n      if (index) {\n        buffer = new Uint32Array(buffer);\n        usage = BufferUsage.INDEX | BufferUsage.COPY_DST;\n      } else {\n        buffer = new Float32Array(buffer);\n        usage = BufferUsage.VERTEX | BufferUsage.COPY_DST;\n      }\n    }\n    buffer = new Buffer({\n      data: buffer,\n      label: index ? \"index-mesh-buffer\" : \"vertex-mesh-buffer\",\n      usage\n    });\n  }\n  return buffer;\n}\n\nexport { ensureIsBuffer };\n//# sourceMappingURL=ensureIsBuffer.mjs.map\n","\"use strict\";\nfunction getGeometryBounds(geometry, attributeId, bounds) {\n  const attribute = geometry.getAttribute(attributeId);\n  if (!attribute) {\n    bounds.minX = 0;\n    bounds.minY = 0;\n    bounds.maxX = 0;\n    bounds.maxY = 0;\n    return bounds;\n  }\n  const data = attribute.buffer.data;\n  let minX = Infinity;\n  let minY = Infinity;\n  let maxX = -Infinity;\n  let maxY = -Infinity;\n  const byteSize = data.BYTES_PER_ELEMENT;\n  const offset = (attribute.offset || 0) / byteSize;\n  const stride = (attribute.stride || 2 * 4) / byteSize;\n  for (let i = offset; i < data.length; i += stride) {\n    const x = data[i];\n    const y = data[i + 1];\n    if (x > maxX)\n      maxX = x;\n    if (y > maxY)\n      maxY = y;\n    if (x < minX)\n      minX = x;\n    if (y < minY)\n      minY = y;\n  }\n  bounds.minX = minX;\n  bounds.minY = minY;\n  bounds.maxX = maxX;\n  bounds.maxY = maxY;\n  return bounds;\n}\n\nexport { getGeometryBounds };\n//# sourceMappingURL=getGeometryBounds.mjs.map\n","import EventEmitter from 'eventemitter3';\nimport { Bounds } from '../../../../scene/container/bounds/Bounds.mjs';\nimport { uid } from '../../../../utils/data/uid.mjs';\nimport { Buffer } from '../buffer/Buffer.mjs';\nimport { ensureIsBuffer } from './utils/ensureIsBuffer.mjs';\nimport { getGeometryBounds } from './utils/getGeometryBounds.mjs';\n\n\"use strict\";\nfunction ensureIsAttribute(attribute) {\n  if (attribute instanceof Buffer || Array.isArray(attribute) || attribute.BYTES_PER_ELEMENT) {\n    attribute = {\n      buffer: attribute\n    };\n  }\n  attribute.buffer = ensureIsBuffer(attribute.buffer, false);\n  return attribute;\n}\nclass Geometry extends EventEmitter {\n  /**\n   * Create a new instance of a geometry\n   * @param options - The options for the geometry.\n   */\n  constructor(options = {}) {\n    super();\n    /** The unique id of the geometry. */\n    this.uid = uid(\"geometry\");\n    /**\n     * the layout key will be generated by WebGPU all geometries that have the same structure\n     * will have the same layout key. This is used to cache the pipeline layout\n     * @internal\n     * @ignore\n     */\n    this._layoutKey = 0;\n    /** the instance count of the geometry to draw */\n    this.instanceCount = 1;\n    this._bounds = new Bounds();\n    this._boundsDirty = true;\n    const { attributes, indexBuffer, topology } = options;\n    this.buffers = [];\n    this.attributes = {};\n    if (attributes) {\n      for (const i in attributes) {\n        this.addAttribute(i, attributes[i]);\n      }\n    }\n    this.instanceCount = options.instanceCount ?? 1;\n    if (indexBuffer) {\n      this.addIndex(indexBuffer);\n    }\n    this.topology = topology || \"triangle-list\";\n  }\n  onBufferUpdate() {\n    this._boundsDirty = true;\n    this.emit(\"update\", this);\n  }\n  /**\n   * Returns the requested attribute.\n   * @param id - The name of the attribute required\n   * @returns - The attribute requested.\n   */\n  getAttribute(id) {\n    return this.attributes[id];\n  }\n  /**\n   * Returns the index buffer\n   * @returns - The index buffer.\n   */\n  getIndex() {\n    return this.indexBuffer;\n  }\n  /**\n   * Returns the requested buffer.\n   * @param id - The name of the buffer required.\n   * @returns - The buffer requested.\n   */\n  getBuffer(id) {\n    return this.getAttribute(id).buffer;\n  }\n  /**\n   * Used to figure out how many vertices there are in this geometry\n   * @returns the number of vertices in the geometry\n   */\n  getSize() {\n    for (const i in this.attributes) {\n      const attribute = this.attributes[i];\n      const buffer = attribute.buffer;\n      return buffer.data.length / (attribute.stride / 4 || attribute.size);\n    }\n    return 0;\n  }\n  /**\n   * Adds an attribute to the geometry.\n   * @param name - The name of the attribute to add.\n   * @param attributeOption - The attribute option to add.\n   */\n  addAttribute(name, attributeOption) {\n    const attribute = ensureIsAttribute(attributeOption);\n    const bufferIndex = this.buffers.indexOf(attribute.buffer);\n    if (bufferIndex === -1) {\n      this.buffers.push(attribute.buffer);\n      attribute.buffer.on(\"update\", this.onBufferUpdate, this);\n      attribute.buffer.on(\"change\", this.onBufferUpdate, this);\n    }\n    this.attributes[name] = attribute;\n  }\n  /**\n   * Adds an index buffer to the geometry.\n   * @param indexBuffer - The index buffer to add. Can be a Buffer, TypedArray, or an array of numbers.\n   */\n  addIndex(indexBuffer) {\n    this.indexBuffer = ensureIsBuffer(indexBuffer, true);\n    this.buffers.push(this.indexBuffer);\n  }\n  /** Returns the bounds of the geometry. */\n  get bounds() {\n    if (!this._boundsDirty)\n      return this._bounds;\n    this._boundsDirty = false;\n    return getGeometryBounds(this, \"aPosition\", this._bounds);\n  }\n  /**\n   * destroys the geometry.\n   * @param destroyBuffers - destroy the buffers associated with this geometry\n   */\n  destroy(destroyBuffers = false) {\n    this.emit(\"destroy\", this);\n    this.removeAllListeners();\n    if (destroyBuffers) {\n      this.buffers.forEach((buffer) => buffer.destroy());\n    }\n    this.attributes = null;\n    this.buffers = null;\n    this.indexBuffer = null;\n    this._bounds = null;\n  }\n}\n\nexport { Geometry };\n//# sourceMappingURL=Geometry.mjs.map\n","import { Buffer } from '../../renderers/shared/buffer/Buffer.mjs';\nimport { BufferUsage } from '../../renderers/shared/buffer/const.mjs';\nimport { Geometry } from '../../renderers/shared/geometry/Geometry.mjs';\n\n\"use strict\";\nconst placeHolderBufferData = new Float32Array(1);\nconst placeHolderIndexData = new Uint32Array(1);\nclass BatchGeometry extends Geometry {\n  constructor() {\n    const vertexSize = 6;\n    const attributeBuffer = new Buffer({\n      data: placeHolderBufferData,\n      label: \"attribute-batch-buffer\",\n      usage: BufferUsage.VERTEX | BufferUsage.COPY_DST,\n      shrinkToFit: false\n    });\n    const indexBuffer = new Buffer({\n      data: placeHolderIndexData,\n      label: \"index-batch-buffer\",\n      usage: BufferUsage.INDEX | BufferUsage.COPY_DST,\n      // | BufferUsage.STATIC,\n      shrinkToFit: false\n    });\n    const stride = vertexSize * 4;\n    super({\n      attributes: {\n        aPosition: {\n          buffer: attributeBuffer,\n          format: \"float32x2\",\n          stride,\n          offset: 0\n        },\n        aUV: {\n          buffer: attributeBuffer,\n          format: \"float32x2\",\n          stride,\n          offset: 2 * 4\n        },\n        aColor: {\n          buffer: attributeBuffer,\n          format: \"unorm8x4\",\n          stride,\n          offset: 4 * 4\n        },\n        aTextureIdAndRound: {\n          buffer: attributeBuffer,\n          format: \"uint16x2\",\n          stride,\n          offset: 5 * 4\n        }\n      },\n      indexBuffer\n    });\n  }\n}\n\nexport { BatchGeometry };\n//# sourceMappingURL=BatchGeometry.mjs.map\n","import { warn } from '../../../../utils/logging/warn.mjs';\n\n\"use strict\";\nfunction addBits(srcParts, parts, name) {\n  if (srcParts) {\n    for (const i in srcParts) {\n      const id = i.toLocaleLowerCase();\n      const part = parts[id];\n      if (part) {\n        let sanitisedPart = srcParts[i];\n        if (i === \"header\") {\n          sanitisedPart = sanitisedPart.replace(/@in\\s+[^;]+;\\s*/g, \"\").replace(/@out\\s+[^;]+;\\s*/g, \"\");\n        }\n        if (name) {\n          part.push(`//----${name}----//`);\n        }\n        part.push(sanitisedPart);\n      } else {\n        warn(`${i} placement hook does not exist in shader`);\n      }\n    }\n  }\n}\n\nexport { addBits };\n//# sourceMappingURL=addBits.mjs.map\n","\"use strict\";\nconst findHooksRx = /\\{\\{(.*?)\\}\\}/g;\nfunction compileHooks(programSrc) {\n  const parts = {};\n  const partMatches = programSrc.match(findHooksRx)?.map((hook) => hook.replace(/[{()}]/g, \"\")) ?? [];\n  partMatches.forEach((hook) => {\n    parts[hook] = [];\n  });\n  return parts;\n}\n\nexport { compileHooks, findHooksRx };\n//# sourceMappingURL=compileHooks.mjs.map\n","\"use strict\";\nfunction extractInputs(fragmentSource, out) {\n  let match;\n  const regex = /@in\\s+([^;]+);/g;\n  while ((match = regex.exec(fragmentSource)) !== null) {\n    out.push(match[1]);\n  }\n}\nfunction compileInputs(fragments, template, sort = false) {\n  const results = [];\n  extractInputs(template, results);\n  fragments.forEach((fragment) => {\n    if (fragment.header) {\n      extractInputs(fragment.header, results);\n    }\n  });\n  const mainInput = results;\n  if (sort) {\n    mainInput.sort();\n  }\n  const finalString = mainInput.map((inValue, i) => `       @location(${i}) ${inValue},`).join(\"\\n\");\n  let cleanedString = template.replace(/@in\\s+[^;]+;\\s*/g, \"\");\n  cleanedString = cleanedString.replace(\"{{in}}\", `\n${finalString}\n`);\n  return cleanedString;\n}\n\nexport { compileInputs };\n//# sourceMappingURL=compileInputs.mjs.map\n","\"use strict\";\nfunction extractOutputs(fragmentSource, out) {\n  let match;\n  const regex = /@out\\s+([^;]+);/g;\n  while ((match = regex.exec(fragmentSource)) !== null) {\n    out.push(match[1]);\n  }\n}\nfunction extractVariableName(value) {\n  const regex = /\\b(\\w+)\\s*:/g;\n  const match = regex.exec(value);\n  return match ? match[1] : \"\";\n}\nfunction stripVariable(value) {\n  const regex = /@.*?\\s+/g;\n  return value.replace(regex, \"\");\n}\nfunction compileOutputs(fragments, template) {\n  const results = [];\n  extractOutputs(template, results);\n  fragments.forEach((fragment) => {\n    if (fragment.header) {\n      extractOutputs(fragment.header, results);\n    }\n  });\n  let index = 0;\n  const mainStruct = results.sort().map((inValue) => {\n    if (inValue.indexOf(\"builtin\") > -1) {\n      return inValue;\n    }\n    return `@location(${index++}) ${inValue}`;\n  }).join(\",\\n\");\n  const mainStart = results.sort().map((inValue) => `       var ${stripVariable(inValue)};`).join(\"\\n\");\n  const mainEnd = `return VSOutput(\n            ${results.sort().map((inValue) => ` ${extractVariableName(inValue)}`).join(\",\\n\")});`;\n  let compiledCode = template.replace(/@out\\s+[^;]+;\\s*/g, \"\");\n  compiledCode = compiledCode.replace(\"{{struct}}\", `\n${mainStruct}\n`);\n  compiledCode = compiledCode.replace(\"{{start}}\", `\n${mainStart}\n`);\n  compiledCode = compiledCode.replace(\"{{return}}\", `\n${mainEnd}\n`);\n  return compiledCode;\n}\n\nexport { compileOutputs };\n//# sourceMappingURL=compileOutputs.mjs.map\n","\"use strict\";\nfunction injectBits(templateSrc, fragmentParts) {\n  let out = templateSrc;\n  for (const i in fragmentParts) {\n    const parts = fragmentParts[i];\n    const toInject = parts.join(\"\\n\");\n    if (toInject.length) {\n      out = out.replace(`{{${i}}}`, `//-----${i} START-----//\n${parts.join(\"\\n\")}\n//----${i} FINISH----//`);\n    } else {\n      out = out.replace(`{{${i}}}`, \"\");\n    }\n  }\n  return out;\n}\n\nexport { injectBits };\n//# sourceMappingURL=injectBits.mjs.map\n","import { addBits } from './utils/addBits.mjs';\nimport { compileHooks } from './utils/compileHooks.mjs';\nimport { compileInputs } from './utils/compileInputs.mjs';\nimport { compileOutputs } from './utils/compileOutputs.mjs';\nimport { injectBits } from './utils/injectBits.mjs';\n\n\"use strict\";\nconst cacheMap = /* @__PURE__ */ Object.create(null);\nconst bitCacheMap = /* @__PURE__ */ new Map();\nlet CACHE_UID = 0;\nfunction compileHighShader({\n  template,\n  bits\n}) {\n  const cacheId = generateCacheId(template, bits);\n  if (cacheMap[cacheId])\n    return cacheMap[cacheId];\n  const { vertex, fragment } = compileInputsAndOutputs(template, bits);\n  cacheMap[cacheId] = compileBits(vertex, fragment, bits);\n  return cacheMap[cacheId];\n}\nfunction compileHighShaderGl({\n  template,\n  bits\n}) {\n  const cacheId = generateCacheId(template, bits);\n  if (cacheMap[cacheId])\n    return cacheMap[cacheId];\n  cacheMap[cacheId] = compileBits(template.vertex, template.fragment, bits);\n  return cacheMap[cacheId];\n}\nfunction compileInputsAndOutputs(template, bits) {\n  const vertexFragments = bits.map((shaderBit) => shaderBit.vertex).filter((v) => !!v);\n  const fragmentFragments = bits.map((shaderBit) => shaderBit.fragment).filter((v) => !!v);\n  let compiledVertex = compileInputs(vertexFragments, template.vertex, true);\n  compiledVertex = compileOutputs(vertexFragments, compiledVertex);\n  const compiledFragment = compileInputs(fragmentFragments, template.fragment, true);\n  return {\n    vertex: compiledVertex,\n    fragment: compiledFragment\n  };\n}\nfunction generateCacheId(template, bits) {\n  return bits.map((highFragment) => {\n    if (!bitCacheMap.has(highFragment)) {\n      bitCacheMap.set(highFragment, CACHE_UID++);\n    }\n    return bitCacheMap.get(highFragment);\n  }).sort((a, b) => a - b).join(\"-\") + template.vertex + template.fragment;\n}\nfunction compileBits(vertex, fragment, bits) {\n  const vertexParts = compileHooks(vertex);\n  const fragmentParts = compileHooks(fragment);\n  bits.forEach((shaderBit) => {\n    addBits(shaderBit.vertex, vertexParts, shaderBit.name);\n    addBits(shaderBit.fragment, fragmentParts, shaderBit.name);\n  });\n  return {\n    vertex: injectBits(vertex, vertexParts),\n    fragment: injectBits(fragment, fragmentParts)\n  };\n}\n\nexport { compileHighShader, compileHighShaderGl };\n//# sourceMappingURL=compileHighShader.mjs.map\n","\"use strict\";\nconst vertexGPUTemplate = (\n  /* wgsl */\n  `\n    @in aPosition: vec2<f32>;\n    @in aUV: vec2<f32>;\n\n    @out @builtin(position) vPosition: vec4<f32>;\n    @out vUV : vec2<f32>;\n    @out vColor : vec4<f32>;\n\n    {{header}}\n\n    struct VSOutput {\n        {{struct}}\n    };\n\n    @vertex\n    fn main( {{in}} ) -> VSOutput {\n\n        var worldTransformMatrix = globalUniforms.uWorldTransformMatrix;\n        var modelMatrix = mat3x3<f32>(\n            1.0, 0.0, 0.0,\n            0.0, 1.0, 0.0,\n            0.0, 0.0, 1.0\n          );\n        var position = aPosition;\n        var uv = aUV;\n\n        {{start}}\n        \n        vColor = vec4<f32>(1., 1., 1., 1.);\n\n        {{main}}\n\n        vUV = uv;\n\n        var modelViewProjectionMatrix = globalUniforms.uProjectionMatrix * worldTransformMatrix * modelMatrix;\n\n        vPosition =  vec4<f32>((modelViewProjectionMatrix *  vec3<f32>(position, 1.0)).xy, 0.0, 1.0);\n       \n        vColor *= globalUniforms.uWorldColorAlpha;\n\n        {{end}}\n\n        {{return}}\n    };\n`\n);\nconst fragmentGPUTemplate = (\n  /* wgsl */\n  `\n    @in vUV : vec2<f32>;\n    @in vColor : vec4<f32>;\n   \n    {{header}}\n\n    @fragment\n    fn main(\n        {{in}}\n      ) -> @location(0) vec4<f32> {\n        \n        {{start}}\n\n        var outColor:vec4<f32>;\n      \n        {{main}}\n        \n        var finalColor:vec4<f32> = outColor * vColor;\n\n        {{end}}\n\n        return finalColor;\n      };\n`\n);\nconst vertexGlTemplate = (\n  /* glsl */\n  `\n    in vec2 aPosition;\n    in vec2 aUV;\n\n    out vec4 vColor;\n    out vec2 vUV;\n\n    {{header}}\n\n    void main(void){\n\n        mat3 worldTransformMatrix = uWorldTransformMatrix;\n        mat3 modelMatrix = mat3(\n            1.0, 0.0, 0.0,\n            0.0, 1.0, 0.0,\n            0.0, 0.0, 1.0\n          );\n        vec2 position = aPosition;\n        vec2 uv = aUV;\n        \n        {{start}}\n        \n        vColor = vec4(1.);\n        \n        {{main}}\n        \n        vUV = uv;\n        \n        mat3 modelViewProjectionMatrix = uProjectionMatrix * worldTransformMatrix * modelMatrix;\n\n        gl_Position = vec4((modelViewProjectionMatrix * vec3(position, 1.0)).xy, 0.0, 1.0);\n\n        vColor *= uWorldColorAlpha;\n\n        {{end}}\n    }\n`\n);\nconst fragmentGlTemplate = (\n  /* glsl */\n  `\n   \n    in vec4 vColor;\n    in vec2 vUV;\n\n    out vec4 finalColor;\n\n    {{header}}\n\n    void main(void) {\n        \n        {{start}}\n\n        vec4 outColor;\n      \n        {{main}}\n        \n        finalColor = outColor * vColor;\n        \n        {{end}}\n    }\n`\n);\n\nexport { fragmentGPUTemplate, fragmentGlTemplate, vertexGPUTemplate, vertexGlTemplate };\n//# sourceMappingURL=defaultProgramTemplate.mjs.map\n","\"use strict\";\nconst globalUniformsBit = {\n  name: \"global-uniforms-bit\",\n  vertex: {\n    header: (\n      /* wgsl */\n      `\n        struct GlobalUniforms {\n            uProjectionMatrix:mat3x3<f32>,\n            uWorldTransformMatrix:mat3x3<f32>,\n            uWorldColorAlpha: vec4<f32>,\n            uResolution: vec2<f32>,\n        }\n\n        @group(0) @binding(0) var<uniform> globalUniforms : GlobalUniforms;\n        `\n    )\n  }\n};\nconst globalUniformsUBOBitGl = {\n  name: \"global-uniforms-ubo-bit\",\n  vertex: {\n    header: (\n      /* glsl */\n      `\n          uniform globalUniforms {\n            mat3 uProjectionMatrix;\n            mat3 uWorldTransformMatrix;\n            vec4 uWorldColorAlpha;\n            vec2 uResolution;\n          };\n        `\n    )\n  }\n};\nconst globalUniformsBitGl = {\n  name: \"global-uniforms-bit\",\n  vertex: {\n    header: (\n      /* glsl */\n      `\n          uniform mat3 uProjectionMatrix;\n          uniform mat3 uWorldTransformMatrix;\n          uniform vec4 uWorldColorAlpha;\n          uniform vec2 uResolution;\n        `\n    )\n  }\n};\n\nexport { globalUniformsBit, globalUniformsBitGl, globalUniformsUBOBitGl };\n//# sourceMappingURL=globalUniformsBit.mjs.map\n","import { GlProgram } from '../renderers/gl/shader/GlProgram.mjs';\nimport { GpuProgram } from '../renderers/gpu/shader/GpuProgram.mjs';\nimport { compileHighShader, compileHighShaderGl } from './compiler/compileHighShader.mjs';\nimport { fragmentGPUTemplate, vertexGPUTemplate, vertexGlTemplate, fragmentGlTemplate } from './defaultProgramTemplate.mjs';\nimport { globalUniformsBit, globalUniformsBitGl } from './shader-bits/globalUniformsBit.mjs';\n\n\"use strict\";\nfunction compileHighShaderGpuProgram({ bits, name }) {\n  const source = compileHighShader({\n    template: {\n      fragment: fragmentGPUTemplate,\n      vertex: vertexGPUTemplate\n    },\n    bits: [\n      globalUniformsBit,\n      ...bits\n    ]\n  });\n  return GpuProgram.from({\n    name,\n    vertex: {\n      source: source.vertex,\n      entryPoint: \"main\"\n    },\n    fragment: {\n      source: source.fragment,\n      entryPoint: \"main\"\n    }\n  });\n}\nfunction compileHighShaderGlProgram({ bits, name }) {\n  return new GlProgram({\n    name,\n    ...compileHighShaderGl({\n      template: {\n        vertex: vertexGlTemplate,\n        fragment: fragmentGlTemplate\n      },\n      bits: [\n        globalUniformsBitGl,\n        ...bits\n      ]\n    })\n  });\n}\n\nexport { compileHighShaderGlProgram, compileHighShaderGpuProgram };\n//# sourceMappingURL=compileHighShaderToProgram.mjs.map\n","\"use strict\";\nconst colorBit = {\n  name: \"color-bit\",\n  vertex: {\n    header: (\n      /* wgsl */\n      `\n            @in aColor: vec4<f32>;\n        `\n    ),\n    main: (\n      /* wgsl */\n      `\n            vColor *= vec4<f32>(aColor.rgb * aColor.a, aColor.a);\n        `\n    )\n  }\n};\nconst colorBitGl = {\n  name: \"color-bit\",\n  vertex: {\n    header: (\n      /* glsl */\n      `\n            in vec4 aColor;\n        `\n    ),\n    main: (\n      /* glsl */\n      `\n            vColor *= vec4(aColor.rgb * aColor.a, aColor.a);\n        `\n    )\n  }\n};\n\nexport { colorBit, colorBitGl };\n//# sourceMappingURL=colorBit.mjs.map\n","\"use strict\";\nconst textureBatchBitGpuCache = {};\nfunction generateBindingSrc(maxTextures) {\n  const src = [];\n  if (maxTextures === 1) {\n    src.push(\"@group(1) @binding(0) var textureSource1: texture_2d<f32>;\");\n    src.push(\"@group(1) @binding(1) var textureSampler1: sampler;\");\n  } else {\n    let bindingIndex = 0;\n    for (let i = 0; i < maxTextures; i++) {\n      src.push(`@group(1) @binding(${bindingIndex++}) var textureSource${i + 1}: texture_2d<f32>;`);\n      src.push(`@group(1) @binding(${bindingIndex++}) var textureSampler${i + 1}: sampler;`);\n    }\n  }\n  return src.join(\"\\n\");\n}\nfunction generateSampleSrc(maxTextures) {\n  const src = [];\n  if (maxTextures === 1) {\n    src.push(\"outColor = textureSampleGrad(textureSource1, textureSampler1, vUV, uvDx, uvDy);\");\n  } else {\n    src.push(\"switch vTextureId {\");\n    for (let i = 0; i < maxTextures; i++) {\n      if (i === maxTextures - 1) {\n        src.push(`  default:{`);\n      } else {\n        src.push(`  case ${i}:{`);\n      }\n      src.push(`      outColor = textureSampleGrad(textureSource${i + 1}, textureSampler${i + 1}, vUV, uvDx, uvDy);`);\n      src.push(`      break;}`);\n    }\n    src.push(`}`);\n  }\n  return src.join(\"\\n\");\n}\nfunction generateTextureBatchBit(maxTextures) {\n  if (!textureBatchBitGpuCache[maxTextures]) {\n    textureBatchBitGpuCache[maxTextures] = {\n      name: \"texture-batch-bit\",\n      vertex: {\n        header: `\n                @in aTextureIdAndRound: vec2<u32>;\n                @out @interpolate(flat) vTextureId : u32;\n            `,\n        main: `\n                vTextureId = aTextureIdAndRound.y;\n            `,\n        end: `\n                if(aTextureIdAndRound.x == 1)\n                {\n                    vPosition = vec4<f32>(roundPixels(vPosition.xy, globalUniforms.uResolution), vPosition.zw);\n                }\n            `\n      },\n      fragment: {\n        header: `\n                @in @interpolate(flat) vTextureId: u32;\n\n                ${generateBindingSrc(maxTextures)}\n            `,\n        main: `\n                var uvDx = dpdx(vUV);\n                var uvDy = dpdy(vUV);\n\n                ${generateSampleSrc(maxTextures)}\n            `\n      }\n    };\n  }\n  return textureBatchBitGpuCache[maxTextures];\n}\nconst textureBatchBitGlCache = {};\nfunction generateSampleGlSrc(maxTextures) {\n  const src = [];\n  for (let i = 0; i < maxTextures; i++) {\n    if (i > 0) {\n      src.push(\"else\");\n    }\n    if (i < maxTextures - 1) {\n      src.push(`if(vTextureId < ${i}.5)`);\n    }\n    src.push(\"{\");\n    src.push(`\toutColor = texture(uTextures[${i}], vUV);`);\n    src.push(\"}\");\n  }\n  return src.join(\"\\n\");\n}\nfunction generateTextureBatchBitGl(maxTextures) {\n  if (!textureBatchBitGlCache[maxTextures]) {\n    textureBatchBitGlCache[maxTextures] = {\n      name: \"texture-batch-bit\",\n      vertex: {\n        header: `\n                in vec2 aTextureIdAndRound;\n                out float vTextureId;\n\n            `,\n        main: `\n                vTextureId = aTextureIdAndRound.y;\n            `,\n        end: `\n                if(aTextureIdAndRound.x == 1.)\n                {\n                    gl_Position.xy = roundPixels(gl_Position.xy, uResolution);\n                }\n            `\n      },\n      fragment: {\n        header: `\n                in float vTextureId;\n\n                uniform sampler2D uTextures[${maxTextures}];\n\n            `,\n        main: `\n\n                ${generateSampleGlSrc(maxTextures)}\n            `\n      }\n    };\n  }\n  return textureBatchBitGlCache[maxTextures];\n}\n\nexport { generateTextureBatchBit, generateTextureBatchBitGl };\n//# sourceMappingURL=generateTextureBatchBit.mjs.map\n","\"use strict\";\nconst roundPixelsBit = {\n  name: \"round-pixels-bit\",\n  vertex: {\n    header: (\n      /* wgsl */\n      `\n            fn roundPixels(position: vec2<f32>, targetSize: vec2<f32>) -> vec2<f32> \n            {\n                return (floor(((position * 0.5 + 0.5) * targetSize) + 0.5) / targetSize) * 2.0 - 1.0;\n            }\n        `\n    )\n  }\n};\nconst roundPixelsBitGl = {\n  name: \"round-pixels-bit\",\n  vertex: {\n    header: (\n      /* glsl */\n      `   \n            vec2 roundPixels(vec2 position, vec2 targetSize)\n            {       \n                return (floor(((position * 0.5 + 0.5) * targetSize) + 0.5) / targetSize) * 2.0 - 1.0;\n            }\n        `\n    )\n  }\n};\n\nexport { roundPixelsBit, roundPixelsBitGl };\n//# sourceMappingURL=roundPixelsBit.mjs.map\n","import { UniformGroup } from '../../shared/shader/UniformGroup.mjs';\n\n\"use strict\";\nconst batchSamplersUniformGroupHash = {};\nfunction getBatchSamplersUniformGroup(maxTextures) {\n  let batchSamplersUniformGroup = batchSamplersUniformGroupHash[maxTextures];\n  if (batchSamplersUniformGroup)\n    return batchSamplersUniformGroup;\n  const sampleValues = new Int32Array(maxTextures);\n  for (let i = 0; i < maxTextures; i++) {\n    sampleValues[i] = i;\n  }\n  batchSamplersUniformGroup = batchSamplersUniformGroupHash[maxTextures] = new UniformGroup({\n    uTextures: { value: sampleValues, type: `i32`, size: maxTextures }\n  }, { isStatic: true });\n  return batchSamplersUniformGroup;\n}\n\nexport { getBatchSamplersUniformGroup };\n//# sourceMappingURL=getBatchSamplersUniformGroup.mjs.map\n","import { compileHighShaderGlProgram, compileHighShaderGpuProgram } from '../../high-shader/compileHighShaderToProgram.mjs';\nimport { colorBitGl, colorBit } from '../../high-shader/shader-bits/colorBit.mjs';\nimport { generateTextureBatchBitGl, generateTextureBatchBit } from '../../high-shader/shader-bits/generateTextureBatchBit.mjs';\nimport { roundPixelsBitGl, roundPixelsBit } from '../../high-shader/shader-bits/roundPixelsBit.mjs';\nimport { getBatchSamplersUniformGroup } from '../../renderers/gl/shader/getBatchSamplersUniformGroup.mjs';\nimport { Shader } from '../../renderers/shared/shader/Shader.mjs';\n\n\"use strict\";\nclass DefaultShader extends Shader {\n  constructor(maxTextures) {\n    const glProgram = compileHighShaderGlProgram({\n      name: \"batch\",\n      bits: [\n        colorBitGl,\n        generateTextureBatchBitGl(maxTextures),\n        roundPixelsBitGl\n      ]\n    });\n    const gpuProgram = compileHighShaderGpuProgram({\n      name: \"batch\",\n      bits: [\n        colorBit,\n        generateTextureBatchBit(maxTextures),\n        roundPixelsBit\n      ]\n    });\n    super({\n      glProgram,\n      gpuProgram,\n      resources: {\n        batchSamplers: getBatchSamplersUniformGroup(maxTextures)\n      }\n    });\n  }\n}\n\nexport { DefaultShader };\n//# sourceMappingURL=DefaultShader.mjs.map\n","import { ExtensionType } from '../../../extensions/Extensions.mjs';\nimport { Batcher } from './Batcher.mjs';\nimport { BatchGeometry } from './BatchGeometry.mjs';\nimport { DefaultShader } from './DefaultShader.mjs';\n\n\"use strict\";\nlet defaultShader = null;\nconst _DefaultBatcher = class _DefaultBatcher extends Batcher {\n  constructor() {\n    super(...arguments);\n    this.geometry = new BatchGeometry();\n    this.shader = defaultShader || (defaultShader = new DefaultShader(this.maxTextures));\n    this.name = _DefaultBatcher.extension.name;\n    /** The size of one attribute. 1 = 32 bit. x, y, u, v, color, textureIdAndRound -> total = 6 */\n    this.vertexSize = 6;\n  }\n  /**\n   * Packs the attributes of a DefaultBatchableMeshElement into the provided views.\n   * @param element - The DefaultBatchableMeshElement to pack.\n   * @param float32View - The Float32Array view to pack into.\n   * @param uint32View - The Uint32Array view to pack into.\n   * @param index - The starting index in the views.\n   * @param textureId - The texture ID to use.\n   */\n  packAttributes(element, float32View, uint32View, index, textureId) {\n    const textureIdAndRound = textureId << 16 | element.roundPixels & 65535;\n    const wt = element.transform;\n    const a = wt.a;\n    const b = wt.b;\n    const c = wt.c;\n    const d = wt.d;\n    const tx = wt.tx;\n    const ty = wt.ty;\n    const { positions, uvs } = element;\n    const argb = element.color;\n    const offset = element.attributeOffset;\n    const end = offset + element.attributeSize;\n    for (let i = offset; i < end; i++) {\n      const i2 = i * 2;\n      const x = positions[i2];\n      const y = positions[i2 + 1];\n      float32View[index++] = a * x + c * y + tx;\n      float32View[index++] = d * y + b * x + ty;\n      float32View[index++] = uvs[i2];\n      float32View[index++] = uvs[i2 + 1];\n      uint32View[index++] = argb;\n      uint32View[index++] = textureIdAndRound;\n    }\n  }\n  /**\n   * Packs the attributes of a DefaultBatchableQuadElement into the provided views.\n   * @param element - The DefaultBatchableQuadElement to pack.\n   * @param float32View - The Float32Array view to pack into.\n   * @param uint32View - The Uint32Array view to pack into.\n   * @param index - The starting index in the views.\n   * @param textureId - The texture ID to use.\n   */\n  packQuadAttributes(element, float32View, uint32View, index, textureId) {\n    const texture = element.texture;\n    const wt = element.transform;\n    const a = wt.a;\n    const b = wt.b;\n    const c = wt.c;\n    const d = wt.d;\n    const tx = wt.tx;\n    const ty = wt.ty;\n    const bounds = element.bounds;\n    const w0 = bounds.maxX;\n    const w1 = bounds.minX;\n    const h0 = bounds.maxY;\n    const h1 = bounds.minY;\n    const uvs = texture.uvs;\n    const argb = element.color;\n    const textureIdAndRound = textureId << 16 | element.roundPixels & 65535;\n    float32View[index + 0] = a * w1 + c * h1 + tx;\n    float32View[index + 1] = d * h1 + b * w1 + ty;\n    float32View[index + 2] = uvs.x0;\n    float32View[index + 3] = uvs.y0;\n    uint32View[index + 4] = argb;\n    uint32View[index + 5] = textureIdAndRound;\n    float32View[index + 6] = a * w0 + c * h1 + tx;\n    float32View[index + 7] = d * h1 + b * w0 + ty;\n    float32View[index + 8] = uvs.x1;\n    float32View[index + 9] = uvs.y1;\n    uint32View[index + 10] = argb;\n    uint32View[index + 11] = textureIdAndRound;\n    float32View[index + 12] = a * w0 + c * h0 + tx;\n    float32View[index + 13] = d * h0 + b * w0 + ty;\n    float32View[index + 14] = uvs.x2;\n    float32View[index + 15] = uvs.y2;\n    uint32View[index + 16] = argb;\n    uint32View[index + 17] = textureIdAndRound;\n    float32View[index + 18] = a * w1 + c * h0 + tx;\n    float32View[index + 19] = d * h0 + b * w1 + ty;\n    float32View[index + 20] = uvs.x3;\n    float32View[index + 21] = uvs.y3;\n    uint32View[index + 22] = argb;\n    uint32View[index + 23] = textureIdAndRound;\n  }\n};\n/** @ignore */\n_DefaultBatcher.extension = {\n  type: [\n    ExtensionType.Batcher\n  ],\n  name: \"default\"\n};\nlet DefaultBatcher = _DefaultBatcher;\n\nexport { DefaultBatcher };\n//# sourceMappingURL=DefaultBatcher.mjs.map\n","\"use strict\";\nfunction buildUvs(vertices, verticesStride, verticesOffset, uvs, uvsOffset, uvsStride, size, matrix = null) {\n  let index = 0;\n  verticesOffset *= verticesStride;\n  uvsOffset *= uvsStride;\n  const a = matrix.a;\n  const b = matrix.b;\n  const c = matrix.c;\n  const d = matrix.d;\n  const tx = matrix.tx;\n  const ty = matrix.ty;\n  while (index < size) {\n    const x = vertices[verticesOffset];\n    const y = vertices[verticesOffset + 1];\n    uvs[uvsOffset] = a * x + c * y + tx;\n    uvs[uvsOffset + 1] = b * x + d * y + ty;\n    uvsOffset += uvsStride;\n    verticesOffset += verticesStride;\n    index++;\n  }\n}\nfunction buildSimpleUvs(uvs, uvsOffset, uvsStride, size) {\n  let index = 0;\n  uvsOffset *= uvsStride;\n  while (index < size) {\n    uvs[uvsOffset] = 0;\n    uvs[uvsOffset + 1] = 0;\n    uvsOffset += uvsStride;\n    index++;\n  }\n}\n\nexport { buildSimpleUvs, buildUvs };\n//# sourceMappingURL=buildUvs.mjs.map\n","\"use strict\";\nfunction transformVertices(vertices, m, offset, stride, size) {\n  const a = m.a;\n  const b = m.b;\n  const c = m.c;\n  const d = m.d;\n  const tx = m.tx;\n  const ty = m.ty;\n  offset || (offset = 0);\n  stride || (stride = 2);\n  size || (size = vertices.length / stride - offset);\n  let index = offset * stride;\n  for (let i = 0; i < size; i++) {\n    const x = vertices[index];\n    const y = vertices[index + 1];\n    vertices[index] = a * x + c * y + tx;\n    vertices[index + 1] = b * x + d * y + ty;\n    index += stride;\n  }\n}\n\nexport { transformVertices };\n//# sourceMappingURL=transformVertices.mjs.map\n","import { Matrix } from '../../../maths/matrix/Matrix.mjs';\nimport { multiplyHexColors } from '../../container/utils/multiplyHexColors.mjs';\n\n\"use strict\";\nconst identityMatrix = new Matrix();\nclass BatchableGraphics {\n  constructor() {\n    this.packAsQuad = false;\n    this.batcherName = \"default\";\n    this.topology = \"triangle-list\";\n    this.applyTransform = true;\n    this.roundPixels = 0;\n    this._batcher = null;\n    this._batch = null;\n  }\n  get uvs() {\n    return this.geometryData.uvs;\n  }\n  get positions() {\n    return this.geometryData.vertices;\n  }\n  get indices() {\n    return this.geometryData.indices;\n  }\n  get blendMode() {\n    if (this.applyTransform) {\n      return this.renderable.groupBlendMode;\n    }\n    return \"normal\";\n  }\n  get color() {\n    const rgb = this.baseColor;\n    const bgr = rgb >> 16 | rgb & 65280 | (rgb & 255) << 16;\n    const renderable = this.renderable;\n    if (renderable) {\n      return multiplyHexColors(bgr, renderable.groupColor) + (this.alpha * renderable.groupAlpha * 255 << 24);\n    }\n    return bgr + (this.alpha * 255 << 24);\n  }\n  get transform() {\n    return this.renderable?.groupTransform || identityMatrix;\n  }\n  copyTo(gpuBuffer) {\n    gpuBuffer.indexOffset = this.indexOffset;\n    gpuBuffer.indexSize = this.indexSize;\n    gpuBuffer.attributeOffset = this.attributeOffset;\n    gpuBuffer.attributeSize = this.attributeSize;\n    gpuBuffer.baseColor = this.baseColor;\n    gpuBuffer.alpha = this.alpha;\n    gpuBuffer.texture = this.texture;\n    gpuBuffer.geometryData = this.geometryData;\n    gpuBuffer.topology = this.topology;\n  }\n  reset() {\n    this.applyTransform = true;\n    this.renderable = null;\n    this.topology = \"triangle-list\";\n  }\n}\n\nexport { BatchableGraphics };\n//# sourceMappingURL=BatchableGraphics.mjs.map\n","import { ExtensionType } from '../../../../extensions/Extensions.mjs';\n\n\"use strict\";\nconst buildCircle = {\n  extension: {\n    type: ExtensionType.ShapeBuilder,\n    name: \"circle\"\n  },\n  build(shape, points) {\n    let x;\n    let y;\n    let dx;\n    let dy;\n    let rx;\n    let ry;\n    if (shape.type === \"circle\") {\n      const circle = shape;\n      x = circle.x;\n      y = circle.y;\n      rx = ry = circle.radius;\n      dx = dy = 0;\n    } else if (shape.type === \"ellipse\") {\n      const ellipse = shape;\n      x = ellipse.x;\n      y = ellipse.y;\n      rx = ellipse.halfWidth;\n      ry = ellipse.halfHeight;\n      dx = dy = 0;\n    } else {\n      const roundedRect = shape;\n      const halfWidth = roundedRect.width / 2;\n      const halfHeight = roundedRect.height / 2;\n      x = roundedRect.x + halfWidth;\n      y = roundedRect.y + halfHeight;\n      rx = ry = Math.max(0, Math.min(roundedRect.radius, Math.min(halfWidth, halfHeight)));\n      dx = halfWidth - rx;\n      dy = halfHeight - ry;\n    }\n    if (!(rx >= 0 && ry >= 0 && dx >= 0 && dy >= 0)) {\n      return points;\n    }\n    const n = Math.ceil(2.3 * Math.sqrt(rx + ry));\n    const m = n * 8 + (dx ? 4 : 0) + (dy ? 4 : 0);\n    if (m === 0) {\n      return points;\n    }\n    if (n === 0) {\n      points[0] = points[6] = x + dx;\n      points[1] = points[3] = y + dy;\n      points[2] = points[4] = x - dx;\n      points[5] = points[7] = y - dy;\n      return points;\n    }\n    let j1 = 0;\n    let j2 = n * 4 + (dx ? 2 : 0) + 2;\n    let j3 = j2;\n    let j4 = m;\n    let x0 = dx + rx;\n    let y0 = dy;\n    let x1 = x + x0;\n    let x2 = x - x0;\n    let y1 = y + y0;\n    points[j1++] = x1;\n    points[j1++] = y1;\n    points[--j2] = y1;\n    points[--j2] = x2;\n    if (dy) {\n      const y22 = y - y0;\n      points[j3++] = x2;\n      points[j3++] = y22;\n      points[--j4] = y22;\n      points[--j4] = x1;\n    }\n    for (let i = 1; i < n; i++) {\n      const a = Math.PI / 2 * (i / n);\n      const x02 = dx + Math.cos(a) * rx;\n      const y02 = dy + Math.sin(a) * ry;\n      const x12 = x + x02;\n      const x22 = x - x02;\n      const y12 = y + y02;\n      const y22 = y - y02;\n      points[j1++] = x12;\n      points[j1++] = y12;\n      points[--j2] = y12;\n      points[--j2] = x22;\n      points[j3++] = x22;\n      points[j3++] = y22;\n      points[--j4] = y22;\n      points[--j4] = x12;\n    }\n    x0 = dx;\n    y0 = dy + ry;\n    x1 = x + x0;\n    x2 = x - x0;\n    y1 = y + y0;\n    const y2 = y - y0;\n    points[j1++] = x1;\n    points[j1++] = y1;\n    points[--j4] = y2;\n    points[--j4] = x1;\n    if (dx) {\n      points[j1++] = x2;\n      points[j1++] = y1;\n      points[--j4] = y2;\n      points[--j4] = x2;\n    }\n    return points;\n  },\n  triangulate(points, vertices, verticesStride, verticesOffset, indices, indicesOffset) {\n    if (points.length === 0) {\n      return;\n    }\n    let centerX = 0;\n    let centerY = 0;\n    for (let i = 0; i < points.length; i += 2) {\n      centerX += points[i];\n      centerY += points[i + 1];\n    }\n    centerX /= points.length / 2;\n    centerY /= points.length / 2;\n    let count = verticesOffset;\n    vertices[count * verticesStride] = centerX;\n    vertices[count * verticesStride + 1] = centerY;\n    const centerIndex = count++;\n    for (let i = 0; i < points.length; i += 2) {\n      vertices[count * verticesStride] = points[i];\n      vertices[count * verticesStride + 1] = points[i + 1];\n      if (i > 0) {\n        indices[indicesOffset++] = count;\n        indices[indicesOffset++] = centerIndex;\n        indices[indicesOffset++] = count - 1;\n      }\n      count++;\n    }\n    indices[indicesOffset++] = centerIndex + 1;\n    indices[indicesOffset++] = centerIndex;\n    indices[indicesOffset++] = count - 1;\n  }\n};\nconst buildEllipse = { ...buildCircle, extension: { ...buildCircle.extension, name: \"ellipse\" } };\nconst buildRoundedRectangle = { ...buildCircle, extension: { ...buildCircle.extension, name: \"roundedRectangle\" } };\n\nexport { buildCircle, buildEllipse, buildRoundedRectangle };\n//# sourceMappingURL=buildCircle.mjs.map\n","\"use strict\";\nconst closePointEps = 1e-4;\nconst curveEps = 1e-4;\n\nexport { closePointEps, curveEps };\n//# sourceMappingURL=const.mjs.map\n","\"use strict\";\nfunction getOrientationOfPoints(points) {\n  const m = points.length;\n  if (m < 6) {\n    return 1;\n  }\n  let area = 0;\n  for (let i = 0, x1 = points[m - 2], y1 = points[m - 1]; i < m; i += 2) {\n    const x2 = points[i];\n    const y2 = points[i + 1];\n    area += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  if (area < 0) {\n    return -1;\n  }\n  return 1;\n}\n\nexport { getOrientationOfPoints };\n//# sourceMappingURL=getOrientationOfPoints.mjs.map\n","import { Point } from '../../../../maths/point/Point.mjs';\nimport { closePointEps, curveEps } from '../const.mjs';\nimport { getOrientationOfPoints } from '../utils/getOrientationOfPoints.mjs';\n\n\"use strict\";\nfunction square(x, y, nx, ny, innerWeight, outerWeight, clockwise, verts) {\n  const ix = x - nx * innerWeight;\n  const iy = y - ny * innerWeight;\n  const ox = x + nx * outerWeight;\n  const oy = y + ny * outerWeight;\n  let exx;\n  let eyy;\n  if (clockwise) {\n    exx = ny;\n    eyy = -nx;\n  } else {\n    exx = -ny;\n    eyy = nx;\n  }\n  const eix = ix + exx;\n  const eiy = iy + eyy;\n  const eox = ox + exx;\n  const eoy = oy + eyy;\n  verts.push(eix, eiy);\n  verts.push(eox, eoy);\n  return 2;\n}\nfunction round(cx, cy, sx, sy, ex, ey, verts, clockwise) {\n  const cx2p0x = sx - cx;\n  const cy2p0y = sy - cy;\n  let angle0 = Math.atan2(cx2p0x, cy2p0y);\n  let angle1 = Math.atan2(ex - cx, ey - cy);\n  if (clockwise && angle0 < angle1) {\n    angle0 += Math.PI * 2;\n  } else if (!clockwise && angle0 > angle1) {\n    angle1 += Math.PI * 2;\n  }\n  let startAngle = angle0;\n  const angleDiff = angle1 - angle0;\n  const absAngleDiff = Math.abs(angleDiff);\n  const radius = Math.sqrt(cx2p0x * cx2p0x + cy2p0y * cy2p0y);\n  const segCount = (15 * absAngleDiff * Math.sqrt(radius) / Math.PI >> 0) + 1;\n  const angleInc = angleDiff / segCount;\n  startAngle += angleInc;\n  if (clockwise) {\n    verts.push(cx, cy);\n    verts.push(sx, sy);\n    for (let i = 1, angle = startAngle; i < segCount; i++, angle += angleInc) {\n      verts.push(cx, cy);\n      verts.push(\n        cx + Math.sin(angle) * radius,\n        cy + Math.cos(angle) * radius\n      );\n    }\n    verts.push(cx, cy);\n    verts.push(ex, ey);\n  } else {\n    verts.push(sx, sy);\n    verts.push(cx, cy);\n    for (let i = 1, angle = startAngle; i < segCount; i++, angle += angleInc) {\n      verts.push(\n        cx + Math.sin(angle) * radius,\n        cy + Math.cos(angle) * radius\n      );\n      verts.push(cx, cy);\n    }\n    verts.push(ex, ey);\n    verts.push(cx, cy);\n  }\n  return segCount * 2;\n}\nfunction buildLine(points, lineStyle, flipAlignment, closed, vertices, indices) {\n  const eps = closePointEps;\n  if (points.length === 0) {\n    return;\n  }\n  const style = lineStyle;\n  let alignment = style.alignment;\n  if (lineStyle.alignment !== 0.5) {\n    let orientation = getOrientationOfPoints(points);\n    if (flipAlignment)\n      orientation *= -1;\n    alignment = (alignment - 0.5) * orientation + 0.5;\n  }\n  const firstPoint = new Point(points[0], points[1]);\n  const lastPoint = new Point(points[points.length - 2], points[points.length - 1]);\n  const closedShape = closed;\n  const closedPath = Math.abs(firstPoint.x - lastPoint.x) < eps && Math.abs(firstPoint.y - lastPoint.y) < eps;\n  if (closedShape) {\n    points = points.slice();\n    if (closedPath) {\n      points.pop();\n      points.pop();\n      lastPoint.set(points[points.length - 2], points[points.length - 1]);\n    }\n    const midPointX = (firstPoint.x + lastPoint.x) * 0.5;\n    const midPointY = (lastPoint.y + firstPoint.y) * 0.5;\n    points.unshift(midPointX, midPointY);\n    points.push(midPointX, midPointY);\n  }\n  const verts = vertices;\n  const length = points.length / 2;\n  let indexCount = points.length;\n  const indexStart = verts.length / 2;\n  const width = style.width / 2;\n  const widthSquared = width * width;\n  const miterLimitSquared = style.miterLimit * style.miterLimit;\n  let x0 = points[0];\n  let y0 = points[1];\n  let x1 = points[2];\n  let y1 = points[3];\n  let x2 = 0;\n  let y2 = 0;\n  let perpX = -(y0 - y1);\n  let perpY = x0 - x1;\n  let perp1x = 0;\n  let perp1y = 0;\n  let dist = Math.sqrt(perpX * perpX + perpY * perpY);\n  perpX /= dist;\n  perpY /= dist;\n  perpX *= width;\n  perpY *= width;\n  const ratio = alignment;\n  const innerWeight = (1 - ratio) * 2;\n  const outerWeight = ratio * 2;\n  if (!closedShape) {\n    if (style.cap === \"round\") {\n      indexCount += round(\n        x0 - perpX * (innerWeight - outerWeight) * 0.5,\n        y0 - perpY * (innerWeight - outerWeight) * 0.5,\n        x0 - perpX * innerWeight,\n        y0 - perpY * innerWeight,\n        x0 + perpX * outerWeight,\n        y0 + perpY * outerWeight,\n        verts,\n        true\n      ) + 2;\n    } else if (style.cap === \"square\") {\n      indexCount += square(x0, y0, perpX, perpY, innerWeight, outerWeight, true, verts);\n    }\n  }\n  verts.push(\n    x0 - perpX * innerWeight,\n    y0 - perpY * innerWeight\n  );\n  verts.push(\n    x0 + perpX * outerWeight,\n    y0 + perpY * outerWeight\n  );\n  for (let i = 1; i < length - 1; ++i) {\n    x0 = points[(i - 1) * 2];\n    y0 = points[(i - 1) * 2 + 1];\n    x1 = points[i * 2];\n    y1 = points[i * 2 + 1];\n    x2 = points[(i + 1) * 2];\n    y2 = points[(i + 1) * 2 + 1];\n    perpX = -(y0 - y1);\n    perpY = x0 - x1;\n    dist = Math.sqrt(perpX * perpX + perpY * perpY);\n    perpX /= dist;\n    perpY /= dist;\n    perpX *= width;\n    perpY *= width;\n    perp1x = -(y1 - y2);\n    perp1y = x1 - x2;\n    dist = Math.sqrt(perp1x * perp1x + perp1y * perp1y);\n    perp1x /= dist;\n    perp1y /= dist;\n    perp1x *= width;\n    perp1y *= width;\n    const dx0 = x1 - x0;\n    const dy0 = y0 - y1;\n    const dx1 = x1 - x2;\n    const dy1 = y2 - y1;\n    const dot = dx0 * dx1 + dy0 * dy1;\n    const cross = dy0 * dx1 - dy1 * dx0;\n    const clockwise = cross < 0;\n    if (Math.abs(cross) < 1e-3 * Math.abs(dot)) {\n      verts.push(\n        x1 - perpX * innerWeight,\n        y1 - perpY * innerWeight\n      );\n      verts.push(\n        x1 + perpX * outerWeight,\n        y1 + perpY * outerWeight\n      );\n      if (dot >= 0) {\n        if (style.join === \"round\") {\n          indexCount += round(\n            x1,\n            y1,\n            x1 - perpX * innerWeight,\n            y1 - perpY * innerWeight,\n            x1 - perp1x * innerWeight,\n            y1 - perp1y * innerWeight,\n            verts,\n            false\n          ) + 4;\n        } else {\n          indexCount += 2;\n        }\n        verts.push(\n          x1 - perp1x * outerWeight,\n          y1 - perp1y * outerWeight\n        );\n        verts.push(\n          x1 + perp1x * innerWeight,\n          y1 + perp1y * innerWeight\n        );\n      }\n      continue;\n    }\n    const c1 = (-perpX + x0) * (-perpY + y1) - (-perpX + x1) * (-perpY + y0);\n    const c2 = (-perp1x + x2) * (-perp1y + y1) - (-perp1x + x1) * (-perp1y + y2);\n    const px = (dx0 * c2 - dx1 * c1) / cross;\n    const py = (dy1 * c1 - dy0 * c2) / cross;\n    const pDist = (px - x1) * (px - x1) + (py - y1) * (py - y1);\n    const imx = x1 + (px - x1) * innerWeight;\n    const imy = y1 + (py - y1) * innerWeight;\n    const omx = x1 - (px - x1) * outerWeight;\n    const omy = y1 - (py - y1) * outerWeight;\n    const smallerInsideSegmentSq = Math.min(dx0 * dx0 + dy0 * dy0, dx1 * dx1 + dy1 * dy1);\n    const insideWeight = clockwise ? innerWeight : outerWeight;\n    const smallerInsideDiagonalSq = smallerInsideSegmentSq + insideWeight * insideWeight * widthSquared;\n    const insideMiterOk = pDist <= smallerInsideDiagonalSq;\n    if (insideMiterOk) {\n      if (style.join === \"bevel\" || pDist / widthSquared > miterLimitSquared) {\n        if (clockwise) {\n          verts.push(imx, imy);\n          verts.push(x1 + perpX * outerWeight, y1 + perpY * outerWeight);\n          verts.push(imx, imy);\n          verts.push(x1 + perp1x * outerWeight, y1 + perp1y * outerWeight);\n        } else {\n          verts.push(x1 - perpX * innerWeight, y1 - perpY * innerWeight);\n          verts.push(omx, omy);\n          verts.push(x1 - perp1x * innerWeight, y1 - perp1y * innerWeight);\n          verts.push(omx, omy);\n        }\n        indexCount += 2;\n      } else if (style.join === \"round\") {\n        if (clockwise) {\n          verts.push(imx, imy);\n          verts.push(x1 + perpX * outerWeight, y1 + perpY * outerWeight);\n          indexCount += round(\n            x1,\n            y1,\n            x1 + perpX * outerWeight,\n            y1 + perpY * outerWeight,\n            x1 + perp1x * outerWeight,\n            y1 + perp1y * outerWeight,\n            verts,\n            true\n          ) + 4;\n          verts.push(imx, imy);\n          verts.push(x1 + perp1x * outerWeight, y1 + perp1y * outerWeight);\n        } else {\n          verts.push(x1 - perpX * innerWeight, y1 - perpY * innerWeight);\n          verts.push(omx, omy);\n          indexCount += round(\n            x1,\n            y1,\n            x1 - perpX * innerWeight,\n            y1 - perpY * innerWeight,\n            x1 - perp1x * innerWeight,\n            y1 - perp1y * innerWeight,\n            verts,\n            false\n          ) + 4;\n          verts.push(x1 - perp1x * innerWeight, y1 - perp1y * innerWeight);\n          verts.push(omx, omy);\n        }\n      } else {\n        verts.push(imx, imy);\n        verts.push(omx, omy);\n      }\n    } else {\n      verts.push(x1 - perpX * innerWeight, y1 - perpY * innerWeight);\n      verts.push(x1 + perpX * outerWeight, y1 + perpY * outerWeight);\n      if (style.join === \"round\") {\n        if (clockwise) {\n          indexCount += round(\n            x1,\n            y1,\n            x1 + perpX * outerWeight,\n            y1 + perpY * outerWeight,\n            x1 + perp1x * outerWeight,\n            y1 + perp1y * outerWeight,\n            verts,\n            true\n          ) + 2;\n        } else {\n          indexCount += round(\n            x1,\n            y1,\n            x1 - perpX * innerWeight,\n            y1 - perpY * innerWeight,\n            x1 - perp1x * innerWeight,\n            y1 - perp1y * innerWeight,\n            verts,\n            false\n          ) + 2;\n        }\n      } else if (style.join === \"miter\" && pDist / widthSquared <= miterLimitSquared) {\n        if (clockwise) {\n          verts.push(omx, omy);\n          verts.push(omx, omy);\n        } else {\n          verts.push(imx, imy);\n          verts.push(imx, imy);\n        }\n        indexCount += 2;\n      }\n      verts.push(x1 - perp1x * innerWeight, y1 - perp1y * innerWeight);\n      verts.push(x1 + perp1x * outerWeight, y1 + perp1y * outerWeight);\n      indexCount += 2;\n    }\n  }\n  x0 = points[(length - 2) * 2];\n  y0 = points[(length - 2) * 2 + 1];\n  x1 = points[(length - 1) * 2];\n  y1 = points[(length - 1) * 2 + 1];\n  perpX = -(y0 - y1);\n  perpY = x0 - x1;\n  dist = Math.sqrt(perpX * perpX + perpY * perpY);\n  perpX /= dist;\n  perpY /= dist;\n  perpX *= width;\n  perpY *= width;\n  verts.push(x1 - perpX * innerWeight, y1 - perpY * innerWeight);\n  verts.push(x1 + perpX * outerWeight, y1 + perpY * outerWeight);\n  if (!closedShape) {\n    if (style.cap === \"round\") {\n      indexCount += round(\n        x1 - perpX * (innerWeight - outerWeight) * 0.5,\n        y1 - perpY * (innerWeight - outerWeight) * 0.5,\n        x1 - perpX * innerWeight,\n        y1 - perpY * innerWeight,\n        x1 + perpX * outerWeight,\n        y1 + perpY * outerWeight,\n        verts,\n        false\n      ) + 2;\n    } else if (style.cap === \"square\") {\n      indexCount += square(x1, y1, perpX, perpY, innerWeight, outerWeight, false, verts);\n    }\n  }\n  const eps2 = curveEps * curveEps;\n  for (let i = indexStart; i < indexCount + indexStart - 2; ++i) {\n    x0 = verts[i * 2];\n    y0 = verts[i * 2 + 1];\n    x1 = verts[(i + 1) * 2];\n    y1 = verts[(i + 1) * 2 + 1];\n    x2 = verts[(i + 2) * 2];\n    y2 = verts[(i + 2) * 2 + 1];\n    if (Math.abs(x0 * (y1 - y2) + x1 * (y2 - y0) + x2 * (y0 - y1)) < eps2) {\n      continue;\n    }\n    indices.push(i, i + 1, i + 2);\n  }\n}\n\nexport { buildLine };\n//# sourceMappingURL=buildLine.mjs.map\n","import { closePointEps } from '../const.mjs';\n\n\"use strict\";\nfunction buildPixelLine(points, closed, vertices, indices) {\n  const eps = closePointEps;\n  if (points.length === 0) {\n    return;\n  }\n  const fx = points[0];\n  const fy = points[1];\n  const lx = points[points.length - 2];\n  const ly = points[points.length - 1];\n  const closePath = closed || Math.abs(fx - lx) < eps && Math.abs(fy - ly) < eps;\n  const verts = vertices;\n  const length = points.length / 2;\n  const indexStart = verts.length / 2;\n  for (let i = 0; i < length; i++) {\n    verts.push(points[i * 2]);\n    verts.push(points[i * 2 + 1]);\n  }\n  for (let i = 0; i < length - 1; i++) {\n    indices.push(indexStart + i, indexStart + i + 1);\n  }\n  if (closePath) {\n    indices.push(indexStart + length - 1, indexStart);\n  }\n}\n\nexport { buildPixelLine };\n//# sourceMappingURL=buildPixelLine.mjs.map\n","import earcut from 'earcut';\n\n\"use strict\";\nfunction triangulateWithHoles(points, holes, vertices, verticesStride, verticesOffset, indices, indicesOffset) {\n  const triangles = earcut(points, holes, 2);\n  if (!triangles) {\n    return;\n  }\n  for (let i = 0; i < triangles.length; i += 3) {\n    indices[indicesOffset++] = triangles[i] + verticesOffset;\n    indices[indicesOffset++] = triangles[i + 1] + verticesOffset;\n    indices[indicesOffset++] = triangles[i + 2] + verticesOffset;\n  }\n  let index = verticesOffset * verticesStride;\n  for (let i = 0; i < points.length; i += 2) {\n    vertices[index] = points[i];\n    vertices[index + 1] = points[i + 1];\n    index += verticesStride;\n  }\n}\n\nexport { triangulateWithHoles };\n//# sourceMappingURL=triangulateWithHoles.mjs.map\n","import { ExtensionType } from '../../../../extensions/Extensions.mjs';\nimport { triangulateWithHoles } from '../utils/triangulateWithHoles.mjs';\n\n\"use strict\";\nconst emptyArray = [];\nconst buildPolygon = {\n  extension: {\n    type: ExtensionType.ShapeBuilder,\n    name: \"polygon\"\n  },\n  build(shape, points) {\n    for (let i = 0; i < shape.points.length; i++) {\n      points[i] = shape.points[i];\n    }\n    return points;\n  },\n  triangulate(points, vertices, verticesStride, verticesOffset, indices, indicesOffset) {\n    triangulateWithHoles(points, emptyArray, vertices, verticesStride, verticesOffset, indices, indicesOffset);\n  }\n};\n\nexport { buildPolygon };\n//# sourceMappingURL=buildPolygon.mjs.map\n","import { ExtensionType } from '../../../../extensions/Extensions.mjs';\n\n\"use strict\";\nconst buildRectangle = {\n  extension: {\n    type: ExtensionType.ShapeBuilder,\n    name: \"rectangle\"\n  },\n  build(shape, points) {\n    const rectData = shape;\n    const x = rectData.x;\n    const y = rectData.y;\n    const width = rectData.width;\n    const height = rectData.height;\n    if (!(width >= 0 && height >= 0)) {\n      return points;\n    }\n    points[0] = x;\n    points[1] = y;\n    points[2] = x + width;\n    points[3] = y;\n    points[4] = x + width;\n    points[5] = y + height;\n    points[6] = x;\n    points[7] = y + height;\n    return points;\n  },\n  triangulate(points, vertices, verticesStride, verticesOffset, indices, indicesOffset) {\n    let count = 0;\n    verticesOffset *= verticesStride;\n    vertices[verticesOffset + count] = points[0];\n    vertices[verticesOffset + count + 1] = points[1];\n    count += verticesStride;\n    vertices[verticesOffset + count] = points[2];\n    vertices[verticesOffset + count + 1] = points[3];\n    count += verticesStride;\n    vertices[verticesOffset + count] = points[6];\n    vertices[verticesOffset + count + 1] = points[7];\n    count += verticesStride;\n    vertices[verticesOffset + count] = points[4];\n    vertices[verticesOffset + count + 1] = points[5];\n    count += verticesStride;\n    const verticesIndex = verticesOffset / verticesStride;\n    indices[indicesOffset++] = verticesIndex;\n    indices[indicesOffset++] = verticesIndex + 1;\n    indices[indicesOffset++] = verticesIndex + 2;\n    indices[indicesOffset++] = verticesIndex + 1;\n    indices[indicesOffset++] = verticesIndex + 3;\n    indices[indicesOffset++] = verticesIndex + 2;\n  }\n};\n\nexport { buildRectangle };\n//# sourceMappingURL=buildRectangle.mjs.map\n","import { ExtensionType } from '../../../../extensions/Extensions.mjs';\n\n\"use strict\";\nconst buildTriangle = {\n  extension: {\n    type: ExtensionType.ShapeBuilder,\n    name: \"triangle\"\n  },\n  build(shape, points) {\n    points[0] = shape.x;\n    points[1] = shape.y;\n    points[2] = shape.x2;\n    points[3] = shape.y2;\n    points[4] = shape.x3;\n    points[5] = shape.y3;\n    return points;\n  },\n  triangulate(points, vertices, verticesStride, verticesOffset, indices, indicesOffset) {\n    let count = 0;\n    verticesOffset *= verticesStride;\n    vertices[verticesOffset + count] = points[0];\n    vertices[verticesOffset + count + 1] = points[1];\n    count += verticesStride;\n    vertices[verticesOffset + count] = points[2];\n    vertices[verticesOffset + count + 1] = points[3];\n    count += verticesStride;\n    vertices[verticesOffset + count] = points[4];\n    vertices[verticesOffset + count + 1] = points[5];\n    const verticesIndex = verticesOffset / verticesStride;\n    indices[indicesOffset++] = verticesIndex;\n    indices[indicesOffset++] = verticesIndex + 1;\n    indices[indicesOffset++] = verticesIndex + 2;\n  }\n};\n\nexport { buildTriangle };\n//# sourceMappingURL=buildTriangle.mjs.map\n","import { extensions, ExtensionType } from '../../../../extensions/Extensions.mjs';\nimport { Rectangle } from '../../../../maths/shapes/Rectangle.mjs';\nimport { buildUvs, buildSimpleUvs } from '../../../../rendering/renderers/shared/geometry/utils/buildUvs.mjs';\nimport { transformVertices } from '../../../../rendering/renderers/shared/geometry/utils/transformVertices.mjs';\nimport { Texture } from '../../../../rendering/renderers/shared/texture/Texture.mjs';\nimport { BigPool } from '../../../../utils/pool/PoolGroup.mjs';\nimport { BatchableGraphics } from '../BatchableGraphics.mjs';\nimport { buildCircle, buildEllipse, buildRoundedRectangle } from '../buildCommands/buildCircle.mjs';\nimport { buildLine } from '../buildCommands/buildLine.mjs';\nimport { buildPixelLine } from '../buildCommands/buildPixelLine.mjs';\nimport { buildPolygon } from '../buildCommands/buildPolygon.mjs';\nimport { buildRectangle } from '../buildCommands/buildRectangle.mjs';\nimport { buildTriangle } from '../buildCommands/buildTriangle.mjs';\nimport { triangulateWithHoles } from './triangulateWithHoles.mjs';\n\n\"use strict\";\nconst shapeBuilders = {};\nextensions.handleByMap(ExtensionType.ShapeBuilder, shapeBuilders);\nextensions.add(buildRectangle, buildPolygon, buildTriangle, buildCircle, buildEllipse, buildRoundedRectangle);\nconst tempRect = new Rectangle();\nfunction buildContextBatches(context, gpuContext) {\n  const { geometryData, batches } = gpuContext;\n  batches.length = 0;\n  geometryData.indices.length = 0;\n  geometryData.vertices.length = 0;\n  geometryData.uvs.length = 0;\n  for (let i = 0; i < context.instructions.length; i++) {\n    const instruction = context.instructions[i];\n    if (instruction.action === \"texture\") {\n      addTextureToGeometryData(instruction.data, batches, geometryData);\n    } else if (instruction.action === \"fill\" || instruction.action === \"stroke\") {\n      const isStroke = instruction.action === \"stroke\";\n      const shapePath = instruction.data.path.shapePath;\n      const style = instruction.data.style;\n      const hole = instruction.data.hole;\n      if (isStroke && hole) {\n        addShapePathToGeometryData(hole.shapePath, style, null, true, batches, geometryData);\n      }\n      addShapePathToGeometryData(shapePath, style, hole, isStroke, batches, geometryData);\n    }\n  }\n}\nfunction addTextureToGeometryData(data, batches, geometryData) {\n  const { vertices, uvs, indices } = geometryData;\n  const indexOffset = indices.length;\n  const vertOffset = vertices.length / 2;\n  const points = [];\n  const build = shapeBuilders.rectangle;\n  const rect = tempRect;\n  const texture = data.image;\n  rect.x = data.dx;\n  rect.y = data.dy;\n  rect.width = data.dw;\n  rect.height = data.dh;\n  const matrix = data.transform;\n  build.build(rect, points);\n  if (matrix) {\n    transformVertices(points, matrix);\n  }\n  build.triangulate(points, vertices, 2, vertOffset, indices, indexOffset);\n  const textureUvs = texture.uvs;\n  uvs.push(\n    textureUvs.x0,\n    textureUvs.y0,\n    textureUvs.x1,\n    textureUvs.y1,\n    textureUvs.x3,\n    textureUvs.y3,\n    textureUvs.x2,\n    textureUvs.y2\n  );\n  const graphicsBatch = BigPool.get(BatchableGraphics);\n  graphicsBatch.indexOffset = indexOffset;\n  graphicsBatch.indexSize = indices.length - indexOffset;\n  graphicsBatch.attributeOffset = vertOffset;\n  graphicsBatch.attributeSize = vertices.length / 2 - vertOffset;\n  graphicsBatch.baseColor = data.style;\n  graphicsBatch.alpha = data.alpha;\n  graphicsBatch.texture = texture;\n  graphicsBatch.geometryData = geometryData;\n  batches.push(graphicsBatch);\n}\nfunction addShapePathToGeometryData(shapePath, style, hole, isStroke, batches, geometryData) {\n  const { vertices, uvs, indices } = geometryData;\n  const lastIndex = shapePath.shapePrimitives.length - 1;\n  shapePath.shapePrimitives.forEach(({ shape, transform: matrix }, i) => {\n    const indexOffset = indices.length;\n    const vertOffset = vertices.length / 2;\n    const points = [];\n    const build = shapeBuilders[shape.type];\n    let topology = \"triangle-list\";\n    build.build(shape, points);\n    if (matrix) {\n      transformVertices(points, matrix);\n    }\n    if (!isStroke) {\n      if (hole && lastIndex === i) {\n        if (lastIndex !== 0) {\n          console.warn(\"[Pixi Graphics] only the last shape have be cut out\");\n        }\n        const holeIndices = [];\n        const otherPoints = points.slice();\n        const holeArrays = getHoleArrays(hole.shapePath);\n        holeArrays.forEach((holePoints) => {\n          holeIndices.push(otherPoints.length / 2);\n          otherPoints.push(...holePoints);\n        });\n        triangulateWithHoles(otherPoints, holeIndices, vertices, 2, vertOffset, indices, indexOffset);\n      } else {\n        build.triangulate(points, vertices, 2, vertOffset, indices, indexOffset);\n      }\n    } else {\n      const close = shape.closePath ?? true;\n      const lineStyle = style;\n      if (!lineStyle.pixelLine) {\n        buildLine(points, lineStyle, false, close, vertices, indices);\n      } else {\n        buildPixelLine(points, close, vertices, indices);\n        topology = \"line-list\";\n      }\n    }\n    const uvsOffset = uvs.length / 2;\n    const texture = style.texture;\n    if (texture !== Texture.WHITE) {\n      const textureMatrix = style.matrix;\n      if (textureMatrix) {\n        if (matrix) {\n          textureMatrix.append(matrix.clone().invert());\n        }\n        buildUvs(vertices, 2, vertOffset, uvs, uvsOffset, 2, vertices.length / 2 - vertOffset, textureMatrix);\n      }\n    } else {\n      buildSimpleUvs(uvs, uvsOffset, 2, vertices.length / 2 - vertOffset);\n    }\n    const graphicsBatch = BigPool.get(BatchableGraphics);\n    graphicsBatch.indexOffset = indexOffset;\n    graphicsBatch.indexSize = indices.length - indexOffset;\n    graphicsBatch.attributeOffset = vertOffset;\n    graphicsBatch.attributeSize = vertices.length / 2 - vertOffset;\n    graphicsBatch.baseColor = style.color;\n    graphicsBatch.alpha = style.alpha;\n    graphicsBatch.texture = texture;\n    graphicsBatch.geometryData = geometryData;\n    graphicsBatch.topology = topology;\n    batches.push(graphicsBatch);\n  });\n}\nfunction getHoleArrays(shape) {\n  if (!shape)\n    return [];\n  const holePrimitives = shape.shapePrimitives;\n  const holeArrays = [];\n  for (let k = 0; k < holePrimitives.length; k++) {\n    const holePrimitive = holePrimitives[k].shape;\n    const holePoints = [];\n    const holeBuilder = shapeBuilders[holePrimitive.type];\n    holeBuilder.build(holePrimitive, holePoints);\n    holeArrays.push(holePoints);\n  }\n  return holeArrays;\n}\n\nexport { buildContextBatches, shapeBuilders };\n//# sourceMappingURL=buildContextBatches.mjs.map\n","import { ExtensionType } from '../../../extensions/Extensions.mjs';\nimport { getTextureBatchBindGroup } from '../../../rendering/batcher/gpu/getTextureBatchBindGroup.mjs';\nimport { DefaultBatcher } from '../../../rendering/batcher/shared/DefaultBatcher.mjs';\nimport { InstructionSet } from '../../../rendering/renderers/shared/instructions/InstructionSet.mjs';\nimport { deprecation, v8_3_4 } from '../../../utils/logging/deprecation.mjs';\nimport { BigPool } from '../../../utils/pool/PoolGroup.mjs';\nimport { buildContextBatches } from './utils/buildContextBatches.mjs';\n\n\"use strict\";\nclass GpuGraphicsContext {\n  constructor() {\n    this.batches = [];\n    this.geometryData = {\n      vertices: [],\n      uvs: [],\n      indices: []\n    };\n  }\n}\nclass GraphicsContextRenderData {\n  constructor() {\n    this.batcher = new DefaultBatcher();\n    this.instructions = new InstructionSet();\n  }\n  init() {\n    this.instructions.reset();\n  }\n  /**\n   * @deprecated since version 8.0.0\n   * Use `batcher.geometry` instead.\n   * @see {Batcher#geometry}\n   */\n  get geometry() {\n    deprecation(v8_3_4, \"GraphicsContextRenderData#geometry is deprecated, please use batcher.geometry instead.\");\n    return this.batcher.geometry;\n  }\n}\nconst _GraphicsContextSystem = class _GraphicsContextSystem {\n  constructor(renderer) {\n    // the root context batches, used to either make a batch or geometry\n    // all graphics use this as a base\n    this._gpuContextHash = {};\n    // used for non-batchable graphics\n    this._graphicsDataContextHash = /* @__PURE__ */ Object.create(null);\n    renderer.renderableGC.addManagedHash(this, \"_gpuContextHash\");\n    renderer.renderableGC.addManagedHash(this, \"_graphicsDataContextHash\");\n  }\n  /**\n   * Runner init called, update the default options\n   * @ignore\n   */\n  init(options) {\n    _GraphicsContextSystem.defaultOptions.bezierSmoothness = options?.bezierSmoothness ?? _GraphicsContextSystem.defaultOptions.bezierSmoothness;\n  }\n  getContextRenderData(context) {\n    return this._graphicsDataContextHash[context.uid] || this._initContextRenderData(context);\n  }\n  // Context management functions\n  updateGpuContext(context) {\n    let gpuContext = this._gpuContextHash[context.uid] || this._initContext(context);\n    if (context.dirty) {\n      if (gpuContext) {\n        this._cleanGraphicsContextData(context);\n      } else {\n        gpuContext = this._initContext(context);\n      }\n      buildContextBatches(context, gpuContext);\n      const batchMode = context.batchMode;\n      if (context.customShader || batchMode === \"no-batch\") {\n        gpuContext.isBatchable = false;\n      } else if (batchMode === \"auto\") {\n        gpuContext.isBatchable = gpuContext.geometryData.vertices.length < 400;\n      }\n      context.dirty = false;\n    }\n    return gpuContext;\n  }\n  getGpuContext(context) {\n    return this._gpuContextHash[context.uid] || this._initContext(context);\n  }\n  _initContextRenderData(context) {\n    const graphicsData = BigPool.get(GraphicsContextRenderData);\n    const { batches, geometryData } = this._gpuContextHash[context.uid];\n    const vertexSize = geometryData.vertices.length;\n    const indexSize = geometryData.indices.length;\n    for (let i = 0; i < batches.length; i++) {\n      batches[i].applyTransform = false;\n    }\n    const batcher = graphicsData.batcher;\n    batcher.ensureAttributeBuffer(vertexSize);\n    batcher.ensureIndexBuffer(indexSize);\n    batcher.begin();\n    for (let i = 0; i < batches.length; i++) {\n      const batch = batches[i];\n      batcher.add(batch);\n    }\n    batcher.finish(graphicsData.instructions);\n    const geometry = batcher.geometry;\n    geometry.indexBuffer.setDataWithSize(batcher.indexBuffer, batcher.indexSize, true);\n    geometry.buffers[0].setDataWithSize(batcher.attributeBuffer.float32View, batcher.attributeSize, true);\n    const drawBatches = batcher.batches;\n    for (let i = 0; i < drawBatches.length; i++) {\n      const batch = drawBatches[i];\n      batch.bindGroup = getTextureBatchBindGroup(batch.textures.textures, batch.textures.count);\n    }\n    this._graphicsDataContextHash[context.uid] = graphicsData;\n    return graphicsData;\n  }\n  _initContext(context) {\n    const gpuContext = new GpuGraphicsContext();\n    gpuContext.context = context;\n    this._gpuContextHash[context.uid] = gpuContext;\n    context.on(\"destroy\", this.onGraphicsContextDestroy, this);\n    return this._gpuContextHash[context.uid];\n  }\n  onGraphicsContextDestroy(context) {\n    this._cleanGraphicsContextData(context);\n    context.off(\"destroy\", this.onGraphicsContextDestroy, this);\n    this._gpuContextHash[context.uid] = null;\n  }\n  _cleanGraphicsContextData(context) {\n    const gpuContext = this._gpuContextHash[context.uid];\n    if (!gpuContext.isBatchable) {\n      if (this._graphicsDataContextHash[context.uid]) {\n        BigPool.return(this.getContextRenderData(context));\n        this._graphicsDataContextHash[context.uid] = null;\n      }\n    }\n    if (gpuContext.batches) {\n      gpuContext.batches.forEach((batch) => {\n        BigPool.return(batch);\n      });\n    }\n  }\n  destroy() {\n    for (const i in this._gpuContextHash) {\n      if (this._gpuContextHash[i]) {\n        this.onGraphicsContextDestroy(this._gpuContextHash[i].context);\n      }\n    }\n  }\n};\n/** @ignore */\n_GraphicsContextSystem.extension = {\n  type: [\n    ExtensionType.WebGLSystem,\n    ExtensionType.WebGPUSystem,\n    ExtensionType.CanvasSystem\n  ],\n  name: \"graphicsContext\"\n};\n/** The default options for the GraphicsContextSystem. */\n_GraphicsContextSystem.defaultOptions = {\n  /**\n   * A value from 0 to 1 that controls the smoothness of bezier curves (the higher the smoother)\n   * @default 0.5\n   */\n  bezierSmoothness: 0.5\n};\nlet GraphicsContextSystem = _GraphicsContextSystem;\n\nexport { GpuGraphicsContext, GraphicsContextRenderData, GraphicsContextSystem };\n//# sourceMappingURL=GraphicsContextSystem.mjs.map\n","import { GraphicsContextSystem } from '../GraphicsContextSystem.mjs';\n\n\"use strict\";\nconst RECURSION_LIMIT = 8;\nconst FLT_EPSILON = 11920929e-14;\nconst PATH_DISTANCE_EPSILON = 1;\nconst curveAngleToleranceEpsilon = 0.01;\nconst mAngleTolerance = 0;\nconst mCuspLimit = 0;\nfunction buildAdaptiveBezier(points, sX, sY, cp1x, cp1y, cp2x, cp2y, eX, eY, smoothness) {\n  const scale = 1;\n  const smoothing = Math.min(\n    0.99,\n    // a value of 1.0 actually inverts smoothing, so we cap it at 0.99\n    Math.max(0, smoothness ?? GraphicsContextSystem.defaultOptions.bezierSmoothness)\n  );\n  let distanceTolerance = (PATH_DISTANCE_EPSILON - smoothing) / scale;\n  distanceTolerance *= distanceTolerance;\n  begin(sX, sY, cp1x, cp1y, cp2x, cp2y, eX, eY, points, distanceTolerance);\n  return points;\n}\nfunction begin(sX, sY, cp1x, cp1y, cp2x, cp2y, eX, eY, points, distanceTolerance) {\n  recursive(sX, sY, cp1x, cp1y, cp2x, cp2y, eX, eY, points, distanceTolerance, 0);\n  points.push(eX, eY);\n}\nfunction recursive(x1, y1, x2, y2, x3, y3, x4, y4, points, distanceTolerance, level) {\n  if (level > RECURSION_LIMIT) {\n    return;\n  }\n  const pi = Math.PI;\n  const x12 = (x1 + x2) / 2;\n  const y12 = (y1 + y2) / 2;\n  const x23 = (x2 + x3) / 2;\n  const y23 = (y2 + y3) / 2;\n  const x34 = (x3 + x4) / 2;\n  const y34 = (y3 + y4) / 2;\n  const x123 = (x12 + x23) / 2;\n  const y123 = (y12 + y23) / 2;\n  const x234 = (x23 + x34) / 2;\n  const y234 = (y23 + y34) / 2;\n  const x1234 = (x123 + x234) / 2;\n  const y1234 = (y123 + y234) / 2;\n  if (level > 0) {\n    let dx = x4 - x1;\n    let dy = y4 - y1;\n    const d2 = Math.abs((x2 - x4) * dy - (y2 - y4) * dx);\n    const d3 = Math.abs((x3 - x4) * dy - (y3 - y4) * dx);\n    let da1;\n    let da2;\n    if (d2 > FLT_EPSILON && d3 > FLT_EPSILON) {\n      if ((d2 + d3) * (d2 + d3) <= distanceTolerance * (dx * dx + dy * dy)) {\n        if (mAngleTolerance < curveAngleToleranceEpsilon) {\n          points.push(x1234, y1234);\n          return;\n        }\n        const a23 = Math.atan2(y3 - y2, x3 - x2);\n        da1 = Math.abs(a23 - Math.atan2(y2 - y1, x2 - x1));\n        da2 = Math.abs(Math.atan2(y4 - y3, x4 - x3) - a23);\n        if (da1 >= pi)\n          da1 = 2 * pi - da1;\n        if (da2 >= pi)\n          da2 = 2 * pi - da2;\n        if (da1 + da2 < mAngleTolerance) {\n          points.push(x1234, y1234);\n          return;\n        }\n        if (mCuspLimit !== 0) {\n          if (da1 > mCuspLimit) {\n            points.push(x2, y2);\n            return;\n          }\n          if (da2 > mCuspLimit) {\n            points.push(x3, y3);\n            return;\n          }\n        }\n      }\n    } else if (d2 > FLT_EPSILON) {\n      if (d2 * d2 <= distanceTolerance * (dx * dx + dy * dy)) {\n        if (mAngleTolerance < curveAngleToleranceEpsilon) {\n          points.push(x1234, y1234);\n          return;\n        }\n        da1 = Math.abs(Math.atan2(y3 - y2, x3 - x2) - Math.atan2(y2 - y1, x2 - x1));\n        if (da1 >= pi)\n          da1 = 2 * pi - da1;\n        if (da1 < mAngleTolerance) {\n          points.push(x2, y2);\n          points.push(x3, y3);\n          return;\n        }\n        if (mCuspLimit !== 0) {\n          if (da1 > mCuspLimit) {\n            points.push(x2, y2);\n            return;\n          }\n        }\n      }\n    } else if (d3 > FLT_EPSILON) {\n      if (d3 * d3 <= distanceTolerance * (dx * dx + dy * dy)) {\n        if (mAngleTolerance < curveAngleToleranceEpsilon) {\n          points.push(x1234, y1234);\n          return;\n        }\n        da1 = Math.abs(Math.atan2(y4 - y3, x4 - x3) - Math.atan2(y3 - y2, x3 - x2));\n        if (da1 >= pi)\n          da1 = 2 * pi - da1;\n        if (da1 < mAngleTolerance) {\n          points.push(x2, y2);\n          points.push(x3, y3);\n          return;\n        }\n        if (mCuspLimit !== 0) {\n          if (da1 > mCuspLimit) {\n            points.push(x3, y3);\n            return;\n          }\n        }\n      }\n    } else {\n      dx = x1234 - (x1 + x4) / 2;\n      dy = y1234 - (y1 + y4) / 2;\n      if (dx * dx + dy * dy <= distanceTolerance) {\n        points.push(x1234, y1234);\n        return;\n      }\n    }\n  }\n  recursive(x1, y1, x12, y12, x123, y123, x1234, y1234, points, distanceTolerance, level + 1);\n  recursive(x1234, y1234, x234, y234, x34, y34, x4, y4, points, distanceTolerance, level + 1);\n}\n\nexport { buildAdaptiveBezier };\n//# sourceMappingURL=buildAdaptiveBezier.mjs.map\n","import { GraphicsContextSystem } from '../GraphicsContextSystem.mjs';\n\n\"use strict\";\nconst RECURSION_LIMIT = 8;\nconst FLT_EPSILON = 11920929e-14;\nconst PATH_DISTANCE_EPSILON = 1;\nconst curveAngleToleranceEpsilon = 0.01;\nconst mAngleTolerance = 0;\nfunction buildAdaptiveQuadratic(points, sX, sY, cp1x, cp1y, eX, eY, smoothness) {\n  const scale = 1;\n  const smoothing = Math.min(\n    0.99,\n    // a value of 1.0 actually inverts smoothing, so we cap it at 0.99\n    Math.max(0, smoothness ?? GraphicsContextSystem.defaultOptions.bezierSmoothness)\n  );\n  let distanceTolerance = (PATH_DISTANCE_EPSILON - smoothing) / scale;\n  distanceTolerance *= distanceTolerance;\n  begin(sX, sY, cp1x, cp1y, eX, eY, points, distanceTolerance);\n  return points;\n}\nfunction begin(sX, sY, cp1x, cp1y, eX, eY, points, distanceTolerance) {\n  recursive(points, sX, sY, cp1x, cp1y, eX, eY, distanceTolerance, 0);\n  points.push(eX, eY);\n}\nfunction recursive(points, x1, y1, x2, y2, x3, y3, distanceTolerance, level) {\n  if (level > RECURSION_LIMIT) {\n    return;\n  }\n  const pi = Math.PI;\n  const x12 = (x1 + x2) / 2;\n  const y12 = (y1 + y2) / 2;\n  const x23 = (x2 + x3) / 2;\n  const y23 = (y2 + y3) / 2;\n  const x123 = (x12 + x23) / 2;\n  const y123 = (y12 + y23) / 2;\n  let dx = x3 - x1;\n  let dy = y3 - y1;\n  const d = Math.abs((x2 - x3) * dy - (y2 - y3) * dx);\n  if (d > FLT_EPSILON) {\n    if (d * d <= distanceTolerance * (dx * dx + dy * dy)) {\n      if (mAngleTolerance < curveAngleToleranceEpsilon) {\n        points.push(x123, y123);\n        return;\n      }\n      let da = Math.abs(Math.atan2(y3 - y2, x3 - x2) - Math.atan2(y2 - y1, x2 - x1));\n      if (da >= pi)\n        da = 2 * pi - da;\n      if (da < mAngleTolerance) {\n        points.push(x123, y123);\n        return;\n      }\n    }\n  } else {\n    dx = x123 - (x1 + x3) / 2;\n    dy = y123 - (y1 + y3) / 2;\n    if (dx * dx + dy * dy <= distanceTolerance) {\n      points.push(x123, y123);\n      return;\n    }\n  }\n  recursive(points, x1, y1, x12, y12, x123, y123, distanceTolerance, level + 1);\n  recursive(points, x123, y123, x23, y23, x3, y3, distanceTolerance, level + 1);\n}\n\nexport { buildAdaptiveQuadratic };\n//# sourceMappingURL=buildAdaptiveQuadratic.mjs.map\n","\"use strict\";\nfunction buildArc(points, x, y, radius, start, end, clockwise, steps) {\n  let dist = Math.abs(start - end);\n  if (!clockwise && start > end) {\n    dist = 2 * Math.PI - dist;\n  } else if (clockwise && end > start) {\n    dist = 2 * Math.PI - dist;\n  }\n  steps || (steps = Math.max(6, Math.floor(6 * Math.pow(radius, 1 / 3) * (dist / Math.PI))));\n  steps = Math.max(steps, 3);\n  let f = dist / steps;\n  let t = start;\n  f *= clockwise ? -1 : 1;\n  for (let i = 0; i < steps + 1; i++) {\n    const cs = Math.cos(t);\n    const sn = Math.sin(t);\n    const nx = x + cs * radius;\n    const ny = y + sn * radius;\n    points.push(nx, ny);\n    t += f;\n  }\n}\n\nexport { buildArc };\n//# sourceMappingURL=buildArc.mjs.map\n","import { buildArc } from './buildArc.mjs';\n\n\"use strict\";\nfunction buildArcTo(points, x1, y1, x2, y2, radius) {\n  const fromX = points[points.length - 2];\n  const fromY = points[points.length - 1];\n  const a1 = fromY - y1;\n  const b1 = fromX - x1;\n  const a2 = y2 - y1;\n  const b2 = x2 - x1;\n  const mm = Math.abs(a1 * b2 - b1 * a2);\n  if (mm < 1e-8 || radius === 0) {\n    if (points[points.length - 2] !== x1 || points[points.length - 1] !== y1) {\n      points.push(x1, y1);\n    }\n    return;\n  }\n  const dd = a1 * a1 + b1 * b1;\n  const cc = a2 * a2 + b2 * b2;\n  const tt = a1 * a2 + b1 * b2;\n  const k1 = radius * Math.sqrt(dd) / mm;\n  const k2 = radius * Math.sqrt(cc) / mm;\n  const j1 = k1 * tt / dd;\n  const j2 = k2 * tt / cc;\n  const cx = k1 * b2 + k2 * b1;\n  const cy = k1 * a2 + k2 * a1;\n  const px = b1 * (k2 + j1);\n  const py = a1 * (k2 + j1);\n  const qx = b2 * (k1 + j2);\n  const qy = a2 * (k1 + j2);\n  const startAngle = Math.atan2(py - cy, px - cx);\n  const endAngle = Math.atan2(qy - cy, qx - cx);\n  buildArc(\n    points,\n    cx + x1,\n    cy + y1,\n    radius,\n    startAngle,\n    endAngle,\n    b1 * a2 > b2 * a1\n  );\n}\n\nexport { buildArcTo };\n//# sourceMappingURL=buildArcTo.mjs.map\n","import { buildAdaptiveBezier } from './buildAdaptiveBezier.mjs';\n\n\"use strict\";\nconst TAU = Math.PI * 2;\nconst out = {\n  centerX: 0,\n  centerY: 0,\n  ang1: 0,\n  ang2: 0\n};\nconst mapToEllipse = ({ x, y }, rx, ry, cosPhi, sinPhi, centerX, centerY, out2) => {\n  x *= rx;\n  y *= ry;\n  const xp = cosPhi * x - sinPhi * y;\n  const yp = sinPhi * x + cosPhi * y;\n  out2.x = xp + centerX;\n  out2.y = yp + centerY;\n  return out2;\n};\nfunction approxUnitArc(ang1, ang2) {\n  const a1 = ang2 === -1.5707963267948966 ? -0.551915024494 : 4 / 3 * Math.tan(ang2 / 4);\n  const a = ang2 === 1.5707963267948966 ? 0.551915024494 : a1;\n  const x1 = Math.cos(ang1);\n  const y1 = Math.sin(ang1);\n  const x2 = Math.cos(ang1 + ang2);\n  const y2 = Math.sin(ang1 + ang2);\n  return [\n    {\n      x: x1 - y1 * a,\n      y: y1 + x1 * a\n    },\n    {\n      x: x2 + y2 * a,\n      y: y2 - x2 * a\n    },\n    {\n      x: x2,\n      y: y2\n    }\n  ];\n}\nconst vectorAngle = (ux, uy, vx, vy) => {\n  const sign = ux * vy - uy * vx < 0 ? -1 : 1;\n  let dot = ux * vx + uy * vy;\n  if (dot > 1) {\n    dot = 1;\n  }\n  if (dot < -1) {\n    dot = -1;\n  }\n  return sign * Math.acos(dot);\n};\nconst getArcCenter = (px, py, cx, cy, rx, ry, largeArcFlag, sweepFlag, sinPhi, cosPhi, pxp, pyp, out2) => {\n  const rxSq = Math.pow(rx, 2);\n  const rySq = Math.pow(ry, 2);\n  const pxpSq = Math.pow(pxp, 2);\n  const pypSq = Math.pow(pyp, 2);\n  let radicant = rxSq * rySq - rxSq * pypSq - rySq * pxpSq;\n  if (radicant < 0) {\n    radicant = 0;\n  }\n  radicant /= rxSq * pypSq + rySq * pxpSq;\n  radicant = Math.sqrt(radicant) * (largeArcFlag === sweepFlag ? -1 : 1);\n  const centerXp = radicant * rx / ry * pyp;\n  const centerYp = radicant * -ry / rx * pxp;\n  const centerX = cosPhi * centerXp - sinPhi * centerYp + (px + cx) / 2;\n  const centerY = sinPhi * centerXp + cosPhi * centerYp + (py + cy) / 2;\n  const vx1 = (pxp - centerXp) / rx;\n  const vy1 = (pyp - centerYp) / ry;\n  const vx2 = (-pxp - centerXp) / rx;\n  const vy2 = (-pyp - centerYp) / ry;\n  const ang1 = vectorAngle(1, 0, vx1, vy1);\n  let ang2 = vectorAngle(vx1, vy1, vx2, vy2);\n  if (sweepFlag === 0 && ang2 > 0) {\n    ang2 -= TAU;\n  }\n  if (sweepFlag === 1 && ang2 < 0) {\n    ang2 += TAU;\n  }\n  out2.centerX = centerX;\n  out2.centerY = centerY;\n  out2.ang1 = ang1;\n  out2.ang2 = ang2;\n};\nfunction buildArcToSvg(points, px, py, cx, cy, rx, ry, xAxisRotation = 0, largeArcFlag = 0, sweepFlag = 0) {\n  if (rx === 0 || ry === 0) {\n    return;\n  }\n  const sinPhi = Math.sin(xAxisRotation * TAU / 360);\n  const cosPhi = Math.cos(xAxisRotation * TAU / 360);\n  const pxp = cosPhi * (px - cx) / 2 + sinPhi * (py - cy) / 2;\n  const pyp = -sinPhi * (px - cx) / 2 + cosPhi * (py - cy) / 2;\n  if (pxp === 0 && pyp === 0) {\n    return;\n  }\n  rx = Math.abs(rx);\n  ry = Math.abs(ry);\n  const lambda = Math.pow(pxp, 2) / Math.pow(rx, 2) + Math.pow(pyp, 2) / Math.pow(ry, 2);\n  if (lambda > 1) {\n    rx *= Math.sqrt(lambda);\n    ry *= Math.sqrt(lambda);\n  }\n  getArcCenter(\n    px,\n    py,\n    cx,\n    cy,\n    rx,\n    ry,\n    largeArcFlag,\n    sweepFlag,\n    sinPhi,\n    cosPhi,\n    pxp,\n    pyp,\n    out\n  );\n  let { ang1, ang2 } = out;\n  const { centerX, centerY } = out;\n  let ratio = Math.abs(ang2) / (TAU / 4);\n  if (Math.abs(1 - ratio) < 1e-7) {\n    ratio = 1;\n  }\n  const segments = Math.max(Math.ceil(ratio), 1);\n  ang2 /= segments;\n  let lastX = points[points.length - 2];\n  let lastY = points[points.length - 1];\n  const outCurvePoint = { x: 0, y: 0 };\n  for (let i = 0; i < segments; i++) {\n    const curve = approxUnitArc(ang1, ang2);\n    const { x: x1, y: y1 } = mapToEllipse(curve[0], rx, ry, cosPhi, sinPhi, centerX, centerY, outCurvePoint);\n    const { x: x2, y: y2 } = mapToEllipse(curve[1], rx, ry, cosPhi, sinPhi, centerX, centerY, outCurvePoint);\n    const { x, y } = mapToEllipse(curve[2], rx, ry, cosPhi, sinPhi, centerX, centerY, outCurvePoint);\n    buildAdaptiveBezier(\n      points,\n      lastX,\n      lastY,\n      x1,\n      y1,\n      x2,\n      y2,\n      x,\n      y\n    );\n    lastX = x;\n    lastY = y;\n    ang1 += ang2;\n  }\n}\n\nexport { buildArcToSvg };\n//# sourceMappingURL=buildArcToSvg.mjs.map\n","\"use strict\";\nfunction roundedShapeArc(g, points, radius) {\n  const vecFrom = (p, pp) => {\n    const x = pp.x - p.x;\n    const y = pp.y - p.y;\n    const len = Math.sqrt(x * x + y * y);\n    const nx = x / len;\n    const ny = y / len;\n    return { len, nx, ny };\n  };\n  const sharpCorner = (i, p) => {\n    if (i === 0) {\n      g.moveTo(p.x, p.y);\n    } else {\n      g.lineTo(p.x, p.y);\n    }\n  };\n  let p1 = points[points.length - 1];\n  for (let i = 0; i < points.length; i++) {\n    const p2 = points[i % points.length];\n    const pRadius = p2.radius ?? radius;\n    if (pRadius <= 0) {\n      sharpCorner(i, p2);\n      p1 = p2;\n      continue;\n    }\n    const p3 = points[(i + 1) % points.length];\n    const v1 = vecFrom(p2, p1);\n    const v2 = vecFrom(p2, p3);\n    if (v1.len < 1e-4 || v2.len < 1e-4) {\n      sharpCorner(i, p2);\n      p1 = p2;\n      continue;\n    }\n    let angle = Math.asin(v1.nx * v2.ny - v1.ny * v2.nx);\n    let radDirection = 1;\n    let drawDirection = false;\n    if (v1.nx * v2.nx - v1.ny * -v2.ny < 0) {\n      if (angle < 0) {\n        angle = Math.PI + angle;\n      } else {\n        angle = Math.PI - angle;\n        radDirection = -1;\n        drawDirection = true;\n      }\n    } else if (angle > 0) {\n      radDirection = -1;\n      drawDirection = true;\n    }\n    const halfAngle = angle / 2;\n    let cRadius;\n    let lenOut = Math.abs(\n      Math.cos(halfAngle) * pRadius / Math.sin(halfAngle)\n    );\n    if (lenOut > Math.min(v1.len / 2, v2.len / 2)) {\n      lenOut = Math.min(v1.len / 2, v2.len / 2);\n      cRadius = Math.abs(lenOut * Math.sin(halfAngle) / Math.cos(halfAngle));\n    } else {\n      cRadius = pRadius;\n    }\n    const cX = p2.x + v2.nx * lenOut + -v2.ny * cRadius * radDirection;\n    const cY = p2.y + v2.ny * lenOut + v2.nx * cRadius * radDirection;\n    const startAngle = Math.atan2(v1.ny, v1.nx) + Math.PI / 2 * radDirection;\n    const endAngle = Math.atan2(v2.ny, v2.nx) - Math.PI / 2 * radDirection;\n    if (i === 0) {\n      g.moveTo(\n        cX + Math.cos(startAngle) * cRadius,\n        cY + Math.sin(startAngle) * cRadius\n      );\n    }\n    g.arc(cX, cY, cRadius, startAngle, endAngle, drawDirection);\n    p1 = p2;\n  }\n}\nfunction roundedShapeQuadraticCurve(g, points, radius, smoothness) {\n  const distance = (p1, p2) => Math.sqrt((p1.x - p2.x) ** 2 + (p1.y - p2.y) ** 2);\n  const pointLerp = (p1, p2, t) => ({\n    x: p1.x + (p2.x - p1.x) * t,\n    y: p1.y + (p2.y - p1.y) * t\n  });\n  const numPoints = points.length;\n  for (let i = 0; i < numPoints; i++) {\n    const thisPoint = points[(i + 1) % numPoints];\n    const pRadius = thisPoint.radius ?? radius;\n    if (pRadius <= 0) {\n      if (i === 0) {\n        g.moveTo(thisPoint.x, thisPoint.y);\n      } else {\n        g.lineTo(thisPoint.x, thisPoint.y);\n      }\n      continue;\n    }\n    const lastPoint = points[i];\n    const nextPoint = points[(i + 2) % numPoints];\n    const lastEdgeLength = distance(lastPoint, thisPoint);\n    let start;\n    if (lastEdgeLength < 1e-4) {\n      start = thisPoint;\n    } else {\n      const lastOffsetDistance = Math.min(lastEdgeLength / 2, pRadius);\n      start = pointLerp(\n        thisPoint,\n        lastPoint,\n        lastOffsetDistance / lastEdgeLength\n      );\n    }\n    const nextEdgeLength = distance(nextPoint, thisPoint);\n    let end;\n    if (nextEdgeLength < 1e-4) {\n      end = thisPoint;\n    } else {\n      const nextOffsetDistance = Math.min(nextEdgeLength / 2, pRadius);\n      end = pointLerp(\n        thisPoint,\n        nextPoint,\n        nextOffsetDistance / nextEdgeLength\n      );\n    }\n    if (i === 0) {\n      g.moveTo(start.x, start.y);\n    } else {\n      g.lineTo(start.x, start.y);\n    }\n    g.quadraticCurveTo(thisPoint.x, thisPoint.y, end.x, end.y, smoothness);\n  }\n}\n\nexport { roundedShapeArc, roundedShapeQuadraticCurve };\n//# sourceMappingURL=roundShape.mjs.map\n","import { Circle } from '../../../../maths/shapes/Circle.mjs';\nimport { Ellipse } from '../../../../maths/shapes/Ellipse.mjs';\nimport { Polygon } from '../../../../maths/shapes/Polygon.mjs';\nimport { Rectangle } from '../../../../maths/shapes/Rectangle.mjs';\nimport { RoundedRectangle } from '../../../../maths/shapes/RoundedRectangle.mjs';\nimport { Bounds } from '../../../container/bounds/Bounds.mjs';\nimport { buildAdaptiveBezier } from '../buildCommands/buildAdaptiveBezier.mjs';\nimport { buildAdaptiveQuadratic } from '../buildCommands/buildAdaptiveQuadratic.mjs';\nimport { buildArc } from '../buildCommands/buildArc.mjs';\nimport { buildArcTo } from '../buildCommands/buildArcTo.mjs';\nimport { buildArcToSvg } from '../buildCommands/buildArcToSvg.mjs';\nimport { roundedShapeQuadraticCurve, roundedShapeArc } from './roundShape.mjs';\n\n\"use strict\";\nconst tempRectangle = new Rectangle();\nclass ShapePath {\n  constructor(graphicsPath2D) {\n    /** The list of shape primitives that make up the path. */\n    this.shapePrimitives = [];\n    this._currentPoly = null;\n    this._bounds = new Bounds();\n    this._graphicsPath2D = graphicsPath2D;\n  }\n  /**\n   * Sets the starting point for a new sub-path. Any subsequent drawing commands are considered part of this path.\n   * @param x - The x-coordinate for the starting point.\n   * @param y - The y-coordinate for the starting point.\n   * @returns The instance of the current object for chaining.\n   */\n  moveTo(x, y) {\n    this.startPoly(x, y);\n    return this;\n  }\n  /**\n   * Connects the current point to a new point with a straight line. This method updates the current path.\n   * @param x - The x-coordinate of the new point to connect to.\n   * @param y - The y-coordinate of the new point to connect to.\n   * @returns The instance of the current object for chaining.\n   */\n  lineTo(x, y) {\n    this._ensurePoly();\n    const points = this._currentPoly.points;\n    const fromX = points[points.length - 2];\n    const fromY = points[points.length - 1];\n    if (fromX !== x || fromY !== y) {\n      points.push(x, y);\n    }\n    return this;\n  }\n  /**\n   * Adds an arc to the path. The arc is centered at (x, y)\n   *  position with radius `radius` starting at `startAngle` and ending at `endAngle`.\n   * @param x - The x-coordinate of the arc's center.\n   * @param y - The y-coordinate of the arc's center.\n   * @param radius - The radius of the arc.\n   * @param startAngle - The starting angle of the arc, in radians.\n   * @param endAngle - The ending angle of the arc, in radians.\n   * @param counterclockwise - Specifies whether the arc should be drawn in the anticlockwise direction. False by default.\n   * @returns The instance of the current object for chaining.\n   */\n  arc(x, y, radius, startAngle, endAngle, counterclockwise) {\n    this._ensurePoly(false);\n    const points = this._currentPoly.points;\n    buildArc(points, x, y, radius, startAngle, endAngle, counterclockwise);\n    return this;\n  }\n  /**\n   * Adds an arc to the path with the arc tangent to the line joining two specified points.\n   * The arc radius is specified by `radius`.\n   * @param x1 - The x-coordinate of the first point.\n   * @param y1 - The y-coordinate of the first point.\n   * @param x2 - The x-coordinate of the second point.\n   * @param y2 - The y-coordinate of the second point.\n   * @param radius - The radius of the arc.\n   * @returns The instance of the current object for chaining.\n   */\n  arcTo(x1, y1, x2, y2, radius) {\n    this._ensurePoly();\n    const points = this._currentPoly.points;\n    buildArcTo(points, x1, y1, x2, y2, radius);\n    return this;\n  }\n  /**\n   * Adds an SVG-style arc to the path, allowing for elliptical arcs based on the SVG spec.\n   * @param rx - The x-radius of the ellipse.\n   * @param ry - The y-radius of the ellipse.\n   * @param xAxisRotation - The rotation of the ellipse's x-axis relative\n   * to the x-axis of the coordinate system, in degrees.\n   * @param largeArcFlag - Determines if the arc should be greater than or less than 180 degrees.\n   * @param sweepFlag - Determines if the arc should be swept in a positive angle direction.\n   * @param x - The x-coordinate of the arc's end point.\n   * @param y - The y-coordinate of the arc's end point.\n   * @returns The instance of the current object for chaining.\n   */\n  arcToSvg(rx, ry, xAxisRotation, largeArcFlag, sweepFlag, x, y) {\n    const points = this._currentPoly.points;\n    buildArcToSvg(\n      points,\n      this._currentPoly.lastX,\n      this._currentPoly.lastY,\n      x,\n      y,\n      rx,\n      ry,\n      xAxisRotation,\n      largeArcFlag,\n      sweepFlag\n    );\n    return this;\n  }\n  /**\n   * Adds a cubic Bezier curve to the path.\n   * It requires three points: the first two are control points and the third one is the end point.\n   * The starting point is the last point in the current path.\n   * @param cp1x - The x-coordinate of the first control point.\n   * @param cp1y - The y-coordinate of the first control point.\n   * @param cp2x - The x-coordinate of the second control point.\n   * @param cp2y - The y-coordinate of the second control point.\n   * @param x - The x-coordinate of the end point.\n   * @param y - The y-coordinate of the end point.\n   * @param smoothness - Optional parameter to adjust the smoothness of the curve.\n   * @returns The instance of the current object for chaining.\n   */\n  bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y, smoothness) {\n    this._ensurePoly();\n    const currentPoly = this._currentPoly;\n    buildAdaptiveBezier(\n      this._currentPoly.points,\n      currentPoly.lastX,\n      currentPoly.lastY,\n      cp1x,\n      cp1y,\n      cp2x,\n      cp2y,\n      x,\n      y,\n      smoothness\n    );\n    return this;\n  }\n  /**\n   * Adds a quadratic curve to the path. It requires two points: the control point and the end point.\n   * The starting point is the last point in the current path.\n   * @param cp1x - The x-coordinate of the control point.\n   * @param cp1y - The y-coordinate of the control point.\n   * @param x - The x-coordinate of the end point.\n   * @param y - The y-coordinate of the end point.\n   * @param smoothing - Optional parameter to adjust the smoothness of the curve.\n   * @returns The instance of the current object for chaining.\n   */\n  quadraticCurveTo(cp1x, cp1y, x, y, smoothing) {\n    this._ensurePoly();\n    const currentPoly = this._currentPoly;\n    buildAdaptiveQuadratic(\n      this._currentPoly.points,\n      currentPoly.lastX,\n      currentPoly.lastY,\n      cp1x,\n      cp1y,\n      x,\n      y,\n      smoothing\n    );\n    return this;\n  }\n  /**\n   * Closes the current path by drawing a straight line back to the start.\n   * If the shape is already closed or there are no points in the path, this method does nothing.\n   * @returns The instance of the current object for chaining.\n   */\n  closePath() {\n    this.endPoly(true);\n    return this;\n  }\n  /**\n   * Adds another path to the current path. This method allows for the combination of multiple paths into one.\n   * @param path - The `GraphicsPath` object representing the path to add.\n   * @param transform - An optional `Matrix` object to apply a transformation to the path before adding it.\n   * @returns The instance of the current object for chaining.\n   */\n  addPath(path, transform) {\n    this.endPoly();\n    if (transform && !transform.isIdentity()) {\n      path = path.clone(true);\n      path.transform(transform);\n    }\n    for (let i = 0; i < path.instructions.length; i++) {\n      const instruction = path.instructions[i];\n      this[instruction.action](...instruction.data);\n    }\n    return this;\n  }\n  /**\n   * Finalizes the drawing of the current path. Optionally, it can close the path.\n   * @param closePath - A boolean indicating whether to close the path after finishing. False by default.\n   */\n  finish(closePath = false) {\n    this.endPoly(closePath);\n  }\n  /**\n   * Draws a rectangle shape. This method adds a new rectangle path to the current drawing.\n   * @param x - The x-coordinate of the top-left corner of the rectangle.\n   * @param y - The y-coordinate of the top-left corner of the rectangle.\n   * @param w - The width of the rectangle.\n   * @param h - The height of the rectangle.\n   * @param transform - An optional `Matrix` object to apply a transformation to the rectangle.\n   * @returns The instance of the current object for chaining.\n   */\n  rect(x, y, w, h, transform) {\n    this.drawShape(new Rectangle(x, y, w, h), transform);\n    return this;\n  }\n  /**\n   * Draws a circle shape. This method adds a new circle path to the current drawing.\n   * @param x - The x-coordinate of the center of the circle.\n   * @param y - The y-coordinate of the center of the circle.\n   * @param radius - The radius of the circle.\n   * @param transform - An optional `Matrix` object to apply a transformation to the circle.\n   * @returns The instance of the current object for chaining.\n   */\n  circle(x, y, radius, transform) {\n    this.drawShape(new Circle(x, y, radius), transform);\n    return this;\n  }\n  /**\n   * Draws a polygon shape. This method allows for the creation of complex polygons by specifying a sequence of points.\n   * @param points - An array of numbers, or or an array of PointData objects eg [{x,y}, {x,y}, {x,y}]\n   * representing the x and y coordinates of the polygon's vertices, in sequence.\n   * @param close - A boolean indicating whether to close the polygon path. True by default.\n   * @param transform - An optional `Matrix` object to apply a transformation to the polygon.\n   * @returns The instance of the current object for chaining.\n   */\n  poly(points, close, transform) {\n    const polygon = new Polygon(points);\n    polygon.closePath = close;\n    this.drawShape(polygon, transform);\n    return this;\n  }\n  /**\n   * Draws a regular polygon with a specified number of sides. All sides and angles are equal.\n   * @param x - The x-coordinate of the center of the polygon.\n   * @param y - The y-coordinate of the center of the polygon.\n   * @param radius - The radius of the circumscribed circle of the polygon.\n   * @param sides - The number of sides of the polygon. Must be 3 or more.\n   * @param rotation - The rotation angle of the polygon, in radians. Zero by default.\n   * @param transform - An optional `Matrix` object to apply a transformation to the polygon.\n   * @returns The instance of the current object for chaining.\n   */\n  regularPoly(x, y, radius, sides, rotation = 0, transform) {\n    sides = Math.max(sides | 0, 3);\n    const startAngle = -1 * Math.PI / 2 + rotation;\n    const delta = Math.PI * 2 / sides;\n    const polygon = [];\n    for (let i = 0; i < sides; i++) {\n      const angle = startAngle - i * delta;\n      polygon.push(\n        x + radius * Math.cos(angle),\n        y + radius * Math.sin(angle)\n      );\n    }\n    this.poly(polygon, true, transform);\n    return this;\n  }\n  /**\n   * Draws a polygon with rounded corners.\n   * Similar to `regularPoly` but with the ability to round the corners of the polygon.\n   * @param x - The x-coordinate of the center of the polygon.\n   * @param y - The y-coordinate of the center of the polygon.\n   * @param radius - The radius of the circumscribed circle of the polygon.\n   * @param sides - The number of sides of the polygon. Must be 3 or more.\n   * @param corner - The radius of the rounding of the corners.\n   * @param rotation - The rotation angle of the polygon, in radians. Zero by default.\n   * @param smoothness - Optional parameter to adjust the smoothness of the rounding.\n   * @returns The instance of the current object for chaining.\n   */\n  roundPoly(x, y, radius, sides, corner, rotation = 0, smoothness) {\n    sides = Math.max(sides | 0, 3);\n    if (corner <= 0) {\n      return this.regularPoly(x, y, radius, sides, rotation);\n    }\n    const sideLength = radius * Math.sin(Math.PI / sides) - 1e-3;\n    corner = Math.min(corner, sideLength);\n    const startAngle = -1 * Math.PI / 2 + rotation;\n    const delta = Math.PI * 2 / sides;\n    const internalAngle = (sides - 2) * Math.PI / sides / 2;\n    for (let i = 0; i < sides; i++) {\n      const angle = i * delta + startAngle;\n      const x0 = x + radius * Math.cos(angle);\n      const y0 = y + radius * Math.sin(angle);\n      const a1 = angle + Math.PI + internalAngle;\n      const a2 = angle - Math.PI - internalAngle;\n      const x1 = x0 + corner * Math.cos(a1);\n      const y1 = y0 + corner * Math.sin(a1);\n      const x3 = x0 + corner * Math.cos(a2);\n      const y3 = y0 + corner * Math.sin(a2);\n      if (i === 0) {\n        this.moveTo(x1, y1);\n      } else {\n        this.lineTo(x1, y1);\n      }\n      this.quadraticCurveTo(x0, y0, x3, y3, smoothness);\n    }\n    return this.closePath();\n  }\n  /**\n   * Draws a shape with rounded corners. This function supports custom radius for each corner of the shape.\n   * Optionally, corners can be rounded using a quadratic curve instead of an arc, providing a different aesthetic.\n   * @param points - An array of `RoundedPoint` representing the corners of the shape to draw.\n   * A minimum of 3 points is required.\n   * @param radius - The default radius for the corners.\n   * This radius is applied to all corners unless overridden in `points`.\n   * @param useQuadratic - If set to true, rounded corners are drawn using a quadraticCurve\n   *  method instead of an arc method. Defaults to false.\n   * @param smoothness - Specifies the smoothness of the curve when `useQuadratic` is true.\n   * Higher values make the curve smoother.\n   * @returns The instance of the current object for chaining.\n   */\n  roundShape(points, radius, useQuadratic = false, smoothness) {\n    if (points.length < 3) {\n      return this;\n    }\n    if (useQuadratic) {\n      roundedShapeQuadraticCurve(this, points, radius, smoothness);\n    } else {\n      roundedShapeArc(this, points, radius);\n    }\n    return this.closePath();\n  }\n  /**\n   * Draw Rectangle with fillet corners. This is much like rounded rectangle\n   * however it support negative numbers as well for the corner radius.\n   * @param x - Upper left corner of rect\n   * @param y - Upper right corner of rect\n   * @param width - Width of rect\n   * @param height - Height of rect\n   * @param fillet - accept negative or positive values\n   */\n  filletRect(x, y, width, height, fillet) {\n    if (fillet === 0) {\n      return this.rect(x, y, width, height);\n    }\n    const maxFillet = Math.min(width, height) / 2;\n    const inset = Math.min(maxFillet, Math.max(-maxFillet, fillet));\n    const right = x + width;\n    const bottom = y + height;\n    const dir = inset < 0 ? -inset : 0;\n    const size = Math.abs(inset);\n    return this.moveTo(x, y + size).arcTo(x + dir, y + dir, x + size, y, size).lineTo(right - size, y).arcTo(right - dir, y + dir, right, y + size, size).lineTo(right, bottom - size).arcTo(right - dir, bottom - dir, x + width - size, bottom, size).lineTo(x + size, bottom).arcTo(x + dir, bottom - dir, x, bottom - size, size).closePath();\n  }\n  /**\n   * Draw Rectangle with chamfer corners. These are angled corners.\n   * @param x - Upper left corner of rect\n   * @param y - Upper right corner of rect\n   * @param width - Width of rect\n   * @param height - Height of rect\n   * @param chamfer - non-zero real number, size of corner cutout\n   * @param transform\n   */\n  chamferRect(x, y, width, height, chamfer, transform) {\n    if (chamfer <= 0) {\n      return this.rect(x, y, width, height);\n    }\n    const inset = Math.min(chamfer, Math.min(width, height) / 2);\n    const right = x + width;\n    const bottom = y + height;\n    const points = [\n      x + inset,\n      y,\n      right - inset,\n      y,\n      right,\n      y + inset,\n      right,\n      bottom - inset,\n      right - inset,\n      bottom,\n      x + inset,\n      bottom,\n      x,\n      bottom - inset,\n      x,\n      y + inset\n    ];\n    for (let i = points.length - 1; i >= 2; i -= 2) {\n      if (points[i] === points[i - 2] && points[i - 1] === points[i - 3]) {\n        points.splice(i - 1, 2);\n      }\n    }\n    return this.poly(points, true, transform);\n  }\n  /**\n   * Draws an ellipse at the specified location and with the given x and y radii.\n   * An optional transformation can be applied, allowing for rotation, scaling, and translation.\n   * @param x - The x-coordinate of the center of the ellipse.\n   * @param y - The y-coordinate of the center of the ellipse.\n   * @param radiusX - The horizontal radius of the ellipse.\n   * @param radiusY - The vertical radius of the ellipse.\n   * @param transform - An optional `Matrix` object to apply a transformation to the ellipse. This can include rotations.\n   * @returns The instance of the current object for chaining.\n   */\n  ellipse(x, y, radiusX, radiusY, transform) {\n    this.drawShape(new Ellipse(x, y, radiusX, radiusY), transform);\n    return this;\n  }\n  /**\n   * Draws a rectangle with rounded corners.\n   * The corner radius can be specified to determine how rounded the corners should be.\n   * An optional transformation can be applied, which allows for rotation, scaling, and translation of the rectangle.\n   * @param x - The x-coordinate of the top-left corner of the rectangle.\n   * @param y - The y-coordinate of the top-left corner of the rectangle.\n   * @param w - The width of the rectangle.\n   * @param h - The height of the rectangle.\n   * @param radius - The radius of the rectangle's corners. If not specified, corners will be sharp.\n   * @param transform - An optional `Matrix` object to apply a transformation to the rectangle.\n   * @returns The instance of the current object for chaining.\n   */\n  roundRect(x, y, w, h, radius, transform) {\n    this.drawShape(new RoundedRectangle(x, y, w, h, radius), transform);\n    return this;\n  }\n  /**\n   * Draws a given shape on the canvas.\n   * This is a generic method that can draw any type of shape specified by the `ShapePrimitive` parameter.\n   * An optional transformation matrix can be applied to the shape, allowing for complex transformations.\n   * @param shape - The shape to draw, defined as a `ShapePrimitive` object.\n   * @param matrix - An optional `Matrix` for transforming the shape. This can include rotations,\n   * scaling, and translations.\n   * @returns The instance of the current object for chaining.\n   */\n  drawShape(shape, matrix) {\n    this.endPoly();\n    this.shapePrimitives.push({ shape, transform: matrix });\n    return this;\n  }\n  /**\n   * Starts a new polygon path from the specified starting point.\n   * This method initializes a new polygon or ends the current one if it exists.\n   * @param x - The x-coordinate of the starting point of the new polygon.\n   * @param y - The y-coordinate of the starting point of the new polygon.\n   * @returns The instance of the current object for chaining.\n   */\n  startPoly(x, y) {\n    let currentPoly = this._currentPoly;\n    if (currentPoly) {\n      this.endPoly();\n    }\n    currentPoly = new Polygon();\n    currentPoly.points.push(x, y);\n    this._currentPoly = currentPoly;\n    return this;\n  }\n  /**\n   * Ends the current polygon path. If `closePath` is set to true,\n   * the path is closed by connecting the last point to the first one.\n   * This method finalizes the current polygon and prepares it for drawing or adding to the shape primitives.\n   * @param closePath - A boolean indicating whether to close the polygon by connecting the last point\n   *  back to the starting point. False by default.\n   * @returns The instance of the current object for chaining.\n   */\n  endPoly(closePath = false) {\n    const shape = this._currentPoly;\n    if (shape && shape.points.length > 2) {\n      shape.closePath = closePath;\n      this.shapePrimitives.push({ shape });\n    }\n    this._currentPoly = null;\n    return this;\n  }\n  _ensurePoly(start = true) {\n    if (this._currentPoly)\n      return;\n    this._currentPoly = new Polygon();\n    if (start) {\n      const lastShape = this.shapePrimitives[this.shapePrimitives.length - 1];\n      if (lastShape) {\n        let lx = lastShape.shape.x;\n        let ly = lastShape.shape.y;\n        if (lastShape.transform && !lastShape.transform.isIdentity()) {\n          const t = lastShape.transform;\n          const tempX = lx;\n          lx = t.a * lx + t.c * ly + t.tx;\n          ly = t.b * tempX + t.d * ly + t.ty;\n        }\n        this._currentPoly.points.push(lx, ly);\n      } else {\n        this._currentPoly.points.push(0, 0);\n      }\n    }\n  }\n  /** Builds the path. */\n  buildPath() {\n    const path = this._graphicsPath2D;\n    this.shapePrimitives.length = 0;\n    this._currentPoly = null;\n    for (let i = 0; i < path.instructions.length; i++) {\n      const instruction = path.instructions[i];\n      this[instruction.action](...instruction.data);\n    }\n    this.finish();\n  }\n  /** Gets the bounds of the path. */\n  get bounds() {\n    const bounds = this._bounds;\n    bounds.clear();\n    const shapePrimitives = this.shapePrimitives;\n    for (let i = 0; i < shapePrimitives.length; i++) {\n      const shapePrimitive = shapePrimitives[i];\n      const boundsRect = shapePrimitive.shape.getBounds(tempRectangle);\n      if (shapePrimitive.transform) {\n        bounds.addRect(boundsRect, shapePrimitive.transform);\n      } else {\n        bounds.addRect(boundsRect);\n      }\n    }\n    return bounds;\n  }\n}\n\nexport { ShapePath };\n//# sourceMappingURL=ShapePath.mjs.map\n","import { Point } from '../../../../maths/point/Point.mjs';\nimport { uid } from '../../../../utils/data/uid.mjs';\nimport { warn } from '../../../../utils/logging/warn.mjs';\nimport { SVGToGraphicsPath } from '../svg/SVGToGraphicsPath.mjs';\nimport { ShapePath } from './ShapePath.mjs';\n\n\"use strict\";\nclass GraphicsPath {\n  /**\n   * Creates a `GraphicsPath` instance optionally from an SVG path string or an array of `PathInstruction`.\n   * @param instructions - An SVG path string or an array of `PathInstruction` objects.\n   */\n  constructor(instructions) {\n    this.instructions = [];\n    /** unique id for this graphics path */\n    this.uid = uid(\"graphicsPath\");\n    this._dirty = true;\n    if (typeof instructions === \"string\") {\n      SVGToGraphicsPath(instructions, this);\n    } else {\n      this.instructions = instructions?.slice() ?? [];\n    }\n  }\n  /**\n   * Provides access to the internal shape path, ensuring it is up-to-date with the current instructions.\n   * @returns The `ShapePath` instance associated with this `GraphicsPath`.\n   */\n  get shapePath() {\n    if (!this._shapePath) {\n      this._shapePath = new ShapePath(this);\n    }\n    if (this._dirty) {\n      this._dirty = false;\n      this._shapePath.buildPath();\n    }\n    return this._shapePath;\n  }\n  /**\n   * Adds another `GraphicsPath` to this path, optionally applying a transformation.\n   * @param path - The `GraphicsPath` to add.\n   * @param transform - An optional transformation to apply to the added path.\n   * @returns The instance of the current object for chaining.\n   */\n  addPath(path, transform) {\n    path = path.clone();\n    this.instructions.push({ action: \"addPath\", data: [path, transform] });\n    this._dirty = true;\n    return this;\n  }\n  arc(...args) {\n    this.instructions.push({ action: \"arc\", data: args });\n    this._dirty = true;\n    return this;\n  }\n  arcTo(...args) {\n    this.instructions.push({ action: \"arcTo\", data: args });\n    this._dirty = true;\n    return this;\n  }\n  arcToSvg(...args) {\n    this.instructions.push({ action: \"arcToSvg\", data: args });\n    this._dirty = true;\n    return this;\n  }\n  bezierCurveTo(...args) {\n    this.instructions.push({ action: \"bezierCurveTo\", data: args });\n    this._dirty = true;\n    return this;\n  }\n  /**\n   * Adds a cubic Bezier curve to the path.\n   * It requires two points: the second control point and the end point. The first control point is assumed to be\n   * The starting point is the last point in the current path.\n   * @param cp2x - The x-coordinate of the second control point.\n   * @param cp2y - The y-coordinate of the second control point.\n   * @param x - The x-coordinate of the end point.\n   * @param y - The y-coordinate of the end point.\n   * @param smoothness - Optional parameter to adjust the smoothness of the curve.\n   * @returns The instance of the current object for chaining.\n   */\n  bezierCurveToShort(cp2x, cp2y, x, y, smoothness) {\n    const last = this.instructions[this.instructions.length - 1];\n    const lastPoint = this.getLastPoint(Point.shared);\n    let cp1x = 0;\n    let cp1y = 0;\n    if (!last || last.action !== \"bezierCurveTo\") {\n      cp1x = lastPoint.x;\n      cp1y = lastPoint.y;\n    } else {\n      cp1x = last.data[2];\n      cp1y = last.data[3];\n      const currentX = lastPoint.x;\n      const currentY = lastPoint.y;\n      cp1x = currentX + (currentX - cp1x);\n      cp1y = currentY + (currentY - cp1y);\n    }\n    this.instructions.push({ action: \"bezierCurveTo\", data: [cp1x, cp1y, cp2x, cp2y, x, y, smoothness] });\n    this._dirty = true;\n    return this;\n  }\n  /**\n   * Closes the current path by drawing a straight line back to the start.\n   * If the shape is already closed or there are no points in the path, this method does nothing.\n   * @returns The instance of the current object for chaining.\n   */\n  closePath() {\n    this.instructions.push({ action: \"closePath\", data: [] });\n    this._dirty = true;\n    return this;\n  }\n  ellipse(...args) {\n    this.instructions.push({ action: \"ellipse\", data: args });\n    this._dirty = true;\n    return this;\n  }\n  lineTo(...args) {\n    this.instructions.push({ action: \"lineTo\", data: args });\n    this._dirty = true;\n    return this;\n  }\n  moveTo(...args) {\n    this.instructions.push({ action: \"moveTo\", data: args });\n    return this;\n  }\n  quadraticCurveTo(...args) {\n    this.instructions.push({ action: \"quadraticCurveTo\", data: args });\n    this._dirty = true;\n    return this;\n  }\n  /**\n   * Adds a quadratic curve to the path. It uses the previous point as the control point.\n   * @param x - The x-coordinate of the end point.\n   * @param y - The y-coordinate of the end point.\n   * @param smoothness - Optional parameter to adjust the smoothness of the curve.\n   * @returns The instance of the current object for chaining.\n   */\n  quadraticCurveToShort(x, y, smoothness) {\n    const last = this.instructions[this.instructions.length - 1];\n    const lastPoint = this.getLastPoint(Point.shared);\n    let cpx1 = 0;\n    let cpy1 = 0;\n    if (!last || last.action !== \"quadraticCurveTo\") {\n      cpx1 = lastPoint.x;\n      cpy1 = lastPoint.y;\n    } else {\n      cpx1 = last.data[0];\n      cpy1 = last.data[1];\n      const currentX = lastPoint.x;\n      const currentY = lastPoint.y;\n      cpx1 = currentX + (currentX - cpx1);\n      cpy1 = currentY + (currentY - cpy1);\n    }\n    this.instructions.push({ action: \"quadraticCurveTo\", data: [cpx1, cpy1, x, y, smoothness] });\n    this._dirty = true;\n    return this;\n  }\n  /**\n   * Draws a rectangle shape. This method adds a new rectangle path to the current drawing.\n   * @param x - The x-coordinate of the top-left corner of the rectangle.\n   * @param y - The y-coordinate of the top-left corner of the rectangle.\n   * @param w - The width of the rectangle.\n   * @param h - The height of the rectangle.\n   * @param transform - An optional `Matrix` object to apply a transformation to the rectangle.\n   * @returns The instance of the current object for chaining.\n   */\n  rect(x, y, w, h, transform) {\n    this.instructions.push({ action: \"rect\", data: [x, y, w, h, transform] });\n    this._dirty = true;\n    return this;\n  }\n  /**\n   * Draws a circle shape. This method adds a new circle path to the current drawing.\n   * @param x - The x-coordinate of the center of the circle.\n   * @param y - The y-coordinate of the center of the circle.\n   * @param radius - The radius of the circle.\n   * @param transform - An optional `Matrix` object to apply a transformation to the circle.\n   * @returns The instance of the current object for chaining.\n   */\n  circle(x, y, radius, transform) {\n    this.instructions.push({ action: \"circle\", data: [x, y, radius, transform] });\n    this._dirty = true;\n    return this;\n  }\n  roundRect(...args) {\n    this.instructions.push({ action: \"roundRect\", data: args });\n    this._dirty = true;\n    return this;\n  }\n  poly(...args) {\n    this.instructions.push({ action: \"poly\", data: args });\n    this._dirty = true;\n    return this;\n  }\n  regularPoly(...args) {\n    this.instructions.push({ action: \"regularPoly\", data: args });\n    this._dirty = true;\n    return this;\n  }\n  roundPoly(...args) {\n    this.instructions.push({ action: \"roundPoly\", data: args });\n    this._dirty = true;\n    return this;\n  }\n  roundShape(...args) {\n    this.instructions.push({ action: \"roundShape\", data: args });\n    this._dirty = true;\n    return this;\n  }\n  filletRect(...args) {\n    this.instructions.push({ action: \"filletRect\", data: args });\n    this._dirty = true;\n    return this;\n  }\n  chamferRect(...args) {\n    this.instructions.push({ action: \"chamferRect\", data: args });\n    this._dirty = true;\n    return this;\n  }\n  /**\n   * Draws a star shape centered at a specified location. This method allows for the creation\n   *  of stars with a variable number of points, outer radius, optional inner radius, and rotation.\n   * The star is drawn as a closed polygon with alternating outer and inner vertices to create the star's points.\n   * An optional transformation can be applied to scale, rotate, or translate the star as needed.\n   * @param x - The x-coordinate of the center of the star.\n   * @param y - The y-coordinate of the center of the star.\n   * @param points - The number of points of the star.\n   * @param radius - The outer radius of the star (distance from the center to the outer points).\n   * @param innerRadius - Optional. The inner radius of the star\n   * (distance from the center to the inner points between the outer points).\n   * If not provided, defaults to half of the `radius`.\n   * @param rotation - Optional. The rotation of the star in radians, where 0 is aligned with the y-axis.\n   * Defaults to 0, meaning one point is directly upward.\n   * @param transform - An optional `Matrix` object to apply a transformation to the star.\n   * This can include rotations, scaling, and translations.\n   * @returns The instance of the current object for chaining further drawing commands.\n   */\n  // eslint-disable-next-line max-len\n  star(x, y, points, radius, innerRadius, rotation, transform) {\n    innerRadius || (innerRadius = radius / 2);\n    const startAngle = -1 * Math.PI / 2 + rotation;\n    const len = points * 2;\n    const delta = Math.PI * 2 / len;\n    const polygon = [];\n    for (let i = 0; i < len; i++) {\n      const r = i % 2 ? innerRadius : radius;\n      const angle = i * delta + startAngle;\n      polygon.push(\n        x + r * Math.cos(angle),\n        y + r * Math.sin(angle)\n      );\n    }\n    this.poly(polygon, true, transform);\n    return this;\n  }\n  /**\n   * Creates a copy of the current `GraphicsPath` instance. This method supports both shallow and deep cloning.\n   * A shallow clone copies the reference of the instructions array, while a deep clone creates a new array and\n   * copies each instruction individually, ensuring that modifications to the instructions of the cloned `GraphicsPath`\n   * do not affect the original `GraphicsPath` and vice versa.\n   * @param deep - A boolean flag indicating whether the clone should be deep.\n   * @returns A new `GraphicsPath` instance that is a clone of the current instance.\n   */\n  clone(deep = false) {\n    const newGraphicsPath2D = new GraphicsPath();\n    if (!deep) {\n      newGraphicsPath2D.instructions = this.instructions.slice();\n    } else {\n      for (let i = 0; i < this.instructions.length; i++) {\n        const instruction = this.instructions[i];\n        newGraphicsPath2D.instructions.push({ action: instruction.action, data: instruction.data.slice() });\n      }\n    }\n    return newGraphicsPath2D;\n  }\n  clear() {\n    this.instructions.length = 0;\n    this._dirty = true;\n    return this;\n  }\n  /**\n   * Applies a transformation matrix to all drawing instructions within the `GraphicsPath`.\n   * This method enables the modification of the path's geometry according to the provided\n   * transformation matrix, which can include translations, rotations, scaling, and skewing.\n   *\n   * Each drawing instruction in the path is updated to reflect the transformation,\n   * ensuring the visual representation of the path is consistent with the applied matrix.\n   *\n   * Note: The transformation is applied directly to the coordinates and control points of the drawing instructions,\n   * not to the path as a whole. This means the transformation's effects are baked into the individual instructions,\n   * allowing for fine-grained control over the path's appearance.\n   * @param matrix - A `Matrix` object representing the transformation to apply.\n   * @returns The instance of the current object for chaining further operations.\n   */\n  transform(matrix) {\n    if (matrix.isIdentity())\n      return this;\n    const a = matrix.a;\n    const b = matrix.b;\n    const c = matrix.c;\n    const d = matrix.d;\n    const tx = matrix.tx;\n    const ty = matrix.ty;\n    let x = 0;\n    let y = 0;\n    let cpx1 = 0;\n    let cpy1 = 0;\n    let cpx2 = 0;\n    let cpy2 = 0;\n    let rx = 0;\n    let ry = 0;\n    for (let i = 0; i < this.instructions.length; i++) {\n      const instruction = this.instructions[i];\n      const data = instruction.data;\n      switch (instruction.action) {\n        case \"moveTo\":\n        case \"lineTo\":\n          x = data[0];\n          y = data[1];\n          data[0] = a * x + c * y + tx;\n          data[1] = b * x + d * y + ty;\n          break;\n        case \"bezierCurveTo\":\n          cpx1 = data[0];\n          cpy1 = data[1];\n          cpx2 = data[2];\n          cpy2 = data[3];\n          x = data[4];\n          y = data[5];\n          data[0] = a * cpx1 + c * cpy1 + tx;\n          data[1] = b * cpx1 + d * cpy1 + ty;\n          data[2] = a * cpx2 + c * cpy2 + tx;\n          data[3] = b * cpx2 + d * cpy2 + ty;\n          data[4] = a * x + c * y + tx;\n          data[5] = b * x + d * y + ty;\n          break;\n        case \"quadraticCurveTo\":\n          cpx1 = data[0];\n          cpy1 = data[1];\n          x = data[2];\n          y = data[3];\n          data[0] = a * cpx1 + c * cpy1 + tx;\n          data[1] = b * cpx1 + d * cpy1 + ty;\n          data[2] = a * x + c * y + tx;\n          data[3] = b * x + d * y + ty;\n          break;\n        case \"arcToSvg\":\n          x = data[5];\n          y = data[6];\n          rx = data[0];\n          ry = data[1];\n          data[0] = a * rx + c * ry;\n          data[1] = b * rx + d * ry;\n          data[5] = a * x + c * y + tx;\n          data[6] = b * x + d * y + ty;\n          break;\n        case \"circle\":\n          data[4] = adjustTransform(data[3], matrix);\n          break;\n        case \"rect\":\n          data[4] = adjustTransform(data[4], matrix);\n          break;\n        case \"ellipse\":\n          data[8] = adjustTransform(data[8], matrix);\n          break;\n        case \"roundRect\":\n          data[5] = adjustTransform(data[5], matrix);\n          break;\n        case \"addPath\":\n          data[0].transform(matrix);\n          break;\n        case \"poly\":\n          data[2] = adjustTransform(data[2], matrix);\n          break;\n        default:\n          warn(\"unknown transform action\", instruction.action);\n          break;\n      }\n    }\n    this._dirty = true;\n    return this;\n  }\n  get bounds() {\n    return this.shapePath.bounds;\n  }\n  /**\n   * Retrieves the last point from the current drawing instructions in the `GraphicsPath`.\n   * This method is useful for operations that depend on the path's current endpoint,\n   * such as connecting subsequent shapes or paths. It supports various drawing instructions,\n   * ensuring the last point's position is accurately determined regardless of the path's complexity.\n   *\n   * If the last instruction is a `closePath`, the method iterates backward through the instructions\n   *  until it finds an actionable instruction that defines a point (e.g., `moveTo`, `lineTo`,\n   * `quadraticCurveTo`, etc.). For compound paths added via `addPath`, it recursively retrieves\n   * the last point from the nested path.\n   * @param out - A `Point` object where the last point's coordinates will be stored.\n   * This object is modified directly to contain the result.\n   * @returns The `Point` object containing the last point's coordinates.\n   */\n  getLastPoint(out) {\n    let index = this.instructions.length - 1;\n    let lastInstruction = this.instructions[index];\n    if (!lastInstruction) {\n      out.x = 0;\n      out.y = 0;\n      return out;\n    }\n    while (lastInstruction.action === \"closePath\") {\n      index--;\n      if (index < 0) {\n        out.x = 0;\n        out.y = 0;\n        return out;\n      }\n      lastInstruction = this.instructions[index];\n    }\n    switch (lastInstruction.action) {\n      case \"moveTo\":\n      case \"lineTo\":\n        out.x = lastInstruction.data[0];\n        out.y = lastInstruction.data[1];\n        break;\n      case \"quadraticCurveTo\":\n        out.x = lastInstruction.data[2];\n        out.y = lastInstruction.data[3];\n        break;\n      case \"bezierCurveTo\":\n        out.x = lastInstruction.data[4];\n        out.y = lastInstruction.data[5];\n        break;\n      case \"arc\":\n      case \"arcToSvg\":\n        out.x = lastInstruction.data[5];\n        out.y = lastInstruction.data[6];\n        break;\n      case \"addPath\":\n        lastInstruction.data[0].getLastPoint(out);\n        break;\n    }\n    return out;\n  }\n}\nfunction adjustTransform(currentMatrix, transform) {\n  if (currentMatrix) {\n    return currentMatrix.prepend(transform);\n  }\n  return transform.clone();\n}\n\nexport { GraphicsPath };\n//# sourceMappingURL=GraphicsPath.mjs.map\n","import { Color } from '../../../../color/Color.mjs';\nimport { GraphicsPath } from '../path/GraphicsPath.mjs';\n\n\"use strict\";\nfunction SVGParser(svg, graphicsContext) {\n  if (typeof svg === \"string\") {\n    const div = document.createElement(\"div\");\n    div.innerHTML = svg.trim();\n    svg = div.querySelector(\"svg\");\n  }\n  const session = {\n    context: graphicsContext,\n    path: new GraphicsPath()\n  };\n  renderChildren(svg, session, null, null);\n  return graphicsContext;\n}\nfunction renderChildren(svg, session, fillStyle, strokeStyle) {\n  const children = svg.children;\n  const { fillStyle: f1, strokeStyle: s1 } = parseStyle(svg);\n  if (f1 && fillStyle) {\n    fillStyle = { ...fillStyle, ...f1 };\n  } else if (f1) {\n    fillStyle = f1;\n  }\n  if (s1 && strokeStyle) {\n    strokeStyle = { ...strokeStyle, ...s1 };\n  } else if (s1) {\n    strokeStyle = s1;\n  }\n  session.context.fillStyle = fillStyle;\n  session.context.strokeStyle = strokeStyle;\n  let x;\n  let y;\n  let x1;\n  let y1;\n  let x2;\n  let y2;\n  let cx;\n  let cy;\n  let r;\n  let rx;\n  let ry;\n  let points;\n  let pointsString;\n  let d;\n  let graphicsPath;\n  let width;\n  let height;\n  switch (svg.nodeName.toLowerCase()) {\n    case \"path\":\n      d = svg.getAttribute(\"d\");\n      graphicsPath = new GraphicsPath(d);\n      session.context.path(graphicsPath);\n      if (fillStyle)\n        session.context.fill();\n      if (strokeStyle)\n        session.context.stroke();\n      break;\n    case \"circle\":\n      cx = parseFloatAttribute(svg, \"cx\", 0);\n      cy = parseFloatAttribute(svg, \"cy\", 0);\n      r = parseFloatAttribute(svg, \"r\", 0);\n      session.context.ellipse(cx, cy, r, r);\n      if (fillStyle)\n        session.context.fill();\n      if (strokeStyle)\n        session.context.stroke();\n      break;\n    case \"rect\":\n      x = parseFloatAttribute(svg, \"x\", 0);\n      y = parseFloatAttribute(svg, \"y\", 0);\n      width = parseFloatAttribute(svg, \"width\", 0);\n      height = parseFloatAttribute(svg, \"height\", 0);\n      rx = parseFloatAttribute(svg, \"rx\", 0);\n      ry = parseFloatAttribute(svg, \"ry\", 0);\n      if (rx || ry) {\n        session.context.roundRect(x, y, width, height, rx || ry);\n      } else {\n        session.context.rect(x, y, width, height);\n      }\n      if (fillStyle)\n        session.context.fill();\n      if (strokeStyle)\n        session.context.stroke();\n      break;\n    case \"ellipse\":\n      cx = parseFloatAttribute(svg, \"cx\", 0);\n      cy = parseFloatAttribute(svg, \"cy\", 0);\n      rx = parseFloatAttribute(svg, \"rx\", 0);\n      ry = parseFloatAttribute(svg, \"ry\", 0);\n      session.context.beginPath();\n      session.context.ellipse(cx, cy, rx, ry);\n      if (fillStyle)\n        session.context.fill();\n      if (strokeStyle)\n        session.context.stroke();\n      break;\n    case \"line\":\n      x1 = parseFloatAttribute(svg, \"x1\", 0);\n      y1 = parseFloatAttribute(svg, \"y1\", 0);\n      x2 = parseFloatAttribute(svg, \"x2\", 0);\n      y2 = parseFloatAttribute(svg, \"y2\", 0);\n      session.context.beginPath();\n      session.context.moveTo(x1, y1);\n      session.context.lineTo(x2, y2);\n      if (strokeStyle)\n        session.context.stroke();\n      break;\n    case \"polygon\":\n      pointsString = svg.getAttribute(\"points\");\n      points = pointsString.match(/\\d+/g).map((n) => parseInt(n, 10));\n      session.context.poly(points, true);\n      if (fillStyle)\n        session.context.fill();\n      if (strokeStyle)\n        session.context.stroke();\n      break;\n    case \"polyline\":\n      pointsString = svg.getAttribute(\"points\");\n      points = pointsString.match(/\\d+/g).map((n) => parseInt(n, 10));\n      session.context.poly(points, false);\n      if (strokeStyle)\n        session.context.stroke();\n      break;\n    case \"g\":\n    case \"svg\":\n      break;\n    default: {\n      console.info(`[SVG parser] <${svg.nodeName}> elements unsupported`);\n      break;\n    }\n  }\n  for (let i = 0; i < children.length; i++) {\n    renderChildren(children[i], session, fillStyle, strokeStyle);\n  }\n}\nfunction parseFloatAttribute(svg, id, defaultValue) {\n  const value = svg.getAttribute(id);\n  return value ? Number(value) : defaultValue;\n}\nfunction parseStyle(svg) {\n  const style = svg.getAttribute(\"style\");\n  const strokeStyle = {};\n  const fillStyle = {};\n  let useFill = false;\n  let useStroke = false;\n  if (style) {\n    const styleParts = style.split(\";\");\n    for (let i = 0; i < styleParts.length; i++) {\n      const stylePart = styleParts[i];\n      const [key, value] = stylePart.split(\":\");\n      switch (key) {\n        case \"stroke\":\n          if (value !== \"none\") {\n            strokeStyle.color = Color.shared.setValue(value).toNumber();\n            useStroke = true;\n          }\n          break;\n        case \"stroke-width\":\n          strokeStyle.width = Number(value);\n          break;\n        case \"fill\":\n          if (value !== \"none\") {\n            useFill = true;\n            fillStyle.color = Color.shared.setValue(value).toNumber();\n          }\n          break;\n        case \"fill-opacity\":\n          fillStyle.alpha = Number(value);\n          break;\n        case \"stroke-opacity\":\n          strokeStyle.alpha = Number(value);\n          break;\n        case \"opacity\":\n          fillStyle.alpha = Number(value);\n          strokeStyle.alpha = Number(value);\n          break;\n      }\n    }\n  } else {\n    const stroke = svg.getAttribute(\"stroke\");\n    if (stroke && stroke !== \"none\") {\n      useStroke = true;\n      strokeStyle.color = Color.shared.setValue(stroke).toNumber();\n      strokeStyle.width = parseFloatAttribute(svg, \"stroke-width\", 1);\n    }\n    const fill = svg.getAttribute(\"fill\");\n    if (fill && fill !== \"none\") {\n      useFill = true;\n      fillStyle.color = Color.shared.setValue(fill).toNumber();\n    }\n  }\n  return {\n    strokeStyle: useStroke ? strokeStyle : null,\n    fillStyle: useFill ? fillStyle : null\n  };\n}\n\nexport { SVGParser };\n//# sourceMappingURL=SVGParser.mjs.map\n","import { Color } from '../../../../color/Color.mjs';\nimport { Matrix } from '../../../../maths/matrix/Matrix.mjs';\nimport { Texture } from '../../../../rendering/renderers/shared/texture/Texture.mjs';\nimport { FillGradient } from '../fill/FillGradient.mjs';\nimport { FillPattern } from '../fill/FillPattern.mjs';\n\n\"use strict\";\nfunction isColorLike(value) {\n  return Color.isColorLike(value);\n}\nfunction isFillPattern(value) {\n  return value instanceof FillPattern;\n}\nfunction isFillGradient(value) {\n  return value instanceof FillGradient;\n}\nfunction handleColorLike(fill, value, defaultStyle) {\n  const temp = Color.shared.setValue(value ?? 0);\n  fill.color = temp.toNumber();\n  fill.alpha = temp.alpha === 1 ? defaultStyle.alpha : temp.alpha;\n  fill.texture = Texture.WHITE;\n  return { ...defaultStyle, ...fill };\n}\nfunction handleFillPattern(fill, value, defaultStyle) {\n  fill.fill = value;\n  fill.color = 16777215;\n  fill.texture = value.texture;\n  fill.matrix = value.transform;\n  return { ...defaultStyle, ...fill };\n}\nfunction handleFillGradient(fill, value, defaultStyle) {\n  value.buildLinearGradient();\n  fill.fill = value;\n  fill.color = 16777215;\n  fill.texture = value.texture;\n  fill.matrix = value.transform;\n  return { ...defaultStyle, ...fill };\n}\nfunction handleFillObject(value, defaultStyle) {\n  const style = { ...defaultStyle, ...value };\n  if (style.texture) {\n    if (style.texture !== Texture.WHITE) {\n      const m = style.matrix?.clone().invert() || new Matrix();\n      m.translate(style.texture.frame.x, style.texture.frame.y);\n      m.scale(1 / style.texture.source.width, 1 / style.texture.source.height);\n      style.matrix = m;\n    }\n    const sourceStyle = style.texture.source.style;\n    if (sourceStyle.addressMode === \"clamp-to-edge\") {\n      sourceStyle.addressMode = \"repeat\";\n      sourceStyle.update();\n    }\n  }\n  const color = Color.shared.setValue(style.color);\n  style.alpha *= color.alpha;\n  style.color = color.toNumber();\n  style.matrix = style.matrix ? style.matrix.clone() : null;\n  return style;\n}\nfunction toFillStyle(value, defaultStyle) {\n  if (value === void 0 || value === null) {\n    return null;\n  }\n  const fill = {};\n  const objectStyle = value;\n  if (isColorLike(value)) {\n    return handleColorLike(fill, value, defaultStyle);\n  } else if (isFillPattern(value)) {\n    return handleFillPattern(fill, value, defaultStyle);\n  } else if (isFillGradient(value)) {\n    return handleFillGradient(fill, value, defaultStyle);\n  } else if (objectStyle.fill && isFillPattern(objectStyle.fill)) {\n    return handleFillPattern(objectStyle, objectStyle.fill, defaultStyle);\n  } else if (objectStyle.fill && isFillGradient(objectStyle.fill)) {\n    return handleFillGradient(objectStyle, objectStyle.fill, defaultStyle);\n  }\n  return handleFillObject(objectStyle, defaultStyle);\n}\nfunction toStrokeStyle(value, defaultStyle) {\n  const { width, alignment, miterLimit, cap, join, pixelLine, ...rest } = defaultStyle;\n  const fill = toFillStyle(value, rest);\n  if (!fill) {\n    return null;\n  }\n  return {\n    width,\n    alignment,\n    miterLimit,\n    cap,\n    join,\n    pixelLine,\n    ...fill\n  };\n}\n\nexport { toFillStyle, toStrokeStyle };\n//# sourceMappingURL=convertFillInputToFillStyle.mjs.map\n","import EventEmitter from 'eventemitter3';\nimport { Color } from '../../../color/Color.mjs';\nimport { Matrix } from '../../../maths/matrix/Matrix.mjs';\nimport { Point } from '../../../maths/point/Point.mjs';\nimport { Texture } from '../../../rendering/renderers/shared/texture/Texture.mjs';\nimport { uid } from '../../../utils/data/uid.mjs';\nimport { deprecation, v8_0_0 } from '../../../utils/logging/deprecation.mjs';\nimport { Bounds } from '../../container/bounds/Bounds.mjs';\nimport { GraphicsPath } from './path/GraphicsPath.mjs';\nimport { SVGParser } from './svg/SVGParser.mjs';\nimport { toFillStyle, toStrokeStyle } from './utils/convertFillInputToFillStyle.mjs';\n\n\"use strict\";\nconst tmpPoint = new Point();\nconst tempMatrix = new Matrix();\nconst _GraphicsContext = class _GraphicsContext extends EventEmitter {\n  constructor() {\n    super(...arguments);\n    /** unique id for this graphics context */\n    this.uid = uid(\"graphicsContext\");\n    this.dirty = true;\n    this.batchMode = \"auto\";\n    this.instructions = [];\n    this._activePath = new GraphicsPath();\n    this._transform = new Matrix();\n    this._fillStyle = { ..._GraphicsContext.defaultFillStyle };\n    this._strokeStyle = { ..._GraphicsContext.defaultStrokeStyle };\n    this._stateStack = [];\n    this._tick = 0;\n    this._bounds = new Bounds();\n    this._boundsDirty = true;\n  }\n  /**\n   * Creates a new GraphicsContext object that is a clone of this instance, copying all properties,\n   * including the current drawing state, transformations, styles, and instructions.\n   * @returns A new GraphicsContext instance with the same properties and state as this one.\n   */\n  clone() {\n    const clone = new _GraphicsContext();\n    clone.batchMode = this.batchMode;\n    clone.instructions = this.instructions.slice();\n    clone._activePath = this._activePath.clone();\n    clone._transform = this._transform.clone();\n    clone._fillStyle = { ...this._fillStyle };\n    clone._strokeStyle = { ...this._strokeStyle };\n    clone._stateStack = this._stateStack.slice();\n    clone._bounds = this._bounds.clone();\n    clone._boundsDirty = true;\n    return clone;\n  }\n  /**\n   * The current fill style of the graphics context. This can be a color, gradient, pattern, or a more complex style defined by a FillStyle object.\n   */\n  get fillStyle() {\n    return this._fillStyle;\n  }\n  set fillStyle(value) {\n    this._fillStyle = toFillStyle(value, _GraphicsContext.defaultFillStyle);\n  }\n  /**\n   * The current stroke style of the graphics context. Similar to fill styles, stroke styles can encompass colors, gradients, patterns, or more detailed configurations via a StrokeStyle object.\n   */\n  get strokeStyle() {\n    return this._strokeStyle;\n  }\n  set strokeStyle(value) {\n    this._strokeStyle = toStrokeStyle(value, _GraphicsContext.defaultStrokeStyle);\n  }\n  /**\n   * Sets the current fill style of the graphics context. The fill style can be a color, gradient,\n   * pattern, or a more complex style defined by a FillStyle object.\n   * @param style - The fill style to apply. This can be a simple color, a gradient or pattern object,\n   *                or a FillStyle or ConvertedFillStyle object.\n   * @returns The instance of the current GraphicsContext for method chaining.\n   */\n  setFillStyle(style) {\n    this._fillStyle = toFillStyle(style, _GraphicsContext.defaultFillStyle);\n    return this;\n  }\n  /**\n   * Sets the current stroke style of the graphics context. Similar to fill styles, stroke styles can\n   * encompass colors, gradients, patterns, or more detailed configurations via a StrokeStyle object.\n   * @param style - The stroke style to apply. Can be defined as a color, a gradient or pattern,\n   *                or a StrokeStyle or ConvertedStrokeStyle object.\n   * @returns The instance of the current GraphicsContext for method chaining.\n   */\n  setStrokeStyle(style) {\n    this._strokeStyle = toFillStyle(style, _GraphicsContext.defaultStrokeStyle);\n    return this;\n  }\n  texture(texture, tint, dx, dy, dw, dh) {\n    this.instructions.push({\n      action: \"texture\",\n      data: {\n        image: texture,\n        dx: dx || 0,\n        dy: dy || 0,\n        dw: dw || texture.frame.width,\n        dh: dh || texture.frame.height,\n        transform: this._transform.clone(),\n        alpha: this._fillStyle.alpha,\n        style: tint ? Color.shared.setValue(tint).toNumber() : 16777215\n      }\n    });\n    this.onUpdate();\n    return this;\n  }\n  /**\n   * Resets the current path. Any previous path and its commands are discarded and a new path is\n   * started. This is typically called before beginning a new shape or series of drawing commands.\n   * @returns The instance of the current GraphicsContext for method chaining.\n   */\n  beginPath() {\n    this._activePath = new GraphicsPath();\n    return this;\n  }\n  fill(style, alpha) {\n    let path;\n    const lastInstruction = this.instructions[this.instructions.length - 1];\n    if (this._tick === 0 && lastInstruction && lastInstruction.action === \"stroke\") {\n      path = lastInstruction.data.path;\n    } else {\n      path = this._activePath.clone();\n    }\n    if (!path)\n      return this;\n    if (style != null) {\n      if (alpha !== void 0 && typeof style === \"number\") {\n        deprecation(v8_0_0, \"GraphicsContext.fill(color, alpha) is deprecated, use GraphicsContext.fill({ color, alpha }) instead\");\n        style = { color: style, alpha };\n      }\n      this._fillStyle = toFillStyle(style, _GraphicsContext.defaultFillStyle);\n    }\n    this.instructions.push({\n      action: \"fill\",\n      // TODO copy fill style!\n      data: { style: this.fillStyle, path }\n    });\n    this.onUpdate();\n    this._initNextPathLocation();\n    this._tick = 0;\n    return this;\n  }\n  _initNextPathLocation() {\n    const { x, y } = this._activePath.getLastPoint(Point.shared);\n    this._activePath.clear();\n    this._activePath.moveTo(x, y);\n  }\n  /**\n   * Strokes the current path with the current stroke style. This method can take an optional\n   * FillInput parameter to define the stroke's appearance, including its color, width, and other properties.\n   * @param style - (Optional) The stroke style to apply. Can be defined as a simple color or a more complex style object. If omitted, uses the current stroke style.\n   * @returns The instance of the current GraphicsContext for method chaining.\n   */\n  stroke(style) {\n    let path;\n    const lastInstruction = this.instructions[this.instructions.length - 1];\n    if (this._tick === 0 && lastInstruction && lastInstruction.action === \"fill\") {\n      path = lastInstruction.data.path;\n    } else {\n      path = this._activePath.clone();\n    }\n    if (!path)\n      return this;\n    if (style != null) {\n      this._strokeStyle = toStrokeStyle(style, _GraphicsContext.defaultStrokeStyle);\n    }\n    this.instructions.push({\n      action: \"stroke\",\n      // TODO copy fill style!\n      data: { style: this.strokeStyle, path }\n    });\n    this.onUpdate();\n    this._initNextPathLocation();\n    this._tick = 0;\n    return this;\n  }\n  /**\n   * Applies a cutout to the last drawn shape. This is used to create holes or complex shapes by\n   * subtracting a path from the previously drawn path. If a hole is not completely in a shape, it will\n   * fail to cut correctly!\n   * @returns The instance of the current GraphicsContext for method chaining.\n   */\n  cut() {\n    for (let i = 0; i < 2; i++) {\n      const lastInstruction = this.instructions[this.instructions.length - 1 - i];\n      const holePath = this._activePath.clone();\n      if (lastInstruction) {\n        if (lastInstruction.action === \"stroke\" || lastInstruction.action === \"fill\") {\n          if (lastInstruction.data.hole) {\n            lastInstruction.data.hole.addPath(holePath);\n          } else {\n            lastInstruction.data.hole = holePath;\n            break;\n          }\n        }\n      }\n    }\n    this._initNextPathLocation();\n    return this;\n  }\n  /**\n   * Adds an arc to the current path, which is centered at (x, y) with the specified radius,\n   * starting and ending angles, and direction.\n   * @param x - The x-coordinate of the arc's center.\n   * @param y - The y-coordinate of the arc's center.\n   * @param radius - The arc's radius.\n   * @param startAngle - The starting angle, in radians.\n   * @param endAngle - The ending angle, in radians.\n   * @param counterclockwise - (Optional) Specifies whether the arc is drawn counterclockwise (true) or clockwise (false). Defaults to false.\n   * @returns The instance of the current GraphicsContext for method chaining.\n   */\n  arc(x, y, radius, startAngle, endAngle, counterclockwise) {\n    this._tick++;\n    const t = this._transform;\n    this._activePath.arc(\n      t.a * x + t.c * y + t.tx,\n      t.b * x + t.d * y + t.ty,\n      radius,\n      startAngle,\n      endAngle,\n      counterclockwise\n    );\n    return this;\n  }\n  /**\n   * Adds an arc to the current path with the given control points and radius, connected to the previous point\n   * by a straight line if necessary.\n   * @param x1 - The x-coordinate of the first control point.\n   * @param y1 - The y-coordinate of the first control point.\n   * @param x2 - The x-coordinate of the second control point.\n   * @param y2 - The y-coordinate of the second control point.\n   * @param radius - The arc's radius.\n   * @returns The instance of the current GraphicsContext for method chaining.\n   */\n  arcTo(x1, y1, x2, y2, radius) {\n    this._tick++;\n    const t = this._transform;\n    this._activePath.arcTo(\n      t.a * x1 + t.c * y1 + t.tx,\n      t.b * x1 + t.d * y1 + t.ty,\n      t.a * x2 + t.c * y2 + t.tx,\n      t.b * x2 + t.d * y2 + t.ty,\n      radius\n    );\n    return this;\n  }\n  /**\n   * Adds an SVG-style arc to the path, allowing for elliptical arcs based on the SVG spec.\n   * @param rx - The x-radius of the ellipse.\n   * @param ry - The y-radius of the ellipse.\n   * @param xAxisRotation - The rotation of the ellipse's x-axis relative\n   * to the x-axis of the coordinate system, in degrees.\n   * @param largeArcFlag - Determines if the arc should be greater than or less than 180 degrees.\n   * @param sweepFlag - Determines if the arc should be swept in a positive angle direction.\n   * @param x - The x-coordinate of the arc's end point.\n   * @param y - The y-coordinate of the arc's end point.\n   * @returns The instance of the current object for chaining.\n   */\n  arcToSvg(rx, ry, xAxisRotation, largeArcFlag, sweepFlag, x, y) {\n    this._tick++;\n    const t = this._transform;\n    this._activePath.arcToSvg(\n      rx,\n      ry,\n      xAxisRotation,\n      // should we rotate this with transform??\n      largeArcFlag,\n      sweepFlag,\n      t.a * x + t.c * y + t.tx,\n      t.b * x + t.d * y + t.ty\n    );\n    return this;\n  }\n  /**\n   * Adds a cubic Bezier curve to the path.\n   * It requires three points: the first two are control points and the third one is the end point.\n   * The starting point is the last point in the current path.\n   * @param cp1x - The x-coordinate of the first control point.\n   * @param cp1y - The y-coordinate of the first control point.\n   * @param cp2x - The x-coordinate of the second control point.\n   * @param cp2y - The y-coordinate of the second control point.\n   * @param x - The x-coordinate of the end point.\n   * @param y - The y-coordinate of the end point.\n   * @param smoothness - Optional parameter to adjust the smoothness of the curve.\n   * @returns The instance of the current object for chaining.\n   */\n  bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y, smoothness) {\n    this._tick++;\n    const t = this._transform;\n    this._activePath.bezierCurveTo(\n      t.a * cp1x + t.c * cp1y + t.tx,\n      t.b * cp1x + t.d * cp1y + t.ty,\n      t.a * cp2x + t.c * cp2y + t.tx,\n      t.b * cp2x + t.d * cp2y + t.ty,\n      t.a * x + t.c * y + t.tx,\n      t.b * x + t.d * y + t.ty,\n      smoothness\n    );\n    return this;\n  }\n  /**\n   * Closes the current path by drawing a straight line back to the start.\n   * If the shape is already closed or there are no points in the path, this method does nothing.\n   * @returns The instance of the current object for chaining.\n   */\n  closePath() {\n    this._tick++;\n    this._activePath?.closePath();\n    return this;\n  }\n  /**\n   * Draws an ellipse at the specified location and with the given x and y radii.\n   * An optional transformation can be applied, allowing for rotation, scaling, and translation.\n   * @param x - The x-coordinate of the center of the ellipse.\n   * @param y - The y-coordinate of the center of the ellipse.\n   * @param radiusX - The horizontal radius of the ellipse.\n   * @param radiusY - The vertical radius of the ellipse.\n   * @returns The instance of the current object for chaining.\n   */\n  ellipse(x, y, radiusX, radiusY) {\n    this._tick++;\n    this._activePath.ellipse(x, y, radiusX, radiusY, this._transform.clone());\n    return this;\n  }\n  /**\n   * Draws a circle shape. This method adds a new circle path to the current drawing.\n   * @param x - The x-coordinate of the center of the circle.\n   * @param y - The y-coordinate of the center of the circle.\n   * @param radius - The radius of the circle.\n   * @returns The instance of the current object for chaining.\n   */\n  circle(x, y, radius) {\n    this._tick++;\n    this._activePath.circle(x, y, radius, this._transform.clone());\n    return this;\n  }\n  /**\n   * Adds another `GraphicsPath` to this path, optionally applying a transformation.\n   * @param path - The `GraphicsPath` to add.\n   * @returns The instance of the current object for chaining.\n   */\n  path(path) {\n    this._tick++;\n    this._activePath.addPath(path, this._transform.clone());\n    return this;\n  }\n  /**\n   * Connects the current point to a new point with a straight line. This method updates the current path.\n   * @param x - The x-coordinate of the new point to connect to.\n   * @param y - The y-coordinate of the new point to connect to.\n   * @returns The instance of the current object for chaining.\n   */\n  lineTo(x, y) {\n    this._tick++;\n    const t = this._transform;\n    this._activePath.lineTo(\n      t.a * x + t.c * y + t.tx,\n      t.b * x + t.d * y + t.ty\n    );\n    return this;\n  }\n  /**\n   * Sets the starting point for a new sub-path. Any subsequent drawing commands are considered part of this path.\n   * @param x - The x-coordinate for the starting point.\n   * @param y - The y-coordinate for the starting point.\n   * @returns The instance of the current object for chaining.\n   */\n  moveTo(x, y) {\n    this._tick++;\n    const t = this._transform;\n    const instructions = this._activePath.instructions;\n    const transformedX = t.a * x + t.c * y + t.tx;\n    const transformedY = t.b * x + t.d * y + t.ty;\n    if (instructions.length === 1 && instructions[0].action === \"moveTo\") {\n      instructions[0].data[0] = transformedX;\n      instructions[0].data[1] = transformedY;\n      return this;\n    }\n    this._activePath.moveTo(\n      transformedX,\n      transformedY\n    );\n    return this;\n  }\n  /**\n   * Adds a quadratic curve to the path. It requires two points: the control point and the end point.\n   * The starting point is the last point in the current path.\n   * @param cpx - The x-coordinate of the control point.\n   * @param cpy - The y-coordinate of the control point.\n   * @param x - The x-coordinate of the end point.\n   * @param y - The y-coordinate of the end point.\n   * @param smoothness - Optional parameter to adjust the smoothness of the curve.\n   * @returns The instance of the current object for chaining.\n   */\n  quadraticCurveTo(cpx, cpy, x, y, smoothness) {\n    this._tick++;\n    const t = this._transform;\n    this._activePath.quadraticCurveTo(\n      t.a * cpx + t.c * cpy + t.tx,\n      t.b * cpx + t.d * cpy + t.ty,\n      t.a * x + t.c * y + t.tx,\n      t.b * x + t.d * y + t.ty,\n      smoothness\n    );\n    return this;\n  }\n  /**\n   * Draws a rectangle shape. This method adds a new rectangle path to the current drawing.\n   * @param x - The x-coordinate of the top-left corner of the rectangle.\n   * @param y - The y-coordinate of the top-left corner of the rectangle.\n   * @param w - The width of the rectangle.\n   * @param h - The height of the rectangle.\n   * @returns The instance of the current object for chaining.\n   */\n  rect(x, y, w, h) {\n    this._tick++;\n    this._activePath.rect(x, y, w, h, this._transform.clone());\n    return this;\n  }\n  /**\n   * Draws a rectangle with rounded corners.\n   * The corner radius can be specified to determine how rounded the corners should be.\n   * An optional transformation can be applied, which allows for rotation, scaling, and translation of the rectangle.\n   * @param x - The x-coordinate of the top-left corner of the rectangle.\n   * @param y - The y-coordinate of the top-left corner of the rectangle.\n   * @param w - The width of the rectangle.\n   * @param h - The height of the rectangle.\n   * @param radius - The radius of the rectangle's corners. If not specified, corners will be sharp.\n   * @returns The instance of the current object for chaining.\n   */\n  roundRect(x, y, w, h, radius) {\n    this._tick++;\n    this._activePath.roundRect(x, y, w, h, radius, this._transform.clone());\n    return this;\n  }\n  /**\n   * Draws a polygon shape by specifying a sequence of points. This method allows for the creation of complex polygons,\n   * which can be both open and closed. An optional transformation can be applied, enabling the polygon to be scaled,\n   * rotated, or translated as needed.\n   * @param points - An array of numbers, or an array of PointData objects eg [{x,y}, {x,y}, {x,y}]\n   * representing the x and y coordinates, of the polygon's vertices, in sequence.\n   * @param close - A boolean indicating whether to close the polygon path. True by default.\n   */\n  poly(points, close) {\n    this._tick++;\n    this._activePath.poly(points, close, this._transform.clone());\n    return this;\n  }\n  /**\n   * Draws a regular polygon with a specified number of sides. All sides and angles are equal.\n   * @param x - The x-coordinate of the center of the polygon.\n   * @param y - The y-coordinate of the center of the polygon.\n   * @param radius - The radius of the circumscribed circle of the polygon.\n   * @param sides - The number of sides of the polygon. Must be 3 or more.\n   * @param rotation - The rotation angle of the polygon, in radians. Zero by default.\n   * @param transform - An optional `Matrix` object to apply a transformation to the polygon.\n   * @returns The instance of the current object for chaining.\n   */\n  regularPoly(x, y, radius, sides, rotation = 0, transform) {\n    this._tick++;\n    this._activePath.regularPoly(x, y, radius, sides, rotation, transform);\n    return this;\n  }\n  /**\n   * Draws a polygon with rounded corners.\n   * Similar to `regularPoly` but with the ability to round the corners of the polygon.\n   * @param x - The x-coordinate of the center of the polygon.\n   * @param y - The y-coordinate of the center of the polygon.\n   * @param radius - The radius of the circumscribed circle of the polygon.\n   * @param sides - The number of sides of the polygon. Must be 3 or more.\n   * @param corner - The radius of the rounding of the corners.\n   * @param rotation - The rotation angle of the polygon, in radians. Zero by default.\n   * @returns The instance of the current object for chaining.\n   */\n  roundPoly(x, y, radius, sides, corner, rotation) {\n    this._tick++;\n    this._activePath.roundPoly(x, y, radius, sides, corner, rotation);\n    return this;\n  }\n  /**\n   * Draws a shape with rounded corners. This function supports custom radius for each corner of the shape.\n   * Optionally, corners can be rounded using a quadratic curve instead of an arc, providing a different aesthetic.\n   * @param points - An array of `RoundedPoint` representing the corners of the shape to draw.\n   * A minimum of 3 points is required.\n   * @param radius - The default radius for the corners.\n   * This radius is applied to all corners unless overridden in `points`.\n   * @param useQuadratic - If set to true, rounded corners are drawn using a quadraticCurve\n   *  method instead of an arc method. Defaults to false.\n   * @param smoothness - Specifies the smoothness of the curve when `useQuadratic` is true.\n   * Higher values make the curve smoother.\n   * @returns The instance of the current object for chaining.\n   */\n  roundShape(points, radius, useQuadratic, smoothness) {\n    this._tick++;\n    this._activePath.roundShape(points, radius, useQuadratic, smoothness);\n    return this;\n  }\n  /**\n   * Draw Rectangle with fillet corners. This is much like rounded rectangle\n   * however it support negative numbers as well for the corner radius.\n   * @param x - Upper left corner of rect\n   * @param y - Upper right corner of rect\n   * @param width - Width of rect\n   * @param height - Height of rect\n   * @param fillet - accept negative or positive values\n   */\n  filletRect(x, y, width, height, fillet) {\n    this._tick++;\n    this._activePath.filletRect(x, y, width, height, fillet);\n    return this;\n  }\n  /**\n   * Draw Rectangle with chamfer corners. These are angled corners.\n   * @param x - Upper left corner of rect\n   * @param y - Upper right corner of rect\n   * @param width - Width of rect\n   * @param height - Height of rect\n   * @param chamfer - non-zero real number, size of corner cutout\n   * @param transform\n   */\n  chamferRect(x, y, width, height, chamfer, transform) {\n    this._tick++;\n    this._activePath.chamferRect(x, y, width, height, chamfer, transform);\n    return this;\n  }\n  /**\n   * Draws a star shape centered at a specified location. This method allows for the creation\n   *  of stars with a variable number of points, outer radius, optional inner radius, and rotation.\n   * The star is drawn as a closed polygon with alternating outer and inner vertices to create the star's points.\n   * An optional transformation can be applied to scale, rotate, or translate the star as needed.\n   * @param x - The x-coordinate of the center of the star.\n   * @param y - The y-coordinate of the center of the star.\n   * @param points - The number of points of the star.\n   * @param radius - The outer radius of the star (distance from the center to the outer points).\n   * @param innerRadius - Optional. The inner radius of the star\n   * (distance from the center to the inner points between the outer points).\n   * If not provided, defaults to half of the `radius`.\n   * @param rotation - Optional. The rotation of the star in radians, where 0 is aligned with the y-axis.\n   * Defaults to 0, meaning one point is directly upward.\n   * @returns The instance of the current object for chaining further drawing commands.\n   */\n  star(x, y, points, radius, innerRadius = 0, rotation = 0) {\n    this._tick++;\n    this._activePath.star(x, y, points, radius, innerRadius, rotation, this._transform.clone());\n    return this;\n  }\n  /**\n   * Parses and renders an SVG string into the graphics context. This allows for complex shapes and paths\n   * defined in SVG format to be drawn within the graphics context.\n   * @param svg - The SVG string to be parsed and rendered.\n   */\n  svg(svg) {\n    this._tick++;\n    SVGParser(svg, this);\n    return this;\n  }\n  /**\n   * Restores the most recently saved graphics state by popping the top of the graphics state stack.\n   * This includes transformations, fill styles, and stroke styles.\n   */\n  restore() {\n    const state = this._stateStack.pop();\n    if (state) {\n      this._transform = state.transform;\n      this._fillStyle = state.fillStyle;\n      this._strokeStyle = state.strokeStyle;\n    }\n    return this;\n  }\n  /** Saves the current graphics state, including transformations, fill styles, and stroke styles, onto a stack. */\n  save() {\n    this._stateStack.push({\n      transform: this._transform.clone(),\n      fillStyle: { ...this._fillStyle },\n      strokeStyle: { ...this._strokeStyle }\n    });\n    return this;\n  }\n  /**\n   * Returns the current transformation matrix of the graphics context.\n   * @returns The current transformation matrix.\n   */\n  getTransform() {\n    return this._transform;\n  }\n  /**\n   * Resets the current transformation matrix to the identity matrix, effectively removing any transformations (rotation, scaling, translation) previously applied.\n   * @returns The instance of the current GraphicsContext for method chaining.\n   */\n  resetTransform() {\n    this._transform.identity();\n    return this;\n  }\n  /**\n   * Applies a rotation transformation to the graphics context around the current origin.\n   * @param angle - The angle of rotation in radians.\n   * @returns The instance of the current GraphicsContext for method chaining.\n   */\n  rotate(angle) {\n    this._transform.rotate(angle);\n    return this;\n  }\n  /**\n   * Applies a scaling transformation to the graphics context, scaling drawings by x horizontally and by y vertically.\n   * @param x - The scale factor in the horizontal direction.\n   * @param y - (Optional) The scale factor in the vertical direction. If not specified, the x value is used for both directions.\n   * @returns The instance of the current GraphicsContext for method chaining.\n   */\n  scale(x, y = x) {\n    this._transform.scale(x, y);\n    return this;\n  }\n  setTransform(a, b, c, d, dx, dy) {\n    if (a instanceof Matrix) {\n      this._transform.set(a.a, a.b, a.c, a.d, a.tx, a.ty);\n      return this;\n    }\n    this._transform.set(a, b, c, d, dx, dy);\n    return this;\n  }\n  transform(a, b, c, d, dx, dy) {\n    if (a instanceof Matrix) {\n      this._transform.append(a);\n      return this;\n    }\n    tempMatrix.set(a, b, c, d, dx, dy);\n    this._transform.append(tempMatrix);\n    return this;\n  }\n  /**\n   * Applies a translation transformation to the graphics context, moving the origin by the specified amounts.\n   * @param x - The amount to translate in the horizontal direction.\n   * @param y - (Optional) The amount to translate in the vertical direction. If not specified, the x value is used for both directions.\n   * @returns The instance of the current GraphicsContext for method chaining.\n   */\n  translate(x, y = x) {\n    this._transform.translate(x, y);\n    return this;\n  }\n  /**\n   * Clears all drawing commands from the graphics context, effectively resetting it. This includes clearing the path,\n   * and optionally resetting transformations to the identity matrix.\n   * @returns The instance of the current GraphicsContext for method chaining.\n   */\n  clear() {\n    this._activePath.clear();\n    this.instructions.length = 0;\n    this.resetTransform();\n    this.onUpdate();\n    return this;\n  }\n  onUpdate() {\n    if (this.dirty)\n      return;\n    this.emit(\"update\", this, 16);\n    this.dirty = true;\n    this._boundsDirty = true;\n  }\n  /** The bounds of the graphic shape. */\n  get bounds() {\n    if (!this._boundsDirty)\n      return this._bounds;\n    const bounds = this._bounds;\n    bounds.clear();\n    for (let i = 0; i < this.instructions.length; i++) {\n      const instruction = this.instructions[i];\n      const action = instruction.action;\n      if (action === \"fill\") {\n        const data = instruction.data;\n        bounds.addBounds(data.path.bounds);\n      } else if (action === \"texture\") {\n        const data = instruction.data;\n        bounds.addFrame(data.dx, data.dy, data.dx + data.dw, data.dy + data.dh, data.transform);\n      }\n      if (action === \"stroke\") {\n        const data = instruction.data;\n        const alignment = data.style.alignment;\n        const outerPadding = data.style.width * (1 - alignment);\n        const _bounds = data.path.bounds;\n        bounds.addFrame(\n          _bounds.minX - outerPadding,\n          _bounds.minY - outerPadding,\n          _bounds.maxX + outerPadding,\n          _bounds.maxY + outerPadding\n        );\n      }\n    }\n    return bounds;\n  }\n  /**\n   * Check to see if a point is contained within this geometry.\n   * @param point - Point to check if it's contained.\n   * @returns {boolean} `true` if the point is contained within geometry.\n   */\n  containsPoint(point) {\n    if (!this.bounds.containsPoint(point.x, point.y))\n      return false;\n    const instructions = this.instructions;\n    let hasHit = false;\n    for (let k = 0; k < instructions.length; k++) {\n      const instruction = instructions[k];\n      const data = instruction.data;\n      const path = data.path;\n      if (!instruction.action || !path)\n        continue;\n      const style = data.style;\n      const shapes = path.shapePath.shapePrimitives;\n      for (let i = 0; i < shapes.length; i++) {\n        const shape = shapes[i].shape;\n        if (!style || !shape)\n          continue;\n        const transform = shapes[i].transform;\n        const transformedPoint = transform ? transform.applyInverse(point, tmpPoint) : point;\n        if (instruction.action === \"fill\") {\n          hasHit = shape.contains(transformedPoint.x, transformedPoint.y);\n        } else {\n          const strokeStyle = style;\n          hasHit = shape.strokeContains(transformedPoint.x, transformedPoint.y, strokeStyle.width, strokeStyle.alignment);\n        }\n        const holes = data.hole;\n        if (holes) {\n          const holeShapes = holes.shapePath?.shapePrimitives;\n          if (holeShapes) {\n            for (let j = 0; j < holeShapes.length; j++) {\n              if (holeShapes[j].shape.contains(transformedPoint.x, transformedPoint.y)) {\n                hasHit = false;\n              }\n            }\n          }\n        }\n        if (hasHit) {\n          return true;\n        }\n      }\n    }\n    return hasHit;\n  }\n  /**\n   * Destroys the GraphicsData object.\n   * @param options - Options parameter. A boolean will act as if all options\n   *  have been set to that value\n   * @param {boolean} [options.texture=false] - Should it destroy the current texture of the fill/stroke style?\n   * @param {boolean} [options.textureSource=false] - Should it destroy the texture source of the fill/stroke style?\n   */\n  destroy(options = false) {\n    this._stateStack.length = 0;\n    this._transform = null;\n    this.emit(\"destroy\", this);\n    this.removeAllListeners();\n    const destroyTexture = typeof options === \"boolean\" ? options : options?.texture;\n    if (destroyTexture) {\n      const destroyTextureSource = typeof options === \"boolean\" ? options : options?.textureSource;\n      if (this._fillStyle.texture) {\n        this._fillStyle.texture.destroy(destroyTextureSource);\n      }\n      if (this._strokeStyle.texture) {\n        this._strokeStyle.texture.destroy(destroyTextureSource);\n      }\n    }\n    this._fillStyle = null;\n    this._strokeStyle = null;\n    this.instructions = null;\n    this._activePath = null;\n    this._bounds = null;\n    this._stateStack = null;\n    this.customShader = null;\n    this._transform = null;\n  }\n};\n/** The default fill style to use when none is provided. */\n_GraphicsContext.defaultFillStyle = {\n  /** The color to use for the fill. */\n  color: 16777215,\n  /** The alpha value to use for the fill. */\n  alpha: 1,\n  /** The texture to use for the fill. */\n  texture: Texture.WHITE,\n  /** The matrix to apply. */\n  matrix: null,\n  /** The fill pattern to use. */\n  fill: null\n};\n/** The default stroke style to use when none is provided. */\n_GraphicsContext.defaultStrokeStyle = {\n  /** The width of the stroke. */\n  width: 1,\n  /** The color to use for the stroke. */\n  color: 16777215,\n  /** The alpha value to use for the stroke. */\n  alpha: 1,\n  /** The alignment of the stroke. */\n  alignment: 0.5,\n  /** The miter limit to use. */\n  miterLimit: 10,\n  /** The line cap style to use. */\n  cap: \"butt\",\n  /** The line join style to use. */\n  join: \"miter\",\n  /** The texture to use for the fill. */\n  texture: Texture.WHITE,\n  /** The matrix to apply. */\n  matrix: null,\n  /** The fill pattern to use. */\n  fill: null,\n  /** If the stroke is a pixel line. */\n  pixelLine: false\n};\nlet GraphicsContext = _GraphicsContext;\n\nexport { GraphicsContext };\n//# sourceMappingURL=GraphicsContext.mjs.map\n","import { Color } from '../../../color/Color.mjs';\n\n\"use strict\";\nconst valuesToIterateForKeys = [\n  \"align\",\n  \"breakWords\",\n  \"cssOverrides\",\n  \"fontVariant\",\n  \"fontWeight\",\n  \"leading\",\n  \"letterSpacing\",\n  \"lineHeight\",\n  \"padding\",\n  \"textBaseline\",\n  \"trim\",\n  \"whiteSpace\",\n  \"wordWrap\",\n  \"wordWrapWidth\",\n  \"fontFamily\",\n  \"fontStyle\",\n  \"fontSize\"\n];\nfunction generateTextStyleKey(style) {\n  const key = [];\n  let index = 0;\n  for (let i = 0; i < valuesToIterateForKeys.length; i++) {\n    const prop = `_${valuesToIterateForKeys[i]}`;\n    key[index++] = style[prop];\n  }\n  index = addFillStyleKey(style._fill, key, index);\n  index = addStokeStyleKey(style._stroke, key, index);\n  index = addDropShadowKey(style.dropShadow, key, index);\n  return key.join(\"-\");\n}\nfunction addFillStyleKey(fillStyle, key, index) {\n  if (!fillStyle)\n    return index;\n  key[index++] = fillStyle.color;\n  key[index++] = fillStyle.alpha;\n  key[index++] = fillStyle.fill?.styleKey;\n  return index;\n}\nfunction addStokeStyleKey(strokeStyle, key, index) {\n  if (!strokeStyle)\n    return index;\n  index = addFillStyleKey(strokeStyle, key, index);\n  key[index++] = strokeStyle.width;\n  key[index++] = strokeStyle.alignment;\n  key[index++] = strokeStyle.cap;\n  key[index++] = strokeStyle.join;\n  key[index++] = strokeStyle.miterLimit;\n  return index;\n}\nfunction addDropShadowKey(dropShadow, key, index) {\n  if (!dropShadow)\n    return index;\n  key[index++] = dropShadow.alpha;\n  key[index++] = dropShadow.angle;\n  key[index++] = dropShadow.blur;\n  key[index++] = dropShadow.distance;\n  key[index++] = Color.shared.setValue(dropShadow.color).toNumber();\n  return index;\n}\n\nexport { generateTextStyleKey };\n//# sourceMappingURL=generateTextStyleKey.mjs.map\n","import EventEmitter from 'eventemitter3';\nimport { Color } from '../../color/Color.mjs';\nimport { deprecation, v8_0_0 } from '../../utils/logging/deprecation.mjs';\nimport { FillGradient } from '../graphics/shared/fill/FillGradient.mjs';\nimport { FillPattern } from '../graphics/shared/fill/FillPattern.mjs';\nimport { GraphicsContext } from '../graphics/shared/GraphicsContext.mjs';\nimport { toFillStyle, toStrokeStyle } from '../graphics/shared/utils/convertFillInputToFillStyle.mjs';\nimport { generateTextStyleKey } from './utils/generateTextStyleKey.mjs';\n\n\"use strict\";\nconst _TextStyle = class _TextStyle extends EventEmitter {\n  constructor(style = {}) {\n    super();\n    convertV7Tov8Style(style);\n    const fullStyle = { ..._TextStyle.defaultTextStyle, ...style };\n    for (const key in fullStyle) {\n      const thisKey = key;\n      this[thisKey] = fullStyle[key];\n    }\n    this.update();\n  }\n  /**\n   * Alignment for multiline text, does not affect single line text.\n   * @member {'left'|'center'|'right'|'justify'}\n   */\n  get align() {\n    return this._align;\n  }\n  set align(value) {\n    this._align = value;\n    this.update();\n  }\n  /** Indicates if lines can be wrapped within words, it needs wordWrap to be set to true. */\n  get breakWords() {\n    return this._breakWords;\n  }\n  set breakWords(value) {\n    this._breakWords = value;\n    this.update();\n  }\n  /** Set a drop shadow for the text. */\n  get dropShadow() {\n    return this._dropShadow;\n  }\n  set dropShadow(value) {\n    if (value !== null && typeof value === \"object\") {\n      this._dropShadow = this._createProxy({ ..._TextStyle.defaultDropShadow, ...value });\n    } else {\n      this._dropShadow = value ? this._createProxy({ ..._TextStyle.defaultDropShadow }) : null;\n    }\n    this.update();\n  }\n  /** The font family, can be a single font name, or a list of names where the first is the preferred font. */\n  get fontFamily() {\n    return this._fontFamily;\n  }\n  set fontFamily(value) {\n    this._fontFamily = value;\n    this.update();\n  }\n  /** The font size (as a number it converts to px, but as a string, equivalents are '26px','20pt','160%' or '1.6em') */\n  get fontSize() {\n    return this._fontSize;\n  }\n  set fontSize(value) {\n    if (typeof value === \"string\") {\n      this._fontSize = parseInt(value, 10);\n    } else {\n      this._fontSize = value;\n    }\n    this.update();\n  }\n  /**\n   * The font style.\n   * @member {'normal'|'italic'|'oblique'}\n   */\n  get fontStyle() {\n    return this._fontStyle;\n  }\n  set fontStyle(value) {\n    this._fontStyle = value.toLowerCase();\n    this.update();\n  }\n  /**\n   * The font variant.\n   * @member {'normal'|'small-caps'}\n   */\n  get fontVariant() {\n    return this._fontVariant;\n  }\n  set fontVariant(value) {\n    this._fontVariant = value;\n    this.update();\n  }\n  /**\n   * The font weight.\n   * @member {'normal'|'bold'|'bolder'|'lighter'|'100'|'200'|'300'|'400'|'500'|'600'|'700'|'800'|'900'}\n   */\n  get fontWeight() {\n    return this._fontWeight;\n  }\n  set fontWeight(value) {\n    this._fontWeight = value;\n    this.update();\n  }\n  /** The space between lines. */\n  get leading() {\n    return this._leading;\n  }\n  set leading(value) {\n    this._leading = value;\n    this.update();\n  }\n  /** The amount of spacing between letters, default is 0. */\n  get letterSpacing() {\n    return this._letterSpacing;\n  }\n  set letterSpacing(value) {\n    this._letterSpacing = value;\n    this.update();\n  }\n  /** The line height, a number that represents the vertical space that a letter uses. */\n  get lineHeight() {\n    return this._lineHeight;\n  }\n  set lineHeight(value) {\n    this._lineHeight = value;\n    this.update();\n  }\n  /**\n   * Occasionally some fonts are cropped. Adding some padding will prevent this from happening\n   * by adding padding to all sides of the text.\n   */\n  get padding() {\n    return this._padding;\n  }\n  set padding(value) {\n    this._padding = value;\n    this.update();\n  }\n  /** Trim transparent borders. This is an expensive operation so only use this if you have to! */\n  get trim() {\n    return this._trim;\n  }\n  set trim(value) {\n    this._trim = value;\n    this.update();\n  }\n  /**\n   * The baseline of the text that is rendered.\n   * @member {'alphabetic'|'top'|'hanging'|'middle'|'ideographic'|'bottom'}\n   */\n  get textBaseline() {\n    return this._textBaseline;\n  }\n  set textBaseline(value) {\n    this._textBaseline = value;\n    this.update();\n  }\n  /**\n   * How newlines and spaces should be handled.\n   * Default is 'pre' (preserve, preserve).\n   *\n   *  value       | New lines     |   Spaces\n   *  ---         | ---           |   ---\n   * 'normal'     | Collapse      |   Collapse\n   * 'pre'        | Preserve      |   Preserve\n   * 'pre-line'   | Preserve      |   Collapse\n   * @member {'normal'|'pre'|'pre-line'}\n   */\n  get whiteSpace() {\n    return this._whiteSpace;\n  }\n  set whiteSpace(value) {\n    this._whiteSpace = value;\n    this.update();\n  }\n  /** Indicates if word wrap should be used. */\n  get wordWrap() {\n    return this._wordWrap;\n  }\n  set wordWrap(value) {\n    this._wordWrap = value;\n    this.update();\n  }\n  /** The width at which text will wrap, it needs wordWrap to be set to true. */\n  get wordWrapWidth() {\n    return this._wordWrapWidth;\n  }\n  set wordWrapWidth(value) {\n    this._wordWrapWidth = value;\n    this.update();\n  }\n  /** A fillstyle that will be used on the text e.g., 'red', '#00FF00'. */\n  get fill() {\n    return this._originalFill;\n  }\n  set fill(value) {\n    if (value === this._originalFill)\n      return;\n    this._originalFill = value;\n    if (this._isFillStyle(value)) {\n      this._originalFill = this._createProxy({ ...GraphicsContext.defaultFillStyle, ...value }, () => {\n        this._fill = toFillStyle(\n          { ...this._originalFill },\n          GraphicsContext.defaultFillStyle\n        );\n      });\n    }\n    this._fill = toFillStyle(\n      value === 0 ? \"black\" : value,\n      GraphicsContext.defaultFillStyle\n    );\n    this.update();\n  }\n  /** A fillstyle that will be used on the text stroke, e.g., 'blue', '#FCFF00'. */\n  get stroke() {\n    return this._originalStroke;\n  }\n  set stroke(value) {\n    if (value === this._originalStroke)\n      return;\n    this._originalStroke = value;\n    if (this._isFillStyle(value)) {\n      this._originalStroke = this._createProxy({ ...GraphicsContext.defaultStrokeStyle, ...value }, () => {\n        this._stroke = toStrokeStyle(\n          { ...this._originalStroke },\n          GraphicsContext.defaultStrokeStyle\n        );\n      });\n    }\n    this._stroke = toStrokeStyle(value, GraphicsContext.defaultStrokeStyle);\n    this.update();\n  }\n  _generateKey() {\n    this._styleKey = generateTextStyleKey(this);\n    return this._styleKey;\n  }\n  update() {\n    this._styleKey = null;\n    this.emit(\"update\", this);\n  }\n  /** Resets all properties to the default values */\n  reset() {\n    const defaultStyle = _TextStyle.defaultTextStyle;\n    for (const key in defaultStyle) {\n      this[key] = defaultStyle[key];\n    }\n  }\n  get styleKey() {\n    return this._styleKey || this._generateKey();\n  }\n  /**\n   * Creates a new TextStyle object with the same values as this one.\n   * @returns New cloned TextStyle object\n   */\n  clone() {\n    return new _TextStyle({\n      align: this.align,\n      breakWords: this.breakWords,\n      dropShadow: this._dropShadow ? { ...this._dropShadow } : null,\n      fill: this._fill,\n      fontFamily: this.fontFamily,\n      fontSize: this.fontSize,\n      fontStyle: this.fontStyle,\n      fontVariant: this.fontVariant,\n      fontWeight: this.fontWeight,\n      leading: this.leading,\n      letterSpacing: this.letterSpacing,\n      lineHeight: this.lineHeight,\n      padding: this.padding,\n      stroke: this._stroke,\n      textBaseline: this.textBaseline,\n      whiteSpace: this.whiteSpace,\n      wordWrap: this.wordWrap,\n      wordWrapWidth: this.wordWrapWidth\n    });\n  }\n  /**\n   * Destroys this text style.\n   * @param options - Options parameter. A boolean will act as if all options\n   *  have been set to that value\n   * @param {boolean} [options.texture=false] - Should it destroy the texture of the this style\n   * @param {boolean} [options.textureSource=false] - Should it destroy the textureSource of the this style\n   */\n  destroy(options = false) {\n    this.removeAllListeners();\n    const destroyTexture = typeof options === \"boolean\" ? options : options?.texture;\n    if (destroyTexture) {\n      const destroyTextureSource = typeof options === \"boolean\" ? options : options?.textureSource;\n      if (this._fill?.texture) {\n        this._fill.texture.destroy(destroyTextureSource);\n      }\n      if (this._originalFill?.texture) {\n        this._originalFill.texture.destroy(destroyTextureSource);\n      }\n      if (this._stroke?.texture) {\n        this._stroke.texture.destroy(destroyTextureSource);\n      }\n      if (this._originalStroke?.texture) {\n        this._originalStroke.texture.destroy(destroyTextureSource);\n      }\n    }\n    this._fill = null;\n    this._stroke = null;\n    this.dropShadow = null;\n    this._originalStroke = null;\n    this._originalFill = null;\n  }\n  _createProxy(value, cb) {\n    return new Proxy(value, {\n      set: (target, property, newValue) => {\n        target[property] = newValue;\n        cb?.(property, newValue);\n        this.update();\n        return true;\n      }\n    });\n  }\n  _isFillStyle(value) {\n    return (value ?? null) !== null && !(Color.isColorLike(value) || value instanceof FillGradient || value instanceof FillPattern);\n  }\n};\n/** The default drop shadow settings */\n_TextStyle.defaultDropShadow = {\n  /** Set alpha for the drop shadow */\n  alpha: 1,\n  /** Set a angle of the drop shadow */\n  angle: Math.PI / 6,\n  /** Set a shadow blur radius */\n  blur: 0,\n  /** A fill style to be used on the  e.g., 'red', '#00FF00' */\n  color: \"black\",\n  /** Set a distance of the drop shadow */\n  distance: 5\n};\n/** The default text style settings */\n_TextStyle.defaultTextStyle = {\n  /**\n   * See {@link TextStyle.align}\n   * @type {'left'|'center'|'right'|'justify'}\n   */\n  align: \"left\",\n  /** See {@link TextStyle.breakWords} */\n  breakWords: false,\n  /** See {@link TextStyle.dropShadow} */\n  dropShadow: null,\n  /**\n   * See {@link TextStyle.fill}\n   * @type {string|string[]|number|number[]|CanvasGradient|CanvasPattern}\n   */\n  fill: \"black\",\n  /**\n   * See {@link TextStyle.fontFamily}\n   * @type {string|string[]}\n   */\n  fontFamily: \"Arial\",\n  /**\n   * See {@link TextStyle.fontSize}\n   * @type {number|string}\n   */\n  fontSize: 26,\n  /**\n   * See {@link TextStyle.fontStyle}\n   * @type {'normal'|'italic'|'oblique'}\n   */\n  fontStyle: \"normal\",\n  /**\n   * See {@link TextStyle.fontVariant}\n   * @type {'normal'|'small-caps'}\n   */\n  fontVariant: \"normal\",\n  /**\n   * See {@link TextStyle.fontWeight}\n   * @type {'normal'|'bold'|'bolder'|'lighter'|'100'|'200'|'300'|'400'|'500'|'600'|'700'|'800'|'900'}\n   */\n  fontWeight: \"normal\",\n  /** See {@link TextStyle.leading} */\n  leading: 0,\n  /** See {@link TextStyle.letterSpacing} */\n  letterSpacing: 0,\n  /** See {@link TextStyle.lineHeight} */\n  lineHeight: 0,\n  /** See {@link TextStyle.padding} */\n  padding: 0,\n  /**\n   * See {@link TextStyle.stroke}\n   * @type {string|number}\n   */\n  stroke: null,\n  /**\n   * See {@link TextStyle.textBaseline}\n   * @type {'alphabetic'|'top'|'hanging'|'middle'|'ideographic'|'bottom'}\n   */\n  textBaseline: \"alphabetic\",\n  /** See {@link TextStyle.trim} */\n  trim: false,\n  /**\n   * See {@link TextStyle.whiteSpace}\n   * @type {'normal'|'pre'|'pre-line'}\n   */\n  whiteSpace: \"pre\",\n  /** See {@link TextStyle.wordWrap} */\n  wordWrap: false,\n  /** See {@link TextStyle.wordWrapWidth} */\n  wordWrapWidth: 100\n};\nlet TextStyle = _TextStyle;\nfunction convertV7Tov8Style(style) {\n  const oldStyle = style;\n  if (typeof oldStyle.dropShadow === \"boolean\" && oldStyle.dropShadow) {\n    const defaults = TextStyle.defaultDropShadow;\n    style.dropShadow = {\n      alpha: oldStyle.dropShadowAlpha ?? defaults.alpha,\n      angle: oldStyle.dropShadowAngle ?? defaults.angle,\n      blur: oldStyle.dropShadowBlur ?? defaults.blur,\n      color: oldStyle.dropShadowColor ?? defaults.color,\n      distance: oldStyle.dropShadowDistance ?? defaults.distance\n    };\n  }\n  if (oldStyle.strokeThickness !== void 0) {\n    deprecation(v8_0_0, \"strokeThickness is now a part of stroke\");\n    const color = oldStyle.stroke;\n    let obj = {};\n    if (Color.isColorLike(color)) {\n      obj.color = color;\n    } else if (color instanceof FillGradient || color instanceof FillPattern) {\n      obj.fill = color;\n    } else if (Object.hasOwnProperty.call(color, \"color\") || Object.hasOwnProperty.call(color, \"fill\")) {\n      obj = color;\n    } else {\n      throw new Error(\"Invalid stroke value.\");\n    }\n    style.stroke = {\n      ...obj,\n      width: oldStyle.strokeThickness\n    };\n  }\n  if (Array.isArray(oldStyle.fillGradientStops)) {\n    deprecation(v8_0_0, \"gradient fill is now a fill pattern: `new FillGradient(...)`\");\n    let fontSize;\n    if (style.fontSize == null) {\n      style.fontSize = TextStyle.defaultTextStyle.fontSize;\n    } else if (typeof style.fontSize === \"string\") {\n      fontSize = parseInt(style.fontSize, 10);\n    } else {\n      fontSize = style.fontSize;\n    }\n    const gradientFill = new FillGradient(0, 0, 0, fontSize * 1.7);\n    const fills = oldStyle.fillGradientStops.map((color) => Color.shared.setValue(color).toNumber());\n    fills.forEach((number, index) => {\n      const ratio = index / (fills.length - 1);\n      gradientFill.addColorStop(ratio, number);\n    });\n    style.fill = {\n      fill: gradientFill\n    };\n  }\n}\n\nexport { TextStyle };\n//# sourceMappingURL=TextStyle.mjs.map\n","import { DOMAdapter } from '../../../../environment/adapter.mjs';\nimport { nextPow2 } from '../../../../maths/misc/pow2.mjs';\n\n\"use strict\";\nclass CanvasPoolClass {\n  constructor(canvasOptions) {\n    this._canvasPool = /* @__PURE__ */ Object.create(null);\n    this.canvasOptions = canvasOptions || {};\n    this.enableFullScreen = false;\n  }\n  /**\n   * Creates texture with params that were specified in pool constructor.\n   * @param pixelWidth - Width of texture in pixels.\n   * @param pixelHeight - Height of texture in pixels.\n   */\n  _createCanvasAndContext(pixelWidth, pixelHeight) {\n    const canvas = DOMAdapter.get().createCanvas();\n    canvas.width = pixelWidth;\n    canvas.height = pixelHeight;\n    const context = canvas.getContext(\"2d\");\n    return { canvas, context };\n  }\n  /**\n   * Gets a Power-of-Two render texture or fullScreen texture\n   * @param minWidth - The minimum width of the render texture.\n   * @param minHeight - The minimum height of the render texture.\n   * @param resolution - The resolution of the render texture.\n   * @returns The new render texture.\n   */\n  getOptimalCanvasAndContext(minWidth, minHeight, resolution = 1) {\n    minWidth = Math.ceil(minWidth * resolution - 1e-6);\n    minHeight = Math.ceil(minHeight * resolution - 1e-6);\n    minWidth = nextPow2(minWidth);\n    minHeight = nextPow2(minHeight);\n    const key = (minWidth << 17) + (minHeight << 1);\n    if (!this._canvasPool[key]) {\n      this._canvasPool[key] = [];\n    }\n    let canvasAndContext = this._canvasPool[key].pop();\n    if (!canvasAndContext) {\n      canvasAndContext = this._createCanvasAndContext(minWidth, minHeight);\n    }\n    return canvasAndContext;\n  }\n  /**\n   * Place a render texture back into the pool.\n   * @param canvasAndContext\n   */\n  returnCanvasAndContext(canvasAndContext) {\n    const canvas = canvasAndContext.canvas;\n    const { width, height } = canvas;\n    const key = (width << 17) + (height << 1);\n    canvasAndContext.context.clearRect(0, 0, width, height);\n    this._canvasPool[key].push(canvasAndContext);\n  }\n  clear() {\n    this._canvasPool = {};\n  }\n}\nconst CanvasPool = new CanvasPoolClass();\n\nexport { CanvasPool, CanvasPoolClass };\n//# sourceMappingURL=CanvasPool.mjs.map\n","\"use strict\";\nconst genericFontFamilies = [\n  \"serif\",\n  \"sans-serif\",\n  \"monospace\",\n  \"cursive\",\n  \"fantasy\",\n  \"system-ui\"\n];\nfunction fontStringFromTextStyle(style) {\n  const fontSizeString = typeof style.fontSize === \"number\" ? `${style.fontSize}px` : style.fontSize;\n  let fontFamilies = style.fontFamily;\n  if (!Array.isArray(style.fontFamily)) {\n    fontFamilies = style.fontFamily.split(\",\");\n  }\n  for (let i = fontFamilies.length - 1; i >= 0; i--) {\n    let fontFamily = fontFamilies[i].trim();\n    if (!/([\\\"\\'])[^\\'\\\"]+\\1/.test(fontFamily) && !genericFontFamilies.includes(fontFamily)) {\n      fontFamily = `\"${fontFamily}\"`;\n    }\n    fontFamilies[i] = fontFamily;\n  }\n  return `${style.fontStyle} ${style.fontVariant} ${style.fontWeight} ${fontSizeString} ${fontFamilies.join(\",\")}`;\n}\n\nexport { fontStringFromTextStyle };\n//# sourceMappingURL=fontStringFromTextStyle.mjs.map\n","import { DOMAdapter } from '../../../environment/adapter.mjs';\nimport { fontStringFromTextStyle } from './utils/fontStringFromTextStyle.mjs';\n\n\"use strict\";\nconst contextSettings = {\n  // TextMetrics requires getImageData readback for measuring fonts.\n  willReadFrequently: true\n};\nconst _CanvasTextMetrics = class _CanvasTextMetrics {\n  /**\n   * Checking that we can use modern canvas 2D API.\n   *\n   * Note: This is an unstable API, Chrome < 94 use `textLetterSpacing`, later versions use `letterSpacing`.\n   * @see TextMetrics.experimentalLetterSpacing\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/ICanvasRenderingContext2D/letterSpacing\n   * @see https://developer.chrome.com/origintrials/#/view_trial/3585991203293757441\n   */\n  static get experimentalLetterSpacingSupported() {\n    let result = _CanvasTextMetrics._experimentalLetterSpacingSupported;\n    if (result !== void 0) {\n      const proto = DOMAdapter.get().getCanvasRenderingContext2D().prototype;\n      result = _CanvasTextMetrics._experimentalLetterSpacingSupported = \"letterSpacing\" in proto || \"textLetterSpacing\" in proto;\n    }\n    return result;\n  }\n  /**\n   * @param text - the text that was measured\n   * @param style - the style that was measured\n   * @param width - the measured width of the text\n   * @param height - the measured height of the text\n   * @param lines - an array of the lines of text broken by new lines and wrapping if specified in style\n   * @param lineWidths - an array of the line widths for each line matched to `lines`\n   * @param lineHeight - the measured line height for this style\n   * @param maxLineWidth - the maximum line width for all measured lines\n   * @param {FontMetrics} fontProperties - the font properties object from TextMetrics.measureFont\n   */\n  constructor(text, style, width, height, lines, lineWidths, lineHeight, maxLineWidth, fontProperties) {\n    this.text = text;\n    this.style = style;\n    this.width = width;\n    this.height = height;\n    this.lines = lines;\n    this.lineWidths = lineWidths;\n    this.lineHeight = lineHeight;\n    this.maxLineWidth = maxLineWidth;\n    this.fontProperties = fontProperties;\n  }\n  /**\n   * Measures the supplied string of text and returns a Rectangle.\n   * @param text - The text to measure.\n   * @param style - The text style to use for measuring\n   * @param canvas - optional specification of the canvas to use for measuring.\n   * @param wordWrap\n   * @returns Measured width and height of the text.\n   */\n  static measureText(text = \" \", style, canvas = _CanvasTextMetrics._canvas, wordWrap = style.wordWrap) {\n    const textKey = `${text}:${style.styleKey}`;\n    if (_CanvasTextMetrics._measurementCache[textKey])\n      return _CanvasTextMetrics._measurementCache[textKey];\n    const font = fontStringFromTextStyle(style);\n    const fontProperties = _CanvasTextMetrics.measureFont(font);\n    if (fontProperties.fontSize === 0) {\n      fontProperties.fontSize = style.fontSize;\n      fontProperties.ascent = style.fontSize;\n    }\n    const context = _CanvasTextMetrics.__context;\n    context.font = font;\n    const outputText = wordWrap ? _CanvasTextMetrics._wordWrap(text, style, canvas) : text;\n    const lines = outputText.split(/(?:\\r\\n|\\r|\\n)/);\n    const lineWidths = new Array(lines.length);\n    let maxLineWidth = 0;\n    for (let i = 0; i < lines.length; i++) {\n      const lineWidth = _CanvasTextMetrics._measureText(lines[i], style.letterSpacing, context);\n      lineWidths[i] = lineWidth;\n      maxLineWidth = Math.max(maxLineWidth, lineWidth);\n    }\n    const strokeWidth = style._stroke?.width || 0;\n    let width = maxLineWidth + strokeWidth;\n    if (style.dropShadow) {\n      width += style.dropShadow.distance;\n    }\n    const lineHeight = style.lineHeight || fontProperties.fontSize;\n    let height = Math.max(lineHeight, fontProperties.fontSize + strokeWidth) + (lines.length - 1) * (lineHeight + style.leading);\n    if (style.dropShadow) {\n      height += style.dropShadow.distance;\n    }\n    const measurements = new _CanvasTextMetrics(\n      text,\n      style,\n      width,\n      height,\n      lines,\n      lineWidths,\n      lineHeight + style.leading,\n      maxLineWidth,\n      fontProperties\n    );\n    return measurements;\n  }\n  static _measureText(text, letterSpacing, context) {\n    let useExperimentalLetterSpacing = false;\n    if (_CanvasTextMetrics.experimentalLetterSpacingSupported) {\n      if (_CanvasTextMetrics.experimentalLetterSpacing) {\n        context.letterSpacing = `${letterSpacing}px`;\n        context.textLetterSpacing = `${letterSpacing}px`;\n        useExperimentalLetterSpacing = true;\n      } else {\n        context.letterSpacing = \"0px\";\n        context.textLetterSpacing = \"0px\";\n      }\n    }\n    const metrics = context.measureText(text);\n    let metricWidth = metrics.width;\n    const actualBoundingBoxLeft = -metrics.actualBoundingBoxLeft;\n    const actualBoundingBoxRight = metrics.actualBoundingBoxRight;\n    let boundsWidth = actualBoundingBoxRight - actualBoundingBoxLeft;\n    if (metricWidth > 0) {\n      if (useExperimentalLetterSpacing) {\n        metricWidth -= letterSpacing;\n        boundsWidth -= letterSpacing;\n      } else {\n        const val = (_CanvasTextMetrics.graphemeSegmenter(text).length - 1) * letterSpacing;\n        metricWidth += val;\n        boundsWidth += val;\n      }\n    }\n    return Math.max(metricWidth, boundsWidth);\n  }\n  /**\n   * Applies newlines to a string to have it optimally fit into the horizontal\n   * bounds set by the Text object's wordWrapWidth property.\n   * @param text - String to apply word wrapping to\n   * @param style - the style to use when wrapping\n   * @param canvas - optional specification of the canvas to use for measuring.\n   * @returns New string with new lines applied where required\n   */\n  static _wordWrap(text, style, canvas = _CanvasTextMetrics._canvas) {\n    const context = canvas.getContext(\"2d\", contextSettings);\n    let width = 0;\n    let line = \"\";\n    let lines = \"\";\n    const cache = /* @__PURE__ */ Object.create(null);\n    const { letterSpacing, whiteSpace } = style;\n    const collapseSpaces = _CanvasTextMetrics._collapseSpaces(whiteSpace);\n    const collapseNewlines = _CanvasTextMetrics._collapseNewlines(whiteSpace);\n    let canPrependSpaces = !collapseSpaces;\n    const wordWrapWidth = style.wordWrapWidth + letterSpacing;\n    const tokens = _CanvasTextMetrics._tokenize(text);\n    for (let i = 0; i < tokens.length; i++) {\n      let token = tokens[i];\n      if (_CanvasTextMetrics._isNewline(token)) {\n        if (!collapseNewlines) {\n          lines += _CanvasTextMetrics._addLine(line);\n          canPrependSpaces = !collapseSpaces;\n          line = \"\";\n          width = 0;\n          continue;\n        }\n        token = \" \";\n      }\n      if (collapseSpaces) {\n        const currIsBreakingSpace = _CanvasTextMetrics.isBreakingSpace(token);\n        const lastIsBreakingSpace = _CanvasTextMetrics.isBreakingSpace(line[line.length - 1]);\n        if (currIsBreakingSpace && lastIsBreakingSpace) {\n          continue;\n        }\n      }\n      const tokenWidth = _CanvasTextMetrics._getFromCache(token, letterSpacing, cache, context);\n      if (tokenWidth > wordWrapWidth) {\n        if (line !== \"\") {\n          lines += _CanvasTextMetrics._addLine(line);\n          line = \"\";\n          width = 0;\n        }\n        if (_CanvasTextMetrics.canBreakWords(token, style.breakWords)) {\n          const characters = _CanvasTextMetrics.wordWrapSplit(token);\n          for (let j = 0; j < characters.length; j++) {\n            let char = characters[j];\n            let lastChar = char;\n            let k = 1;\n            while (characters[j + k]) {\n              const nextChar = characters[j + k];\n              if (!_CanvasTextMetrics.canBreakChars(lastChar, nextChar, token, j, style.breakWords)) {\n                char += nextChar;\n              } else {\n                break;\n              }\n              lastChar = nextChar;\n              k++;\n            }\n            j += k - 1;\n            const characterWidth = _CanvasTextMetrics._getFromCache(char, letterSpacing, cache, context);\n            if (characterWidth + width > wordWrapWidth) {\n              lines += _CanvasTextMetrics._addLine(line);\n              canPrependSpaces = false;\n              line = \"\";\n              width = 0;\n            }\n            line += char;\n            width += characterWidth;\n          }\n        } else {\n          if (line.length > 0) {\n            lines += _CanvasTextMetrics._addLine(line);\n            line = \"\";\n            width = 0;\n          }\n          const isLastToken = i === tokens.length - 1;\n          lines += _CanvasTextMetrics._addLine(token, !isLastToken);\n          canPrependSpaces = false;\n          line = \"\";\n          width = 0;\n        }\n      } else {\n        if (tokenWidth + width > wordWrapWidth) {\n          canPrependSpaces = false;\n          lines += _CanvasTextMetrics._addLine(line);\n          line = \"\";\n          width = 0;\n        }\n        if (line.length > 0 || !_CanvasTextMetrics.isBreakingSpace(token) || canPrependSpaces) {\n          line += token;\n          width += tokenWidth;\n        }\n      }\n    }\n    lines += _CanvasTextMetrics._addLine(line, false);\n    return lines;\n  }\n  /**\n   * Convenience function for logging each line added during the wordWrap method.\n   * @param line    - The line of text to add\n   * @param newLine - Add new line character to end\n   * @returns A formatted line\n   */\n  static _addLine(line, newLine = true) {\n    line = _CanvasTextMetrics._trimRight(line);\n    line = newLine ? `${line}\n` : line;\n    return line;\n  }\n  /**\n   * Gets & sets the widths of calculated characters in a cache object\n   * @param key            - The key\n   * @param letterSpacing  - The letter spacing\n   * @param cache          - The cache\n   * @param context        - The canvas context\n   * @returns The from cache.\n   */\n  static _getFromCache(key, letterSpacing, cache, context) {\n    let width = cache[key];\n    if (typeof width !== \"number\") {\n      width = _CanvasTextMetrics._measureText(key, letterSpacing, context) + letterSpacing;\n      cache[key] = width;\n    }\n    return width;\n  }\n  /**\n   * Determines whether we should collapse breaking spaces.\n   * @param whiteSpace - The TextStyle property whiteSpace\n   * @returns Should collapse\n   */\n  static _collapseSpaces(whiteSpace) {\n    return whiteSpace === \"normal\" || whiteSpace === \"pre-line\";\n  }\n  /**\n   * Determines whether we should collapse newLine chars.\n   * @param whiteSpace - The white space\n   * @returns should collapse\n   */\n  static _collapseNewlines(whiteSpace) {\n    return whiteSpace === \"normal\";\n  }\n  /**\n   * Trims breaking whitespaces from string.\n   * @param text - The text\n   * @returns Trimmed string\n   */\n  static _trimRight(text) {\n    if (typeof text !== \"string\") {\n      return \"\";\n    }\n    for (let i = text.length - 1; i >= 0; i--) {\n      const char = text[i];\n      if (!_CanvasTextMetrics.isBreakingSpace(char)) {\n        break;\n      }\n      text = text.slice(0, -1);\n    }\n    return text;\n  }\n  /**\n   * Determines if char is a newline.\n   * @param char - The character\n   * @returns True if newline, False otherwise.\n   */\n  static _isNewline(char) {\n    if (typeof char !== \"string\") {\n      return false;\n    }\n    return _CanvasTextMetrics._newlines.includes(char.charCodeAt(0));\n  }\n  /**\n   * Determines if char is a breaking whitespace.\n   *\n   * It allows one to determine whether char should be a breaking whitespace\n   * For example certain characters in CJK langs or numbers.\n   * It must return a boolean.\n   * @param char - The character\n   * @param [_nextChar] - The next character\n   * @returns True if whitespace, False otherwise.\n   */\n  static isBreakingSpace(char, _nextChar) {\n    if (typeof char !== \"string\") {\n      return false;\n    }\n    return _CanvasTextMetrics._breakingSpaces.includes(char.charCodeAt(0));\n  }\n  /**\n   * Splits a string into words, breaking-spaces and newLine characters\n   * @param text - The text\n   * @returns A tokenized array\n   */\n  static _tokenize(text) {\n    const tokens = [];\n    let token = \"\";\n    if (typeof text !== \"string\") {\n      return tokens;\n    }\n    for (let i = 0; i < text.length; i++) {\n      const char = text[i];\n      const nextChar = text[i + 1];\n      if (_CanvasTextMetrics.isBreakingSpace(char, nextChar) || _CanvasTextMetrics._isNewline(char)) {\n        if (token !== \"\") {\n          tokens.push(token);\n          token = \"\";\n        }\n        tokens.push(char);\n        continue;\n      }\n      token += char;\n    }\n    if (token !== \"\") {\n      tokens.push(token);\n    }\n    return tokens;\n  }\n  /**\n   * Overridable helper method used internally by TextMetrics, exposed to allow customizing the class's behavior.\n   *\n   * It allows one to customise which words should break\n   * Examples are if the token is CJK or numbers.\n   * It must return a boolean.\n   * @param _token - The token\n   * @param breakWords - The style attr break words\n   * @returns Whether to break word or not\n   */\n  static canBreakWords(_token, breakWords) {\n    return breakWords;\n  }\n  /**\n   * Overridable helper method used internally by TextMetrics, exposed to allow customizing the class's behavior.\n   *\n   * It allows one to determine whether a pair of characters\n   * should be broken by newlines\n   * For example certain characters in CJK langs or numbers.\n   * It must return a boolean.\n   * @param _char - The character\n   * @param _nextChar - The next character\n   * @param _token - The token/word the characters are from\n   * @param _index - The index in the token of the char\n   * @param _breakWords - The style attr break words\n   * @returns whether to break word or not\n   */\n  static canBreakChars(_char, _nextChar, _token, _index, _breakWords) {\n    return true;\n  }\n  /**\n   * Overridable helper method used internally by TextMetrics, exposed to allow customizing the class's behavior.\n   *\n   * It is called when a token (usually a word) has to be split into separate pieces\n   * in order to determine the point to break a word.\n   * It must return an array of characters.\n   * @param token - The token to split\n   * @returns The characters of the token\n   * @see CanvasTextMetrics.graphemeSegmenter\n   */\n  static wordWrapSplit(token) {\n    return _CanvasTextMetrics.graphemeSegmenter(token);\n  }\n  /**\n   * Calculates the ascent, descent and fontSize of a given font-style\n   * @param font - String representing the style of the font\n   * @returns Font properties object\n   */\n  static measureFont(font) {\n    if (_CanvasTextMetrics._fonts[font]) {\n      return _CanvasTextMetrics._fonts[font];\n    }\n    const context = _CanvasTextMetrics._context;\n    context.font = font;\n    const metrics = context.measureText(_CanvasTextMetrics.METRICS_STRING + _CanvasTextMetrics.BASELINE_SYMBOL);\n    const properties = {\n      ascent: metrics.actualBoundingBoxAscent,\n      descent: metrics.actualBoundingBoxDescent,\n      fontSize: metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent\n    };\n    _CanvasTextMetrics._fonts[font] = properties;\n    return properties;\n  }\n  /**\n   * Clear font metrics in metrics cache.\n   * @param {string} [font] - font name. If font name not set then clear cache for all fonts.\n   */\n  static clearMetrics(font = \"\") {\n    if (font) {\n      delete _CanvasTextMetrics._fonts[font];\n    } else {\n      _CanvasTextMetrics._fonts = {};\n    }\n  }\n  /**\n   * Cached canvas element for measuring text\n   * TODO: this should be private, but isn't because of backward compat, will fix later.\n   * @ignore\n   */\n  static get _canvas() {\n    if (!_CanvasTextMetrics.__canvas) {\n      let canvas;\n      try {\n        const c = new OffscreenCanvas(0, 0);\n        const context = c.getContext(\"2d\", contextSettings);\n        if (context?.measureText) {\n          _CanvasTextMetrics.__canvas = c;\n          return c;\n        }\n        canvas = DOMAdapter.get().createCanvas();\n      } catch (_cx) {\n        canvas = DOMAdapter.get().createCanvas();\n      }\n      canvas.width = canvas.height = 10;\n      _CanvasTextMetrics.__canvas = canvas;\n    }\n    return _CanvasTextMetrics.__canvas;\n  }\n  /**\n   * TODO: this should be private, but isn't because of backward compat, will fix later.\n   * @ignore\n   */\n  static get _context() {\n    if (!_CanvasTextMetrics.__context) {\n      _CanvasTextMetrics.__context = _CanvasTextMetrics._canvas.getContext(\"2d\", contextSettings);\n    }\n    return _CanvasTextMetrics.__context;\n  }\n};\n/**\n * String used for calculate font metrics.\n * These characters are all tall to help calculate the height required for text.\n */\n_CanvasTextMetrics.METRICS_STRING = \"|\\xC9q\\xC5\";\n/** Baseline symbol for calculate font metrics. */\n_CanvasTextMetrics.BASELINE_SYMBOL = \"M\";\n/** Baseline multiplier for calculate font metrics. */\n_CanvasTextMetrics.BASELINE_MULTIPLIER = 1.4;\n/** Height multiplier for setting height of canvas to calculate font metrics. */\n_CanvasTextMetrics.HEIGHT_MULTIPLIER = 2;\n/**\n * A Unicode \"character\", or \"grapheme cluster\", can be composed of multiple Unicode code points,\n * such as letters with diacritical marks (e.g. `'\\u0065\\u0301'`, letter e with acute)\n * or emojis with modifiers (e.g. `'\\uD83E\\uDDD1\\u200D\\uD83D\\uDCBB'`, technologist).\n * The new `Intl.Segmenter` API in ES2022 can split the string into grapheme clusters correctly. If it is not available,\n * PixiJS will fallback to use the iterator of String, which can only spilt the string into code points.\n * If you want to get full functionality in environments that don't support `Intl.Segmenter` (such as Firefox),\n * you can use other libraries such as [grapheme-splitter]{@link https://www.npmjs.com/package/grapheme-splitter}\n * or [graphemer]{@link https://www.npmjs.com/package/graphemer} to create a polyfill. Since these libraries can be\n * relatively large in size to handle various Unicode grapheme clusters properly, PixiJS won't use them directly.\n */\n_CanvasTextMetrics.graphemeSegmenter = (() => {\n  if (typeof Intl?.Segmenter === \"function\") {\n    const segmenter = new Intl.Segmenter();\n    return (s) => [...segmenter.segment(s)].map((x) => x.segment);\n  }\n  return (s) => [...s];\n})();\n/**\n * New rendering behavior for letter-spacing which uses Chrome's new native API. This will\n * lead to more accurate letter-spacing results because it does not try to manually draw\n * each character. However, this Chrome API is experimental and may not serve all cases yet.\n * @see TextMetrics.experimentalLetterSpacingSupported\n */\n_CanvasTextMetrics.experimentalLetterSpacing = false;\n/** Cache of {@see TextMetrics.FontMetrics} objects. */\n_CanvasTextMetrics._fonts = {};\n/** Cache of new line chars. */\n_CanvasTextMetrics._newlines = [\n  10,\n  // line feed\n  13\n  // carriage return\n];\n/** Cache of breaking spaces. */\n_CanvasTextMetrics._breakingSpaces = [\n  9,\n  // character tabulation\n  32,\n  // space\n  8192,\n  // en quad\n  8193,\n  // em quad\n  8194,\n  // en space\n  8195,\n  // em space\n  8196,\n  // three-per-em space\n  8197,\n  // four-per-em space\n  8198,\n  // six-per-em space\n  8200,\n  // punctuation space\n  8201,\n  // thin space\n  8202,\n  // hair space\n  8287,\n  // medium mathematical space\n  12288\n  // ideographic space\n];\n_CanvasTextMetrics._measurementCache = {};\nlet CanvasTextMetrics = _CanvasTextMetrics;\n\nexport { CanvasTextMetrics };\n//# sourceMappingURL=CanvasTextMetrics.mjs.map\n","import { Color } from '../../../../color/Color.mjs';\nimport { Matrix } from '../../../../maths/matrix/Matrix.mjs';\nimport { Texture } from '../../../../rendering/renderers/shared/texture/Texture.mjs';\nimport { warn } from '../../../../utils/logging/warn.mjs';\nimport { FillGradient } from '../../../graphics/shared/fill/FillGradient.mjs';\nimport { FillPattern } from '../../../graphics/shared/fill/FillPattern.mjs';\n\n\"use strict\";\nfunction getCanvasFillStyle(fillStyle, context) {\n  if (fillStyle.texture === Texture.WHITE && !fillStyle.fill) {\n    return Color.shared.setValue(fillStyle.color).setAlpha(fillStyle.alpha ?? 1).toHexa();\n  } else if (!fillStyle.fill) {\n    const pattern = context.createPattern(fillStyle.texture.source.resource, \"repeat\");\n    const tempMatrix = fillStyle.matrix.copyTo(Matrix.shared);\n    tempMatrix.scale(fillStyle.texture.frame.width, fillStyle.texture.frame.height);\n    pattern.setTransform(tempMatrix);\n    return pattern;\n  } else if (fillStyle.fill instanceof FillPattern) {\n    const fillPattern = fillStyle.fill;\n    const pattern = context.createPattern(fillPattern.texture.source.resource, \"repeat\");\n    const tempMatrix = fillPattern.transform.copyTo(Matrix.shared);\n    tempMatrix.scale(\n      fillPattern.texture.frame.width,\n      fillPattern.texture.frame.height\n    );\n    pattern.setTransform(tempMatrix);\n    return pattern;\n  } else if (fillStyle.fill instanceof FillGradient) {\n    const fillGradient = fillStyle.fill;\n    if (fillGradient.type === \"linear\") {\n      const gradient = context.createLinearGradient(\n        fillGradient.x0,\n        fillGradient.y0,\n        fillGradient.x1,\n        fillGradient.y1\n      );\n      fillGradient.gradientStops.forEach((stop) => {\n        gradient.addColorStop(stop.offset, Color.shared.setValue(stop.color).toHex());\n      });\n      return gradient;\n    }\n  }\n  warn(\"FillStyle not recognised\", fillStyle);\n  return \"red\";\n}\n\nexport { getCanvasFillStyle };\n//# sourceMappingURL=getCanvasFillStyle.mjs.map\n","\"use strict\";\nfunction resolveCharacters(chars) {\n  if (chars === \"\") {\n    return [];\n  }\n  if (typeof chars === \"string\") {\n    chars = [chars];\n  }\n  const result = [];\n  for (let i = 0, j = chars.length; i < j; i++) {\n    const item = chars[i];\n    if (Array.isArray(item)) {\n      if (item.length !== 2) {\n        throw new Error(`[BitmapFont]: Invalid character range length, expecting 2 got ${item.length}.`);\n      }\n      if (item[0].length === 0 || item[1].length === 0) {\n        throw new Error(\"[BitmapFont]: Invalid character delimiter.\");\n      }\n      const startCode = item[0].charCodeAt(0);\n      const endCode = item[1].charCodeAt(0);\n      if (endCode < startCode) {\n        throw new Error(\"[BitmapFont]: Invalid character range.\");\n      }\n      for (let i2 = startCode, j2 = endCode; i2 <= j2; i2++) {\n        result.push(String.fromCharCode(i2));\n      }\n    } else {\n      result.push(...Array.from(item));\n    }\n  }\n  if (result.length === 0) {\n    throw new Error(\"[BitmapFont]: Empty set when resolving characters.\");\n  }\n  return result;\n}\n\nexport { resolveCharacters };\n//# sourceMappingURL=resolveCharacters.mjs.map\n","import { Color } from '../../color/Color.mjs';\nimport { Rectangle } from '../../maths/shapes/Rectangle.mjs';\nimport { CanvasPool } from '../../rendering/renderers/shared/texture/CanvasPool.mjs';\nimport { ImageSource } from '../../rendering/renderers/shared/texture/sources/ImageSource.mjs';\nimport { Texture } from '../../rendering/renderers/shared/texture/Texture.mjs';\nimport { deprecation, v8_0_0 } from '../../utils/logging/deprecation.mjs';\nimport { CanvasTextMetrics } from '../text/canvas/CanvasTextMetrics.mjs';\nimport { fontStringFromTextStyle } from '../text/canvas/utils/fontStringFromTextStyle.mjs';\nimport { getCanvasFillStyle } from '../text/canvas/utils/getCanvasFillStyle.mjs';\nimport { TextStyle } from '../text/TextStyle.mjs';\nimport { AbstractBitmapFont } from './AbstractBitmapFont.mjs';\nimport { resolveCharacters } from './utils/resolveCharacters.mjs';\n\n\"use strict\";\nconst _DynamicBitmapFont = class _DynamicBitmapFont extends AbstractBitmapFont {\n  /**\n   * @param options - The options for the dynamic bitmap font.\n   */\n  constructor(options) {\n    super();\n    /**\n     * this is a resolution modifier for the font size..\n     * texture resolution will also be used to scale texture according to its font size also\n     */\n    this.resolution = 1;\n    /** The pages of the font. */\n    this.pages = [];\n    this._padding = 0;\n    this._measureCache = /* @__PURE__ */ Object.create(null);\n    this._currentChars = [];\n    this._currentX = 0;\n    this._currentY = 0;\n    this._currentPageIndex = -1;\n    this._skipKerning = false;\n    const dynamicOptions = { ..._DynamicBitmapFont.defaultOptions, ...options };\n    this._textureSize = dynamicOptions.textureSize;\n    this._mipmap = dynamicOptions.mipmap;\n    const style = dynamicOptions.style.clone();\n    if (dynamicOptions.overrideFill) {\n      style._fill.color = 16777215;\n      style._fill.alpha = 1;\n      style._fill.texture = Texture.WHITE;\n      style._fill.fill = null;\n    }\n    this.applyFillAsTint = dynamicOptions.overrideFill;\n    const requestedFontSize = style.fontSize;\n    style.fontSize = this.baseMeasurementFontSize;\n    const font = fontStringFromTextStyle(style);\n    if (dynamicOptions.overrideSize) {\n      if (style._stroke) {\n        style._stroke.width *= this.baseRenderedFontSize / requestedFontSize;\n      }\n    } else {\n      style.fontSize = this.baseRenderedFontSize = requestedFontSize;\n    }\n    this._style = style;\n    this._skipKerning = dynamicOptions.skipKerning ?? false;\n    this.resolution = dynamicOptions.resolution ?? 1;\n    this._padding = dynamicOptions.padding ?? 4;\n    this.fontMetrics = CanvasTextMetrics.measureFont(font);\n    this.lineHeight = style.lineHeight || this.fontMetrics.fontSize || style.fontSize;\n  }\n  ensureCharacters(chars) {\n    const charList = resolveCharacters(chars).filter((char) => !this._currentChars.includes(char)).filter((char, index, self) => self.indexOf(char) === index);\n    if (!charList.length)\n      return;\n    this._currentChars = [...this._currentChars, ...charList];\n    let pageData;\n    if (this._currentPageIndex === -1) {\n      pageData = this._nextPage();\n    } else {\n      pageData = this.pages[this._currentPageIndex];\n    }\n    let { canvas, context } = pageData.canvasAndContext;\n    let textureSource = pageData.texture.source;\n    const style = this._style;\n    let currentX = this._currentX;\n    let currentY = this._currentY;\n    const fontScale = this.baseRenderedFontSize / this.baseMeasurementFontSize;\n    const padding = this._padding * fontScale;\n    let maxCharHeight = 0;\n    let skipTexture = false;\n    const maxTextureWidth = canvas.width / this.resolution;\n    const maxTextureHeight = canvas.height / this.resolution;\n    for (let i = 0; i < charList.length; i++) {\n      const char = charList[i];\n      const metrics = CanvasTextMetrics.measureText(char, style, canvas, false);\n      metrics.lineHeight = metrics.height;\n      const width = metrics.width * fontScale;\n      const textureGlyphWidth = Math.ceil((style.fontStyle === \"italic\" ? 2 : 1) * width);\n      const height = metrics.height * fontScale;\n      const paddedWidth = textureGlyphWidth + padding * 2;\n      const paddedHeight = height + padding * 2;\n      skipTexture = false;\n      if (char !== \"\\n\" && char !== \"\\r\" && char !== \"\t\" && char !== \" \") {\n        skipTexture = true;\n        maxCharHeight = Math.ceil(Math.max(paddedHeight, maxCharHeight));\n      }\n      if (currentX + paddedWidth > maxTextureWidth) {\n        currentY += maxCharHeight;\n        maxCharHeight = paddedHeight;\n        currentX = 0;\n        if (currentY + maxCharHeight > maxTextureHeight) {\n          textureSource.update();\n          const pageData2 = this._nextPage();\n          canvas = pageData2.canvasAndContext.canvas;\n          context = pageData2.canvasAndContext.context;\n          textureSource = pageData2.texture.source;\n          currentY = 0;\n        }\n      }\n      const xAdvance = width / fontScale - (style.dropShadow?.distance ?? 0) - (style._stroke?.width ?? 0);\n      this.chars[char] = {\n        id: char.codePointAt(0),\n        xOffset: -this._padding,\n        yOffset: -this._padding,\n        xAdvance,\n        kerning: {}\n      };\n      if (skipTexture) {\n        this._drawGlyph(\n          context,\n          metrics,\n          currentX + padding,\n          currentY + padding,\n          fontScale,\n          style\n        );\n        const px = textureSource.width * fontScale;\n        const py = textureSource.height * fontScale;\n        const frame = new Rectangle(\n          currentX / px * textureSource.width,\n          currentY / py * textureSource.height,\n          paddedWidth / px * textureSource.width,\n          paddedHeight / py * textureSource.height\n        );\n        this.chars[char].texture = new Texture({\n          source: textureSource,\n          frame\n        });\n        currentX += Math.ceil(paddedWidth);\n      }\n    }\n    textureSource.update();\n    this._currentX = currentX;\n    this._currentY = currentY;\n    this._skipKerning && this._applyKerning(charList, context);\n  }\n  /**\n   * @deprecated since 8.0.0\n   * The map of base page textures (i.e., sheets of glyphs).\n   */\n  get pageTextures() {\n    deprecation(v8_0_0, \"BitmapFont.pageTextures is deprecated, please use BitmapFont.pages instead.\");\n    return this.pages;\n  }\n  _applyKerning(newChars, context) {\n    const measureCache = this._measureCache;\n    for (let i = 0; i < newChars.length; i++) {\n      const first = newChars[i];\n      for (let j = 0; j < this._currentChars.length; j++) {\n        const second = this._currentChars[j];\n        let c1 = measureCache[first];\n        if (!c1)\n          c1 = measureCache[first] = context.measureText(first).width;\n        let c2 = measureCache[second];\n        if (!c2)\n          c2 = measureCache[second] = context.measureText(second).width;\n        let total = context.measureText(first + second).width;\n        let amount = total - (c1 + c2);\n        if (amount) {\n          this.chars[first].kerning[second] = amount;\n        }\n        total = context.measureText(first + second).width;\n        amount = total - (c1 + c2);\n        if (amount) {\n          this.chars[second].kerning[first] = amount;\n        }\n      }\n    }\n  }\n  _nextPage() {\n    this._currentPageIndex++;\n    const textureResolution = this.resolution;\n    const canvasAndContext = CanvasPool.getOptimalCanvasAndContext(\n      this._textureSize,\n      this._textureSize,\n      textureResolution\n    );\n    this._setupContext(canvasAndContext.context, this._style, textureResolution);\n    const resolution = textureResolution * (this.baseRenderedFontSize / this.baseMeasurementFontSize);\n    const texture = new Texture({\n      source: new ImageSource({\n        resource: canvasAndContext.canvas,\n        resolution,\n        alphaMode: \"premultiply-alpha-on-upload\",\n        autoGenerateMipmaps: this._mipmap\n      })\n    });\n    const pageData = {\n      canvasAndContext,\n      texture\n    };\n    this.pages[this._currentPageIndex] = pageData;\n    return pageData;\n  }\n  // canvas style!\n  _setupContext(context, style, resolution) {\n    style.fontSize = this.baseRenderedFontSize;\n    context.scale(resolution, resolution);\n    context.font = fontStringFromTextStyle(style);\n    style.fontSize = this.baseMeasurementFontSize;\n    context.textBaseline = style.textBaseline;\n    const stroke = style._stroke;\n    const strokeThickness = stroke?.width ?? 0;\n    if (stroke) {\n      context.lineWidth = strokeThickness;\n      context.lineJoin = stroke.join;\n      context.miterLimit = stroke.miterLimit;\n      context.strokeStyle = getCanvasFillStyle(stroke, context);\n    }\n    if (style._fill) {\n      context.fillStyle = getCanvasFillStyle(style._fill, context);\n    }\n    if (style.dropShadow) {\n      const shadowOptions = style.dropShadow;\n      const rgb = Color.shared.setValue(shadowOptions.color).toArray();\n      const dropShadowBlur = shadowOptions.blur * resolution;\n      const dropShadowDistance = shadowOptions.distance * resolution;\n      context.shadowColor = `rgba(${rgb[0] * 255},${rgb[1] * 255},${rgb[2] * 255},${shadowOptions.alpha})`;\n      context.shadowBlur = dropShadowBlur;\n      context.shadowOffsetX = Math.cos(shadowOptions.angle) * dropShadowDistance;\n      context.shadowOffsetY = Math.sin(shadowOptions.angle) * dropShadowDistance;\n    } else {\n      context.shadowColor = \"black\";\n      context.shadowBlur = 0;\n      context.shadowOffsetX = 0;\n      context.shadowOffsetY = 0;\n    }\n  }\n  _drawGlyph(context, metrics, x, y, fontScale, style) {\n    const char = metrics.text;\n    const fontProperties = metrics.fontProperties;\n    const stroke = style._stroke;\n    const strokeThickness = (stroke?.width ?? 0) * fontScale;\n    const tx = x + strokeThickness / 2;\n    const ty = y - strokeThickness / 2;\n    const descent = fontProperties.descent * fontScale;\n    const lineHeight = metrics.lineHeight * fontScale;\n    if (style.stroke && strokeThickness) {\n      context.strokeText(char, tx, ty + lineHeight - descent);\n    }\n    if (style._fill) {\n      context.fillText(char, tx, ty + lineHeight - descent);\n    }\n  }\n  destroy() {\n    super.destroy();\n    for (let i = 0; i < this.pages.length; i++) {\n      const { canvasAndContext, texture } = this.pages[i];\n      CanvasPool.returnCanvasAndContext(canvasAndContext);\n      texture.destroy(true);\n    }\n    this.pages = null;\n  }\n};\n_DynamicBitmapFont.defaultOptions = {\n  textureSize: 512,\n  style: new TextStyle(),\n  mipmap: true\n};\nlet DynamicBitmapFont = _DynamicBitmapFont;\n\nexport { DynamicBitmapFont };\n//# sourceMappingURL=DynamicBitmapFont.mjs.map\n","\"use strict\";\nfunction getBitmapTextLayout(chars, style, font, trimEnd) {\n  const layoutData = {\n    width: 0,\n    height: 0,\n    offsetY: 0,\n    scale: style.fontSize / font.baseMeasurementFontSize,\n    lines: [{\n      width: 0,\n      charPositions: [],\n      spaceWidth: 0,\n      spacesIndex: [],\n      chars: []\n    }]\n  };\n  layoutData.offsetY = font.baseLineOffset;\n  let currentLine = layoutData.lines[0];\n  let previousChar = null;\n  let firstWord = true;\n  const currentWord = {\n    spaceWord: false,\n    width: 0,\n    start: 0,\n    index: 0,\n    // use index to not modify the array as we use it a lot!\n    positions: [],\n    chars: []\n  };\n  const nextWord = (word) => {\n    const start = currentLine.width;\n    for (let j = 0; j < currentWord.index; j++) {\n      const position = word.positions[j];\n      currentLine.chars.push(word.chars[j]);\n      currentLine.charPositions.push(position + start);\n    }\n    currentLine.width += word.width;\n    firstWord = false;\n    currentWord.width = 0;\n    currentWord.index = 0;\n    currentWord.chars.length = 0;\n  };\n  const nextLine = () => {\n    let index = currentLine.chars.length - 1;\n    if (trimEnd) {\n      let lastChar = currentLine.chars[index];\n      while (lastChar === \" \") {\n        currentLine.width -= font.chars[lastChar].xAdvance;\n        lastChar = currentLine.chars[--index];\n      }\n    }\n    layoutData.width = Math.max(layoutData.width, currentLine.width);\n    currentLine = {\n      width: 0,\n      charPositions: [],\n      chars: [],\n      spaceWidth: 0,\n      spacesIndex: []\n    };\n    firstWord = true;\n    layoutData.lines.push(currentLine);\n    layoutData.height += font.lineHeight;\n  };\n  const scale = font.baseMeasurementFontSize / style.fontSize;\n  const adjustedLetterSpacing = style.letterSpacing * scale;\n  const adjustedWordWrapWidth = style.wordWrapWidth * scale;\n  for (let i = 0; i < chars.length + 1; i++) {\n    let char;\n    const isEnd = i === chars.length;\n    if (!isEnd) {\n      char = chars[i];\n    }\n    const charData = font.chars[char] || font.chars[\" \"];\n    const isSpace = /(?:\\s)/.test(char);\n    const isWordBreak = isSpace || char === \"\\r\" || char === \"\\n\" || isEnd;\n    if (isWordBreak) {\n      const addWordToNextLine = !firstWord && style.wordWrap && currentLine.width + currentWord.width - adjustedLetterSpacing > adjustedWordWrapWidth;\n      if (addWordToNextLine) {\n        nextLine();\n        nextWord(currentWord);\n        if (!isEnd) {\n          currentLine.charPositions.push(0);\n        }\n      } else {\n        currentWord.start = currentLine.width;\n        nextWord(currentWord);\n        if (!isEnd) {\n          currentLine.charPositions.push(0);\n        }\n      }\n      if (char === \"\\r\" || char === \"\\n\") {\n        if (currentLine.width !== 0) {\n          nextLine();\n        }\n      } else if (!isEnd) {\n        const spaceWidth = charData.xAdvance + (charData.kerning[previousChar] || 0) + adjustedLetterSpacing;\n        currentLine.width += spaceWidth;\n        currentLine.spaceWidth = spaceWidth;\n        currentLine.spacesIndex.push(currentLine.charPositions.length);\n        currentLine.chars.push(char);\n      }\n    } else {\n      const kerning = charData.kerning[previousChar] || 0;\n      const nextCharWidth = charData.xAdvance + kerning + adjustedLetterSpacing;\n      currentWord.positions[currentWord.index++] = currentWord.width + kerning;\n      currentWord.chars.push(char);\n      currentWord.width += nextCharWidth;\n    }\n    previousChar = char;\n  }\n  nextLine();\n  if (style.align === \"center\") {\n    alignCenter(layoutData);\n  } else if (style.align === \"right\") {\n    alignRight(layoutData);\n  } else if (style.align === \"justify\") {\n    alignJustify(layoutData);\n  }\n  return layoutData;\n}\nfunction alignCenter(measurementData) {\n  for (let i = 0; i < measurementData.lines.length; i++) {\n    const line = measurementData.lines[i];\n    const offset = measurementData.width / 2 - line.width / 2;\n    for (let j = 0; j < line.charPositions.length; j++) {\n      line.charPositions[j] += offset;\n    }\n  }\n}\nfunction alignRight(measurementData) {\n  for (let i = 0; i < measurementData.lines.length; i++) {\n    const line = measurementData.lines[i];\n    const offset = measurementData.width - line.width;\n    for (let j = 0; j < line.charPositions.length; j++) {\n      line.charPositions[j] += offset;\n    }\n  }\n}\nfunction alignJustify(measurementData) {\n  const width = measurementData.width;\n  for (let i = 0; i < measurementData.lines.length; i++) {\n    const line = measurementData.lines[i];\n    let indy = 0;\n    let spaceIndex = line.spacesIndex[indy++];\n    let offset = 0;\n    const totalSpaces = line.spacesIndex.length;\n    const newSpaceWidth = (width - line.width) / totalSpaces;\n    const spaceWidth = newSpaceWidth;\n    for (let j = 0; j < line.charPositions.length; j++) {\n      if (j === spaceIndex) {\n        spaceIndex = line.spacesIndex[indy++];\n        offset += spaceWidth;\n      }\n      line.charPositions[j] += offset;\n    }\n  }\n}\n\nexport { getBitmapTextLayout };\n//# sourceMappingURL=getBitmapTextLayout.mjs.map\n","import { Cache } from '../../assets/cache/Cache.mjs';\nimport { deprecation, v8_0_0 } from '../../utils/logging/deprecation.mjs';\nimport { warn } from '../../utils/logging/warn.mjs';\nimport { TextStyle } from '../text/TextStyle.mjs';\nimport { DynamicBitmapFont } from './DynamicBitmapFont.mjs';\nimport { getBitmapTextLayout } from './utils/getBitmapTextLayout.mjs';\nimport { resolveCharacters } from './utils/resolveCharacters.mjs';\n\n\"use strict\";\nlet fontCount = 0;\nclass BitmapFontManagerClass {\n  constructor() {\n    /**\n     * This character set includes all the letters in the alphabet (both lower- and upper- case).\n     * @type {string[][]}\n     * @example\n     * BitmapFont.from('ExampleFont', style, { chars: BitmapFont.ALPHA })\n     */\n    this.ALPHA = [[\"a\", \"z\"], [\"A\", \"Z\"], \" \"];\n    /**\n     * This character set includes all decimal digits (from 0 to 9).\n     * @type {string[][]}\n     * @example\n     * BitmapFont.from('ExampleFont', style, { chars: BitmapFont.NUMERIC })\n     */\n    this.NUMERIC = [[\"0\", \"9\"]];\n    /**\n     * This character set is the union of `BitmapFont.ALPHA` and `BitmapFont.NUMERIC`.\n     * @type {string[][]}\n     */\n    this.ALPHANUMERIC = [[\"a\", \"z\"], [\"A\", \"Z\"], [\"0\", \"9\"], \" \"];\n    /**\n     * This character set consists of all the ASCII table.\n     * @member {string[][]}\n     * @see http://www.asciitable.com/\n     */\n    this.ASCII = [[\" \", \"~\"]];\n    /** Default options for installing a new BitmapFont. */\n    this.defaultOptions = {\n      chars: this.ALPHANUMERIC,\n      resolution: 1,\n      padding: 4,\n      skipKerning: false\n    };\n  }\n  /**\n   * Get a font for the specified text and style.\n   * @param text - The text to get the font for\n   * @param style - The style to use\n   */\n  getFont(text, style) {\n    let fontFamilyKey = `${style.fontFamily}-bitmap`;\n    let overrideFill = true;\n    if (style._fill.fill && !style._stroke) {\n      fontFamilyKey += style._fill.fill.styleKey;\n      overrideFill = false;\n    } else if (style._stroke || style.dropShadow) {\n      let key = style.styleKey;\n      key = key.substring(0, key.lastIndexOf(\"-\"));\n      fontFamilyKey = `${key}-bitmap`;\n      overrideFill = false;\n    }\n    if (!Cache.has(fontFamilyKey)) {\n      const fnt = new DynamicBitmapFont({\n        style,\n        overrideFill,\n        overrideSize: true,\n        ...this.defaultOptions\n      });\n      fontCount++;\n      if (fontCount > 50) {\n        warn(\"BitmapText\", `You have dynamically created ${fontCount} bitmap fonts, this can be inefficient. Try pre installing your font styles using \\`BitmapFont.install({name:\"style1\", style})\\``);\n      }\n      fnt.once(\"destroy\", () => {\n        fontCount--;\n        Cache.remove(fontFamilyKey);\n      });\n      Cache.set(\n        fontFamilyKey,\n        fnt\n      );\n    }\n    const dynamicFont = Cache.get(fontFamilyKey);\n    dynamicFont.ensureCharacters?.(text);\n    return dynamicFont;\n  }\n  /**\n   * Get the layout of a text for the specified style.\n   * @param text - The text to get the layout for\n   * @param style - The style to use\n   * @param trimEnd - Whether to ignore whitespaces at the end of each line\n   */\n  getLayout(text, style, trimEnd = true) {\n    const bitmapFont = this.getFont(text, style);\n    return getBitmapTextLayout([...text], style, bitmapFont, trimEnd);\n  }\n  /**\n   * Measure the text using the specified style.\n   * @param text - The text to measure\n   * @param style - The style to use\n   * @param trimEnd - Whether to ignore whitespaces at the end of each line\n   */\n  measureText(text, style, trimEnd = true) {\n    return this.getLayout(text, style, trimEnd);\n  }\n  // eslint-disable-next-line max-len\n  install(...args) {\n    let options = args[0];\n    if (typeof options === \"string\") {\n      options = {\n        name: options,\n        style: args[1],\n        chars: args[2]?.chars,\n        resolution: args[2]?.resolution,\n        padding: args[2]?.padding,\n        skipKerning: args[2]?.skipKerning\n      };\n      deprecation(v8_0_0, \"BitmapFontManager.install(name, style, options) is deprecated, use BitmapFontManager.install({name, style, ...options})\");\n    }\n    const name = options?.name;\n    if (!name) {\n      throw new Error(\"[BitmapFontManager] Property `name` is required.\");\n    }\n    options = { ...this.defaultOptions, ...options };\n    const textStyle = options.style;\n    const style = textStyle instanceof TextStyle ? textStyle : new TextStyle(textStyle);\n    const overrideFill = style._fill.fill !== null && style._fill.fill !== void 0;\n    const font = new DynamicBitmapFont({\n      style,\n      overrideFill,\n      skipKerning: options.skipKerning,\n      padding: options.padding,\n      resolution: options.resolution,\n      overrideSize: false\n    });\n    const flatChars = resolveCharacters(options.chars);\n    font.ensureCharacters(flatChars.join(\"\"));\n    Cache.set(`${name}-bitmap`, font);\n    font.once(\"destroy\", () => Cache.remove(`${name}-bitmap`));\n    return font;\n  }\n  /**\n   * Uninstalls a bitmap font from the cache.\n   * @param {string} name - The name of the bitmap font to uninstall.\n   */\n  uninstall(name) {\n    const cacheKey = `${name}-bitmap`;\n    const font = Cache.get(cacheKey);\n    if (font) {\n      font.destroy();\n    }\n  }\n}\nconst BitmapFontManager = new BitmapFontManagerClass();\n\nexport { BitmapFontManager };\n//# sourceMappingURL=BitmapFontManager.mjs.map\n","import { ExtensionType } from '../extensions/Extensions.mjs';\n\n\"use strict\";\nclass FilterPipe {\n  constructor(renderer) {\n    this._renderer = renderer;\n  }\n  push(filterEffect, container, instructionSet) {\n    const renderPipes = this._renderer.renderPipes;\n    renderPipes.batch.break(instructionSet);\n    instructionSet.add({\n      renderPipeId: \"filter\",\n      canBundle: false,\n      action: \"pushFilter\",\n      container,\n      filterEffect\n    });\n  }\n  pop(_filterEffect, _container, instructionSet) {\n    this._renderer.renderPipes.batch.break(instructionSet);\n    instructionSet.add({\n      renderPipeId: \"filter\",\n      action: \"popFilter\",\n      canBundle: false\n    });\n  }\n  execute(instruction) {\n    if (instruction.action === \"pushFilter\") {\n      this._renderer.filter.push(instruction);\n    } else if (instruction.action === \"popFilter\") {\n      this._renderer.filter.pop();\n    }\n  }\n  destroy() {\n    this._renderer = null;\n  }\n}\nFilterPipe.extension = {\n  type: [\n    ExtensionType.WebGLPipes,\n    ExtensionType.WebGPUPipes,\n    ExtensionType.CanvasPipes\n  ],\n  name: \"filter\"\n};\n\nexport { FilterPipe };\n//# sourceMappingURL=FilterPipe.mjs.map\n","import { Matrix } from '../../../maths/matrix/Matrix.mjs';\nimport { boundsPool } from './utils/matrixAndBoundsPool.mjs';\n\n\"use strict\";\nconst tempMatrix = new Matrix();\nfunction getFastGlobalBounds(target, bounds) {\n  bounds.clear();\n  _getGlobalBoundsRecursive(target, bounds);\n  if (!bounds.isValid) {\n    bounds.set(0, 0, 0, 0);\n  }\n  const renderGroup = target.renderGroup || target.parentRenderGroup;\n  bounds.applyMatrix(renderGroup.worldTransform);\n  return bounds;\n}\nfunction _getGlobalBoundsRecursive(target, bounds) {\n  if (target.localDisplayStatus !== 7 || !target.measurable) {\n    return;\n  }\n  const manageEffects = !!target.effects.length;\n  let localBounds = bounds;\n  if (target.renderGroup || manageEffects) {\n    localBounds = boundsPool.get().clear();\n  }\n  if (target.boundsArea) {\n    bounds.addRect(target.boundsArea, target.worldTransform);\n  } else {\n    if (target.renderPipeId) {\n      const viewBounds = target.bounds;\n      localBounds.addFrame(\n        viewBounds.minX,\n        viewBounds.minY,\n        viewBounds.maxX,\n        viewBounds.maxY,\n        target.groupTransform\n      );\n    }\n    const children = target.children;\n    for (let i = 0; i < children.length; i++) {\n      _getGlobalBoundsRecursive(children[i], localBounds);\n    }\n  }\n  if (manageEffects) {\n    let advanced = false;\n    const renderGroup = target.renderGroup || target.parentRenderGroup;\n    for (let i = 0; i < target.effects.length; i++) {\n      if (target.effects[i].addBounds) {\n        if (!advanced) {\n          advanced = true;\n          localBounds.applyMatrix(renderGroup.worldTransform);\n        }\n        target.effects[i].addBounds(localBounds, true);\n      }\n    }\n    if (advanced) {\n      localBounds.applyMatrix(renderGroup.worldTransform.copyTo(tempMatrix).invert());\n      bounds.addBounds(localBounds, target.relativeGroupTransform);\n    }\n    bounds.addBounds(localBounds);\n    boundsPool.return(localBounds);\n  } else if (target.renderGroup) {\n    bounds.addBounds(localBounds, target.relativeGroupTransform);\n    boundsPool.return(localBounds);\n  }\n}\n\nexport { _getGlobalBoundsRecursive, getFastGlobalBounds };\n//# sourceMappingURL=getFastGlobalBounds.mjs.map\n","\"use strict\";\nfunction getGlobalRenderableBounds(renderables, bounds) {\n  bounds.clear();\n  const tempMatrix = bounds.matrix;\n  for (let i = 0; i < renderables.length; i++) {\n    const renderable = renderables[i];\n    if (renderable.globalDisplayStatus < 7) {\n      continue;\n    }\n    bounds.matrix = renderable.worldTransform;\n    bounds.addBounds(renderable.bounds);\n  }\n  bounds.matrix = tempMatrix;\n  return bounds;\n}\n\nexport { getGlobalRenderableBounds };\n//# sourceMappingURL=getRenderableBounds.mjs.map\n","import { ExtensionType } from '../extensions/Extensions.mjs';\nimport { Matrix } from '../maths/matrix/Matrix.mjs';\nimport { Point } from '../maths/point/Point.mjs';\nimport { BindGroup } from '../rendering/renderers/gpu/shader/BindGroup.mjs';\nimport { Geometry } from '../rendering/renderers/shared/geometry/Geometry.mjs';\nimport { UniformGroup } from '../rendering/renderers/shared/shader/UniformGroup.mjs';\nimport { Texture } from '../rendering/renderers/shared/texture/Texture.mjs';\nimport { TexturePool } from '../rendering/renderers/shared/texture/TexturePool.mjs';\nimport { RendererType } from '../rendering/renderers/types.mjs';\nimport { Bounds } from '../scene/container/bounds/Bounds.mjs';\nimport { getFastGlobalBounds } from '../scene/container/bounds/getFastGlobalBounds.mjs';\nimport { getGlobalRenderableBounds } from '../scene/container/bounds/getRenderableBounds.mjs';\nimport { warn } from '../utils/logging/warn.mjs';\n\n\"use strict\";\nconst quadGeometry = new Geometry({\n  attributes: {\n    aPosition: {\n      buffer: new Float32Array([0, 0, 1, 0, 1, 1, 0, 1]),\n      format: \"float32x2\",\n      stride: 2 * 4,\n      offset: 0\n    }\n  },\n  indexBuffer: new Uint32Array([0, 1, 2, 0, 2, 3])\n});\nclass FilterSystem {\n  constructor(renderer) {\n    this._filterStackIndex = 0;\n    this._filterStack = [];\n    this._filterGlobalUniforms = new UniformGroup({\n      uInputSize: { value: new Float32Array(4), type: \"vec4<f32>\" },\n      uInputPixel: { value: new Float32Array(4), type: \"vec4<f32>\" },\n      uInputClamp: { value: new Float32Array(4), type: \"vec4<f32>\" },\n      uOutputFrame: { value: new Float32Array(4), type: \"vec4<f32>\" },\n      uGlobalFrame: { value: new Float32Array(4), type: \"vec4<f32>\" },\n      uOutputTexture: { value: new Float32Array(4), type: \"vec4<f32>\" }\n    });\n    this._globalFilterBindGroup = new BindGroup({});\n    this.renderer = renderer;\n  }\n  /**\n   * The back texture of the currently active filter. Requires the filter to have `blendRequired` set to true.\n   * @readonly\n   */\n  get activeBackTexture() {\n    return this._activeFilterData?.backTexture;\n  }\n  push(instruction) {\n    const renderer = this.renderer;\n    const filters = instruction.filterEffect.filters;\n    if (!this._filterStack[this._filterStackIndex]) {\n      this._filterStack[this._filterStackIndex] = this._getFilterData();\n    }\n    const filterData = this._filterStack[this._filterStackIndex];\n    this._filterStackIndex++;\n    if (filters.length === 0) {\n      filterData.skip = true;\n      return;\n    }\n    const bounds = filterData.bounds;\n    if (instruction.renderables) {\n      getGlobalRenderableBounds(instruction.renderables, bounds);\n    } else if (instruction.filterEffect.filterArea) {\n      bounds.clear();\n      bounds.addRect(instruction.filterEffect.filterArea);\n      bounds.applyMatrix(instruction.container.worldTransform);\n    } else {\n      getFastGlobalBounds(instruction.container, bounds);\n    }\n    if (instruction.container) {\n      const renderGroup = instruction.container.renderGroup || instruction.container.parentRenderGroup;\n      const filterFrameTransform = renderGroup.cacheToLocalTransform;\n      if (filterFrameTransform) {\n        bounds.applyMatrix(filterFrameTransform);\n      }\n    }\n    const colorTextureSource = renderer.renderTarget.renderTarget.colorTexture.source;\n    let resolution = Infinity;\n    let padding = 0;\n    let antialias = true;\n    let blendRequired = false;\n    let enabled = false;\n    let clipToViewport = true;\n    for (let i = 0; i < filters.length; i++) {\n      const filter = filters[i];\n      resolution = Math.min(resolution, filter.resolution === \"inherit\" ? colorTextureSource._resolution : filter.resolution);\n      padding += filter.padding;\n      if (filter.antialias === \"off\") {\n        antialias = false;\n      } else if (filter.antialias === \"inherit\") {\n        antialias && (antialias = colorTextureSource.antialias);\n      }\n      if (!filter.clipToViewport) {\n        clipToViewport = false;\n      }\n      const isCompatible = !!(filter.compatibleRenderers & renderer.type);\n      if (!isCompatible) {\n        enabled = false;\n        break;\n      }\n      if (filter.blendRequired && !(renderer.backBuffer?.useBackBuffer ?? true)) {\n        warn(\"Blend filter requires backBuffer on WebGL renderer to be enabled. Set `useBackBuffer: true` in the renderer options.\");\n        enabled = false;\n        break;\n      }\n      enabled = filter.enabled || enabled;\n      blendRequired || (blendRequired = filter.blendRequired);\n    }\n    if (!enabled) {\n      filterData.skip = true;\n      return;\n    }\n    if (clipToViewport) {\n      const viewPort = renderer.renderTarget.rootViewPort;\n      const rootResolution = renderer.renderTarget.renderTarget.resolution;\n      bounds.fitBounds(0, viewPort.width / rootResolution, 0, viewPort.height / rootResolution);\n    }\n    bounds.scale(resolution).ceil().scale(1 / resolution).pad(padding | 0);\n    if (!bounds.isPositive) {\n      filterData.skip = true;\n      return;\n    }\n    filterData.skip = false;\n    filterData.bounds = bounds;\n    filterData.blendRequired = blendRequired;\n    filterData.container = instruction.container;\n    filterData.filterEffect = instruction.filterEffect;\n    filterData.previousRenderSurface = renderer.renderTarget.renderSurface;\n    filterData.inputTexture = TexturePool.getOptimalTexture(\n      bounds.width,\n      bounds.height,\n      resolution,\n      antialias\n    );\n    renderer.renderTarget.bind(filterData.inputTexture, true);\n    renderer.globalUniforms.push({\n      offset: bounds\n    });\n  }\n  pop() {\n    const renderer = this.renderer;\n    this._filterStackIndex--;\n    const filterData = this._filterStack[this._filterStackIndex];\n    if (filterData.skip) {\n      return;\n    }\n    this._activeFilterData = filterData;\n    const inputTexture = filterData.inputTexture;\n    const bounds = filterData.bounds;\n    let backTexture = Texture.EMPTY;\n    renderer.renderTarget.finishRenderPass();\n    if (filterData.blendRequired) {\n      const previousBounds = this._filterStackIndex > 0 ? this._filterStack[this._filterStackIndex - 1].bounds : null;\n      const renderTarget = renderer.renderTarget.getRenderTarget(filterData.previousRenderSurface);\n      backTexture = this.getBackTexture(renderTarget, bounds, previousBounds);\n    }\n    filterData.backTexture = backTexture;\n    const filters = filterData.filterEffect.filters;\n    this._globalFilterBindGroup.setResource(inputTexture.source.style, 2);\n    this._globalFilterBindGroup.setResource(backTexture.source, 3);\n    renderer.globalUniforms.pop();\n    if (filters.length === 1) {\n      filters[0].apply(this, inputTexture, filterData.previousRenderSurface, false);\n      TexturePool.returnTexture(inputTexture);\n    } else {\n      let flip = filterData.inputTexture;\n      let flop = TexturePool.getOptimalTexture(\n        bounds.width,\n        bounds.height,\n        flip.source._resolution,\n        false\n      );\n      let i = 0;\n      for (i = 0; i < filters.length - 1; ++i) {\n        const filter = filters[i];\n        filter.apply(this, flip, flop, true);\n        const t = flip;\n        flip = flop;\n        flop = t;\n      }\n      filters[i].apply(this, flip, filterData.previousRenderSurface, false);\n      TexturePool.returnTexture(flip);\n      TexturePool.returnTexture(flop);\n    }\n    if (filterData.blendRequired) {\n      TexturePool.returnTexture(backTexture);\n    }\n  }\n  getBackTexture(lastRenderSurface, bounds, previousBounds) {\n    const backgroundResolution = lastRenderSurface.colorTexture.source._resolution;\n    const backTexture = TexturePool.getOptimalTexture(\n      bounds.width,\n      bounds.height,\n      backgroundResolution,\n      false\n    );\n    let x = bounds.minX;\n    let y = bounds.minY;\n    if (previousBounds) {\n      x -= previousBounds.minX;\n      y -= previousBounds.minY;\n    }\n    x = Math.floor(x * backgroundResolution);\n    y = Math.floor(y * backgroundResolution);\n    const width = Math.ceil(bounds.width * backgroundResolution);\n    const height = Math.ceil(bounds.height * backgroundResolution);\n    this.renderer.renderTarget.copyToTexture(\n      lastRenderSurface,\n      backTexture,\n      { x, y },\n      { width, height },\n      { x: 0, y: 0 }\n    );\n    return backTexture;\n  }\n  applyFilter(filter, input, output, clear) {\n    const renderer = this.renderer;\n    const filterData = this._filterStack[this._filterStackIndex];\n    const bounds = filterData.bounds;\n    const offset = Point.shared;\n    const previousRenderSurface = filterData.previousRenderSurface;\n    const isFinalTarget = previousRenderSurface === output;\n    let resolution = this.renderer.renderTarget.rootRenderTarget.colorTexture.source._resolution;\n    let currentIndex = this._filterStackIndex - 1;\n    while (currentIndex > 0 && this._filterStack[currentIndex].skip) {\n      --currentIndex;\n    }\n    if (currentIndex > 0) {\n      resolution = this._filterStack[currentIndex].inputTexture.source._resolution;\n    }\n    const filterUniforms = this._filterGlobalUniforms;\n    const uniforms = filterUniforms.uniforms;\n    const outputFrame = uniforms.uOutputFrame;\n    const inputSize = uniforms.uInputSize;\n    const inputPixel = uniforms.uInputPixel;\n    const inputClamp = uniforms.uInputClamp;\n    const globalFrame = uniforms.uGlobalFrame;\n    const outputTexture = uniforms.uOutputTexture;\n    if (isFinalTarget) {\n      let lastIndex = this._filterStackIndex;\n      while (lastIndex > 0) {\n        lastIndex--;\n        const filterData2 = this._filterStack[this._filterStackIndex - 1];\n        if (!filterData2.skip) {\n          offset.x = filterData2.bounds.minX;\n          offset.y = filterData2.bounds.minY;\n          break;\n        }\n      }\n      outputFrame[0] = bounds.minX - offset.x;\n      outputFrame[1] = bounds.minY - offset.y;\n    } else {\n      outputFrame[0] = 0;\n      outputFrame[1] = 0;\n    }\n    outputFrame[2] = input.frame.width;\n    outputFrame[3] = input.frame.height;\n    inputSize[0] = input.source.width;\n    inputSize[1] = input.source.height;\n    inputSize[2] = 1 / inputSize[0];\n    inputSize[3] = 1 / inputSize[1];\n    inputPixel[0] = input.source.pixelWidth;\n    inputPixel[1] = input.source.pixelHeight;\n    inputPixel[2] = 1 / inputPixel[0];\n    inputPixel[3] = 1 / inputPixel[1];\n    inputClamp[0] = 0.5 * inputPixel[2];\n    inputClamp[1] = 0.5 * inputPixel[3];\n    inputClamp[2] = input.frame.width * inputSize[2] - 0.5 * inputPixel[2];\n    inputClamp[3] = input.frame.height * inputSize[3] - 0.5 * inputPixel[3];\n    const rootTexture = this.renderer.renderTarget.rootRenderTarget.colorTexture;\n    globalFrame[0] = offset.x * resolution;\n    globalFrame[1] = offset.y * resolution;\n    globalFrame[2] = rootTexture.source.width * resolution;\n    globalFrame[3] = rootTexture.source.height * resolution;\n    const renderTarget = this.renderer.renderTarget.getRenderTarget(output);\n    renderer.renderTarget.bind(output, !!clear);\n    if (output instanceof Texture) {\n      outputTexture[0] = output.frame.width;\n      outputTexture[1] = output.frame.height;\n    } else {\n      outputTexture[0] = renderTarget.width;\n      outputTexture[1] = renderTarget.height;\n    }\n    outputTexture[2] = renderTarget.isRoot ? -1 : 1;\n    filterUniforms.update();\n    if (renderer.renderPipes.uniformBatch) {\n      const batchUniforms = renderer.renderPipes.uniformBatch.getUboResource(filterUniforms);\n      this._globalFilterBindGroup.setResource(batchUniforms, 0);\n    } else {\n      this._globalFilterBindGroup.setResource(filterUniforms, 0);\n    }\n    this._globalFilterBindGroup.setResource(input.source, 1);\n    this._globalFilterBindGroup.setResource(input.source.style, 2);\n    filter.groups[0] = this._globalFilterBindGroup;\n    renderer.encoder.draw({\n      geometry: quadGeometry,\n      shader: filter,\n      state: filter._state,\n      topology: \"triangle-list\"\n    });\n    if (renderer.type === RendererType.WEBGL) {\n      renderer.renderTarget.finishRenderPass();\n    }\n  }\n  _getFilterData() {\n    return {\n      skip: false,\n      inputTexture: null,\n      bounds: new Bounds(),\n      container: null,\n      filterEffect: null,\n      blendRequired: false,\n      previousRenderSurface: null\n    };\n  }\n  /**\n   * Multiply _input normalized coordinates_ to this matrix to get _sprite texture normalized coordinates_.\n   *\n   * Use `outputMatrix * vTextureCoord` in the shader.\n   * @param outputMatrix - The matrix to output to.\n   * @param {Sprite} sprite - The sprite to map to.\n   * @returns The mapped matrix.\n   */\n  calculateSpriteMatrix(outputMatrix, sprite) {\n    const data = this._activeFilterData;\n    const mappedMatrix = outputMatrix.set(\n      data.inputTexture._source.width,\n      0,\n      0,\n      data.inputTexture._source.height,\n      data.bounds.minX,\n      data.bounds.minY\n    );\n    const worldTransform = sprite.worldTransform.copyTo(Matrix.shared);\n    const renderGroup = sprite.renderGroup || sprite.parentRenderGroup;\n    if (renderGroup && renderGroup.cacheToLocalTransform) {\n      worldTransform.prepend(renderGroup.cacheToLocalTransform);\n    }\n    worldTransform.invert();\n    mappedMatrix.prepend(worldTransform);\n    mappedMatrix.scale(\n      1 / sprite.texture.frame.width,\n      1 / sprite.texture.frame.height\n    );\n    mappedMatrix.translate(sprite.anchor.x, sprite.anchor.y);\n    return mappedMatrix;\n  }\n}\n/** @ignore */\nFilterSystem.extension = {\n  type: [\n    ExtensionType.WebGLSystem,\n    ExtensionType.WebGPUSystem\n  ],\n  name: \"filter\"\n};\n\nexport { FilterSystem };\n//# sourceMappingURL=FilterSystem.mjs.map\n","import { deprecation, v8_0_0 } from '../../../utils/logging/deprecation.mjs';\nimport { ViewContainer } from '../../view/ViewContainer.mjs';\nimport { GraphicsContext } from './GraphicsContext.mjs';\n\n\"use strict\";\nclass Graphics extends ViewContainer {\n  /**\n   * @param options - Options for the Graphics.\n   */\n  constructor(options) {\n    if (options instanceof GraphicsContext) {\n      options = { context: options };\n    }\n    const { context, roundPixels, ...rest } = options || {};\n    super({\n      label: \"Graphics\",\n      ...rest\n    });\n    this.renderPipeId = \"graphics\";\n    if (!context) {\n      this._context = this._ownedContext = new GraphicsContext();\n    } else {\n      this._context = context;\n    }\n    this._context.on(\"update\", this.onViewUpdate, this);\n    this.allowChildren = false;\n    this.roundPixels = roundPixels ?? false;\n  }\n  set context(context) {\n    if (context === this._context)\n      return;\n    this._context.off(\"update\", this.onViewUpdate, this);\n    this._context = context;\n    this._context.on(\"update\", this.onViewUpdate, this);\n    this.onViewUpdate();\n  }\n  get context() {\n    return this._context;\n  }\n  /**\n   * The local bounds of the graphic.\n   * @type {rendering.Bounds}\n   */\n  get bounds() {\n    return this._context.bounds;\n  }\n  /**\n   * Graphics objects do not need to update their bounds as the context handles this.\n   * @private\n   */\n  updateBounds() {\n  }\n  /**\n   * Checks if the object contains the given point.\n   * @param point - The point to check\n   */\n  containsPoint(point) {\n    return this._context.containsPoint(point);\n  }\n  /**\n   * Destroys this graphics renderable and optionally its context.\n   * @param options - Options parameter. A boolean will act as if all options\n   *\n   * If the context was created by this graphics and `destroy(false)` or `destroy()` is called\n   * then the context will still be destroyed.\n   *\n   * If you want to explicitly not destroy this context that this graphics created,\n   * then you should pass destroy({ context: false })\n   *\n   * If the context was passed in as an argument to the constructor then it will not be destroyed\n   * @param {boolean} [options.texture=false] - Should destroy the texture of the graphics context\n   * @param {boolean} [options.textureSource=false] - Should destroy the texture source of the graphics context\n   * @param {boolean} [options.context=false] - Should destroy the context\n   */\n  destroy(options) {\n    if (this._ownedContext && !options) {\n      this._ownedContext.destroy(options);\n    } else if (options === true || options?.context === true) {\n      this._context.destroy(options);\n    }\n    this._ownedContext = null;\n    this._context = null;\n    super.destroy(options);\n  }\n  _callContextMethod(method, args) {\n    this.context[method](...args);\n    return this;\n  }\n  // --------------------------------------- GraphicsContext methods ---------------------------------------\n  /**\n   * Sets the current fill style of the graphics context. The fill style can be a color, gradient,\n   * pattern, or a more complex style defined by a FillStyle object.\n   * @param {FillInput} args - The fill style to apply. This can be a simple color, a gradient or\n   * pattern object, or a FillStyle or ConvertedFillStyle object.\n   * @returns The instance of the current GraphicsContext for method chaining.\n   */\n  setFillStyle(...args) {\n    return this._callContextMethod(\"setFillStyle\", args);\n  }\n  /**\n   * Sets the current stroke style of the graphics context. Similar to fill styles, stroke styles can\n   * encompass colors, gradients, patterns, or more detailed configurations via a StrokeStyle object.\n   * @param {StrokeInput} args - The stroke style to apply. Can be defined as a color, a gradient or pattern,\n   * or a StrokeStyle or ConvertedStrokeStyle object.\n   * @returns The instance of the current GraphicsContext for method chaining.\n   */\n  setStrokeStyle(...args) {\n    return this._callContextMethod(\"setStrokeStyle\", args);\n  }\n  fill(...args) {\n    return this._callContextMethod(\"fill\", args);\n  }\n  /**\n   * Strokes the current path with the current stroke style. This method can take an optional\n   * FillStyle parameter to define the stroke's appearance, including its color, width, and other properties.\n   * @param {FillStyle} args - (Optional) The stroke style to apply. Can be defined as a simple color or a more\n   * complex style object. If omitted, uses the current stroke style.\n   * @returns The instance of the current GraphicsContext for method chaining.\n   */\n  stroke(...args) {\n    return this._callContextMethod(\"stroke\", args);\n  }\n  texture(...args) {\n    return this._callContextMethod(\"texture\", args);\n  }\n  /**\n   * Resets the current path. Any previous path and its commands are discarded and a new path is\n   * started. This is typically called before beginning a new shape or series of drawing commands.\n   * @returns The instance of the current GraphicsContext for method chaining.\n   */\n  beginPath() {\n    return this._callContextMethod(\"beginPath\", []);\n  }\n  /**\n   * Applies a cutout to the last drawn shape. This is used to create holes or complex shapes by\n   * subtracting a path from the previously drawn path. If a hole is not completely in a shape, it will\n   * fail to cut correctly!\n   */\n  cut() {\n    return this._callContextMethod(\"cut\", []);\n  }\n  arc(...args) {\n    return this._callContextMethod(\"arc\", args);\n  }\n  arcTo(...args) {\n    return this._callContextMethod(\"arcTo\", args);\n  }\n  arcToSvg(...args) {\n    return this._callContextMethod(\"arcToSvg\", args);\n  }\n  bezierCurveTo(...args) {\n    return this._callContextMethod(\"bezierCurveTo\", args);\n  }\n  /**\n   * Closes the current path by drawing a straight line back to the start.\n   * If the shape is already closed or there are no points in the path, this method does nothing.\n   * @returns The instance of the current object for chaining.\n   */\n  closePath() {\n    return this._callContextMethod(\"closePath\", []);\n  }\n  ellipse(...args) {\n    return this._callContextMethod(\"ellipse\", args);\n  }\n  circle(...args) {\n    return this._callContextMethod(\"circle\", args);\n  }\n  path(...args) {\n    return this._callContextMethod(\"path\", args);\n  }\n  lineTo(...args) {\n    return this._callContextMethod(\"lineTo\", args);\n  }\n  moveTo(...args) {\n    return this._callContextMethod(\"moveTo\", args);\n  }\n  quadraticCurveTo(...args) {\n    return this._callContextMethod(\"quadraticCurveTo\", args);\n  }\n  rect(...args) {\n    return this._callContextMethod(\"rect\", args);\n  }\n  roundRect(...args) {\n    return this._callContextMethod(\"roundRect\", args);\n  }\n  poly(...args) {\n    return this._callContextMethod(\"poly\", args);\n  }\n  regularPoly(...args) {\n    return this._callContextMethod(\"regularPoly\", args);\n  }\n  roundPoly(...args) {\n    return this._callContextMethod(\"roundPoly\", args);\n  }\n  roundShape(...args) {\n    return this._callContextMethod(\"roundShape\", args);\n  }\n  filletRect(...args) {\n    return this._callContextMethod(\"filletRect\", args);\n  }\n  chamferRect(...args) {\n    return this._callContextMethod(\"chamferRect\", args);\n  }\n  star(...args) {\n    return this._callContextMethod(\"star\", args);\n  }\n  svg(...args) {\n    return this._callContextMethod(\"svg\", args);\n  }\n  restore(...args) {\n    return this._callContextMethod(\"restore\", args);\n  }\n  /** Saves the current graphics state, including transformations, fill styles, and stroke styles, onto a stack. */\n  save() {\n    return this._callContextMethod(\"save\", []);\n  }\n  /**\n   * Returns the current transformation matrix of the graphics context.\n   * @returns The current transformation matrix.\n   */\n  getTransform() {\n    return this.context.getTransform();\n  }\n  /**\n   * Resets the current transformation matrix to the identity matrix, effectively removing\n   * any transformations (rotation, scaling, translation) previously applied.\n   * @returns The instance of the current GraphicsContext for method chaining.\n   */\n  resetTransform() {\n    return this._callContextMethod(\"resetTransform\", []);\n  }\n  rotateTransform(...args) {\n    return this._callContextMethod(\"rotate\", args);\n  }\n  scaleTransform(...args) {\n    return this._callContextMethod(\"scale\", args);\n  }\n  setTransform(...args) {\n    return this._callContextMethod(\"setTransform\", args);\n  }\n  transform(...args) {\n    return this._callContextMethod(\"transform\", args);\n  }\n  translateTransform(...args) {\n    return this._callContextMethod(\"translate\", args);\n  }\n  /**\n   * Clears all drawing commands from the graphics context, effectively resetting it. This includes clearing the path,\n   * and optionally resetting transformations to the identity matrix.\n   * @returns The instance of the current GraphicsContext for method chaining.\n   */\n  clear() {\n    return this._callContextMethod(\"clear\", []);\n  }\n  /**\n   * The fill style to use.\n   * @type {ConvertedFillStyle}\n   */\n  get fillStyle() {\n    return this._context.fillStyle;\n  }\n  set fillStyle(value) {\n    this._context.fillStyle = value;\n  }\n  /**\n   * The stroke style to use.\n   * @type {ConvertedStrokeStyle}\n   */\n  get strokeStyle() {\n    return this._context.strokeStyle;\n  }\n  set strokeStyle(value) {\n    this._context.strokeStyle = value;\n  }\n  /**\n   * Creates a new Graphics object.\n   * Note that only the context of the object is cloned, not its transform (position,scale,etc)\n   * @param deep - Whether to create a deep clone of the graphics object. If false, the context\n   * will be shared between the two objects (default false). If true, the context will be\n   * cloned (recommended if you need to modify the context in any way).\n   * @returns - A clone of the graphics object\n   */\n  clone(deep = false) {\n    if (deep) {\n      return new Graphics(this._context.clone());\n    }\n    this._ownedContext = null;\n    const clone = new Graphics(this._context);\n    return clone;\n  }\n  // -------- v7 deprecations ---------\n  /**\n   * @param width\n   * @param color\n   * @param alpha\n   * @deprecated since 8.0.0 Use {@link Graphics#setStrokeStyle} instead\n   */\n  lineStyle(width, color, alpha) {\n    deprecation(v8_0_0, \"Graphics#lineStyle is no longer needed. Use Graphics#setStrokeStyle to set the stroke style.\");\n    const strokeStyle = {};\n    width && (strokeStyle.width = width);\n    color && (strokeStyle.color = color);\n    alpha && (strokeStyle.alpha = alpha);\n    this.context.strokeStyle = strokeStyle;\n    return this;\n  }\n  /**\n   * @param color\n   * @param alpha\n   * @deprecated since 8.0.0 Use {@link Graphics#fill} instead\n   */\n  beginFill(color, alpha) {\n    deprecation(v8_0_0, \"Graphics#beginFill is no longer needed. Use Graphics#fill to fill the shape with the desired style.\");\n    const fillStyle = {};\n    if (color !== void 0)\n      fillStyle.color = color;\n    if (alpha !== void 0)\n      fillStyle.alpha = alpha;\n    this.context.fillStyle = fillStyle;\n    return this;\n  }\n  /**\n   * @deprecated since 8.0.0 Use {@link Graphics#fill} instead\n   */\n  endFill() {\n    deprecation(v8_0_0, \"Graphics#endFill is no longer needed. Use Graphics#fill to fill the shape with the desired style.\");\n    this.context.fill();\n    const strokeStyle = this.context.strokeStyle;\n    if (strokeStyle.width !== GraphicsContext.defaultStrokeStyle.width || strokeStyle.color !== GraphicsContext.defaultStrokeStyle.color || strokeStyle.alpha !== GraphicsContext.defaultStrokeStyle.alpha) {\n      this.context.stroke();\n    }\n    return this;\n  }\n  /**\n   * @param {...any} args\n   * @deprecated since 8.0.0 Use {@link Graphics#circle} instead\n   */\n  drawCircle(...args) {\n    deprecation(v8_0_0, \"Graphics#drawCircle has been renamed to Graphics#circle\");\n    return this._callContextMethod(\"circle\", args);\n  }\n  /**\n   * @param {...any} args\n   * @deprecated since 8.0.0 Use {@link Graphics#ellipse} instead\n   */\n  drawEllipse(...args) {\n    deprecation(v8_0_0, \"Graphics#drawEllipse has been renamed to Graphics#ellipse\");\n    return this._callContextMethod(\"ellipse\", args);\n  }\n  /**\n   * @param {...any} args\n   * @deprecated since 8.0.0 Use {@link Graphics#poly} instead\n   */\n  drawPolygon(...args) {\n    deprecation(v8_0_0, \"Graphics#drawPolygon has been renamed to Graphics#poly\");\n    return this._callContextMethod(\"poly\", args);\n  }\n  /**\n   * @param {...any} args\n   * @deprecated since 8.0.0 Use {@link Graphics#rect} instead\n   */\n  drawRect(...args) {\n    deprecation(v8_0_0, \"Graphics#drawRect has been renamed to Graphics#rect\");\n    return this._callContextMethod(\"rect\", args);\n  }\n  /**\n   * @param {...any} args\n   * @deprecated since 8.0.0 Use {@link Graphics#roundRect} instead\n   */\n  drawRoundedRect(...args) {\n    deprecation(v8_0_0, \"Graphics#drawRoundedRect has been renamed to Graphics#roundRect\");\n    return this._callContextMethod(\"roundRect\", args);\n  }\n  /**\n   * @param {...any} args\n   * @deprecated since 8.0.0 Use {@link Graphics#star} instead\n   */\n  drawStar(...args) {\n    deprecation(v8_0_0, \"Graphics#drawStar has been renamed to Graphics#star\");\n    return this._callContextMethod(\"star\", args);\n  }\n}\n\nexport { Graphics };\n//# sourceMappingURL=Graphics.mjs.map\n","import { Buffer } from '../../../rendering/renderers/shared/buffer/Buffer.mjs';\nimport { BufferUsage } from '../../../rendering/renderers/shared/buffer/const.mjs';\nimport { Geometry } from '../../../rendering/renderers/shared/geometry/Geometry.mjs';\nimport { deprecation, v8_0_0 } from '../../../utils/logging/deprecation.mjs';\n\n\"use strict\";\nconst _MeshGeometry = class _MeshGeometry extends Geometry {\n  constructor(...args) {\n    let options = args[0] ?? {};\n    if (options instanceof Float32Array) {\n      deprecation(v8_0_0, \"use new MeshGeometry({ positions, uvs, indices }) instead\");\n      options = {\n        positions: options,\n        uvs: args[1],\n        indices: args[2]\n      };\n    }\n    options = { ..._MeshGeometry.defaultOptions, ...options };\n    const positions = options.positions || new Float32Array([0, 0, 1, 0, 1, 1, 0, 1]);\n    const uvs = options.uvs || new Float32Array([0, 0, 1, 0, 1, 1, 0, 1]);\n    const indices = options.indices || new Uint32Array([0, 1, 2, 0, 2, 3]);\n    const shrinkToFit = options.shrinkBuffersToFit;\n    const positionBuffer = new Buffer({\n      data: positions,\n      label: \"attribute-mesh-positions\",\n      shrinkToFit,\n      usage: BufferUsage.VERTEX | BufferUsage.COPY_DST\n    });\n    const uvBuffer = new Buffer({\n      data: uvs,\n      label: \"attribute-mesh-uvs\",\n      shrinkToFit,\n      usage: BufferUsage.VERTEX | BufferUsage.COPY_DST\n    });\n    const indexBuffer = new Buffer({\n      data: indices,\n      label: \"index-mesh-buffer\",\n      shrinkToFit,\n      usage: BufferUsage.INDEX | BufferUsage.COPY_DST\n    });\n    super({\n      attributes: {\n        aPosition: {\n          buffer: positionBuffer,\n          format: \"float32x2\",\n          stride: 2 * 4,\n          offset: 0\n        },\n        aUV: {\n          buffer: uvBuffer,\n          format: \"float32x2\",\n          stride: 2 * 4,\n          offset: 0\n        }\n      },\n      indexBuffer,\n      topology: options.topology\n    });\n    this.batchMode = \"auto\";\n  }\n  /** The positions of the mesh. */\n  get positions() {\n    return this.attributes.aPosition.buffer.data;\n  }\n  set positions(value) {\n    this.attributes.aPosition.buffer.data = value;\n  }\n  /** The UVs of the mesh. */\n  get uvs() {\n    return this.attributes.aUV.buffer.data;\n  }\n  set uvs(value) {\n    this.attributes.aUV.buffer.data = value;\n  }\n  /** The indices of the mesh. */\n  get indices() {\n    return this.indexBuffer.data;\n  }\n  set indices(value) {\n    this.indexBuffer.data = value;\n  }\n};\n_MeshGeometry.defaultOptions = {\n  topology: \"triangle-list\",\n  shrinkBuffersToFit: false\n};\nlet MeshGeometry = _MeshGeometry;\n\nexport { MeshGeometry };\n//# sourceMappingURL=MeshGeometry.mjs.map\n","import { Color } from '../../../color/Color.mjs';\n\n\"use strict\";\nfunction textStyleToCSS(style) {\n  const stroke = style._stroke;\n  const fill = style._fill;\n  const cssStyleString = [\n    `color: ${Color.shared.setValue(fill.color).toHex()}`,\n    `font-size: ${style.fontSize}px`,\n    `font-family: ${style.fontFamily}`,\n    `font-weight: ${style.fontWeight}`,\n    `font-style: ${style.fontStyle}`,\n    `font-variant: ${style.fontVariant}`,\n    `letter-spacing: ${style.letterSpacing}px`,\n    `text-align: ${style.align}`,\n    `padding: ${style.padding}px`,\n    `white-space: ${style.whiteSpace === \"pre\" && style.wordWrap ? \"pre-wrap\" : style.whiteSpace}`,\n    ...style.lineHeight ? [`line-height: ${style.lineHeight}px`] : [],\n    ...style.wordWrap ? [\n      `word-wrap: ${style.breakWords ? \"break-all\" : \"break-word\"}`,\n      `max-width: ${style.wordWrapWidth}px`\n    ] : [],\n    ...stroke ? [strokeToCSS(stroke)] : [],\n    ...style.dropShadow ? [dropShadowToCSS(style.dropShadow)] : [],\n    ...style.cssOverrides\n  ].join(\";\");\n  const cssStyles = [`div { ${cssStyleString} }`];\n  tagStyleToCSS(style.tagStyles, cssStyles);\n  return cssStyles.join(\" \");\n}\nfunction dropShadowToCSS(dropShadowStyle) {\n  const color = Color.shared.setValue(dropShadowStyle.color).setAlpha(dropShadowStyle.alpha).toHexa();\n  const x = Math.round(Math.cos(dropShadowStyle.angle) * dropShadowStyle.distance);\n  const y = Math.round(Math.sin(dropShadowStyle.angle) * dropShadowStyle.distance);\n  const position = `${x}px ${y}px`;\n  if (dropShadowStyle.blur > 0) {\n    return `text-shadow: ${position} ${dropShadowStyle.blur}px ${color}`;\n  }\n  return `text-shadow: ${position} ${color}`;\n}\nfunction strokeToCSS(stroke) {\n  return [\n    `-webkit-text-stroke-width: ${stroke.width}px`,\n    `-webkit-text-stroke-color: ${Color.shared.setValue(stroke.color).toHex()}`,\n    `text-stroke-width: ${stroke.width}px`,\n    `text-stroke-color: ${Color.shared.setValue(stroke.color).toHex()}`,\n    \"paint-order: stroke\"\n  ].join(\";\");\n}\nconst templates = {\n  fontSize: `font-size: {{VALUE}}px`,\n  fontFamily: `font-family: {{VALUE}}`,\n  fontWeight: `font-weight: {{VALUE}}`,\n  fontStyle: `font-style: {{VALUE}}`,\n  fontVariant: `font-variant: {{VALUE}}`,\n  letterSpacing: `letter-spacing: {{VALUE}}px`,\n  align: `text-align: {{VALUE}}`,\n  padding: `padding: {{VALUE}}px`,\n  whiteSpace: `white-space: {{VALUE}}`,\n  lineHeight: `line-height: {{VALUE}}px`,\n  wordWrapWidth: `max-width: {{VALUE}}px`\n};\nconst transform = {\n  fill: (value) => `color: ${Color.shared.setValue(value).toHex()}`,\n  breakWords: (value) => `word-wrap: ${value ? \"break-all\" : \"break-word\"}`,\n  stroke: strokeToCSS,\n  dropShadow: dropShadowToCSS\n};\nfunction tagStyleToCSS(tagStyles, out) {\n  for (const i in tagStyles) {\n    const tagStyle = tagStyles[i];\n    const cssTagStyle = [];\n    for (const j in tagStyle) {\n      if (transform[j]) {\n        cssTagStyle.push(transform[j](tagStyle[j]));\n      } else if (templates[j]) {\n        cssTagStyle.push(templates[j].replace(\"{{VALUE}}\", tagStyle[j]));\n      }\n    }\n    out.push(`${i} { ${cssTagStyle.join(\";\")} }`);\n  }\n}\n\nexport { textStyleToCSS };\n//# sourceMappingURL=textStyleToCSS.mjs.map\n","import { warn } from '../../utils/logging/warn.mjs';\nimport { TextStyle } from '../text/TextStyle.mjs';\nimport { generateTextStyleKey } from '../text/utils/generateTextStyleKey.mjs';\nimport { textStyleToCSS } from './utils/textStyleToCSS.mjs';\n\n\"use strict\";\nclass HTMLTextStyle extends TextStyle {\n  constructor(options = {}) {\n    super(options);\n    this._cssOverrides = [];\n    this.cssOverrides ?? (this.cssOverrides = options.cssOverrides);\n    this.tagStyles = options.tagStyles ?? {};\n  }\n  /** List of style overrides that will be applied to the HTML text. */\n  set cssOverrides(value) {\n    this._cssOverrides = value instanceof Array ? value : [value];\n    this.update();\n  }\n  get cssOverrides() {\n    return this._cssOverrides;\n  }\n  _generateKey() {\n    this._styleKey = generateTextStyleKey(this) + this._cssOverrides.join(\"-\");\n    return this._styleKey;\n  }\n  update() {\n    this._cssStyle = null;\n    super.update();\n  }\n  /**\n   * Creates a new HTMLTextStyle object with the same values as this one.\n   * @returns New cloned HTMLTextStyle object\n   */\n  clone() {\n    return new HTMLTextStyle({\n      align: this.align,\n      breakWords: this.breakWords,\n      dropShadow: this.dropShadow ? { ...this.dropShadow } : null,\n      fill: this._fill,\n      fontFamily: this.fontFamily,\n      fontSize: this.fontSize,\n      fontStyle: this.fontStyle,\n      fontVariant: this.fontVariant,\n      fontWeight: this.fontWeight,\n      letterSpacing: this.letterSpacing,\n      lineHeight: this.lineHeight,\n      padding: this.padding,\n      stroke: this._stroke,\n      whiteSpace: this.whiteSpace,\n      wordWrap: this.wordWrap,\n      wordWrapWidth: this.wordWrapWidth,\n      cssOverrides: this.cssOverrides\n    });\n  }\n  get cssStyle() {\n    if (!this._cssStyle) {\n      this._cssStyle = textStyleToCSS(this);\n    }\n    return this._cssStyle;\n  }\n  /**\n   * Add a style override, this can be any CSS property\n   * it will override any built-in style. This is the\n   * property and the value as a string (e.g., `color: red`).\n   * This will override any other internal style.\n   * @param {string} value - CSS style(s) to add.\n   * @example\n   * style.addOverride('background-color: red');\n   */\n  addOverride(...value) {\n    const toAdd = value.filter((v) => !this.cssOverrides.includes(v));\n    if (toAdd.length > 0) {\n      this.cssOverrides.push(...toAdd);\n      this.update();\n    }\n  }\n  /**\n   * Remove any overrides that match the value.\n   * @param {string} value - CSS style to remove.\n   * @example\n   * style.removeOverride('background-color: red');\n   */\n  removeOverride(...value) {\n    const toRemove = value.filter((v) => this.cssOverrides.includes(v));\n    if (toRemove.length > 0) {\n      this.cssOverrides = this.cssOverrides.filter((v) => !toRemove.includes(v));\n      this.update();\n    }\n  }\n  set fill(value) {\n    if (typeof value !== \"string\" && typeof value !== \"number\") {\n      warn(\"[HTMLTextStyle] only color fill is not supported by HTMLText\");\n    }\n    super.fill = value;\n  }\n  set stroke(value) {\n    if (value && typeof value !== \"string\" && typeof value !== \"number\") {\n      warn(\"[HTMLTextStyle] only color stroke is not supported by HTMLText\");\n    }\n    super.stroke = value;\n  }\n}\n\nexport { HTMLTextStyle };\n//# sourceMappingURL=HTMLTextStyle.mjs.map\n","\"use strict\";\nconst nssvg = \"http://www.w3.org/2000/svg\";\nconst nsxhtml = \"http://www.w3.org/1999/xhtml\";\nclass HTMLTextRenderData {\n  constructor() {\n    this.svgRoot = document.createElementNS(nssvg, \"svg\");\n    this.foreignObject = document.createElementNS(nssvg, \"foreignObject\");\n    this.domElement = document.createElementNS(nsxhtml, \"div\");\n    this.styleElement = document.createElementNS(nsxhtml, \"style\");\n    this.image = new Image();\n    const { foreignObject, svgRoot, styleElement, domElement } = this;\n    foreignObject.setAttribute(\"width\", \"10000\");\n    foreignObject.setAttribute(\"height\", \"10000\");\n    foreignObject.style.overflow = \"hidden\";\n    svgRoot.appendChild(foreignObject);\n    foreignObject.appendChild(styleElement);\n    foreignObject.appendChild(domElement);\n  }\n}\n\nexport { HTMLTextRenderData, nssvg, nsxhtml };\n//# sourceMappingURL=HTMLTextRenderData.mjs.map\n","import { HTMLTextRenderData } from '../HTMLTextRenderData.mjs';\n\n\"use strict\";\nlet tempHTMLTextRenderData;\nfunction measureHtmlText(text, style, fontStyleCSS, htmlTextRenderData) {\n  htmlTextRenderData || (htmlTextRenderData = tempHTMLTextRenderData || (tempHTMLTextRenderData = new HTMLTextRenderData()));\n  const { domElement, styleElement, svgRoot } = htmlTextRenderData;\n  domElement.innerHTML = `<style>${style.cssStyle};</style><div style='padding:0'>${text}</div>`;\n  domElement.setAttribute(\"style\", \"transform-origin: top left; display: inline-block\");\n  if (fontStyleCSS) {\n    styleElement.textContent = fontStyleCSS;\n  }\n  document.body.appendChild(svgRoot);\n  const contentBounds = domElement.getBoundingClientRect();\n  svgRoot.remove();\n  const doublePadding = style.padding * 2;\n  return {\n    width: contentBounds.width - doublePadding,\n    height: contentBounds.height - doublePadding\n  };\n}\n\nexport { measureHtmlText };\n//# sourceMappingURL=measureHtmlText.mjs.map\n","\"use strict\";\nconst localUniformBit = {\n  name: \"local-uniform-bit\",\n  vertex: {\n    header: (\n      /* wgsl */\n      `\n\n            struct LocalUniforms {\n                uTransformMatrix:mat3x3<f32>,\n                uColor:vec4<f32>,\n                uRound:f32,\n            }\n\n            @group(1) @binding(0) var<uniform> localUniforms : LocalUniforms;\n        `\n    ),\n    main: (\n      /* wgsl */\n      `\n            vColor *= localUniforms.uColor;\n            modelMatrix *= localUniforms.uTransformMatrix;\n        `\n    ),\n    end: (\n      /* wgsl */\n      `\n            if(localUniforms.uRound == 1)\n            {\n                vPosition = vec4(roundPixels(vPosition.xy, globalUniforms.uResolution), vPosition.zw);\n            }\n        `\n    )\n  }\n};\nconst localUniformBitGroup2 = {\n  ...localUniformBit,\n  vertex: {\n    ...localUniformBit.vertex,\n    // replace the group!\n    header: localUniformBit.vertex.header.replace(\"group(1)\", \"group(2)\")\n  }\n};\nconst localUniformBitGl = {\n  name: \"local-uniform-bit\",\n  vertex: {\n    header: (\n      /* glsl */\n      `\n\n            uniform mat3 uTransformMatrix;\n            uniform vec4 uColor;\n            uniform float uRound;\n        `\n    ),\n    main: (\n      /* glsl */\n      `\n            vColor *= uColor;\n            modelMatrix = uTransformMatrix;\n        `\n    ),\n    end: (\n      /* glsl */\n      `\n            if(uRound == 1.)\n            {\n                gl_Position.xy = roundPixels(gl_Position.xy, uResolution);\n            }\n        `\n    )\n  }\n};\n\nexport { localUniformBit, localUniformBitGl, localUniformBitGroup2 };\n//# sourceMappingURL=localUniformBit.mjs.map\n","\"use strict\";\nclass BatchableSprite {\n  constructor() {\n    this.batcherName = \"default\";\n    this.topology = \"triangle-list\";\n    // batch specific..\n    this.attributeSize = 4;\n    this.indexSize = 6;\n    this.packAsQuad = true;\n    this.roundPixels = 0;\n    this._attributeStart = 0;\n    // location in the buffer\n    this._batcher = null;\n    this._batch = null;\n  }\n  get blendMode() {\n    return this.renderable.groupBlendMode;\n  }\n  get color() {\n    return this.renderable.groupColorAlpha;\n  }\n  reset() {\n    this.renderable = null;\n    this.texture = null;\n    this._batcher = null;\n    this._batch = null;\n    this.bounds = null;\n  }\n}\n\nexport { BatchableSprite };\n//# sourceMappingURL=BatchableSprite.mjs.map\n","\"use strict\";\nfunction colorToUniform(rgb, alpha, out, offset) {\n  out[offset++] = (rgb >> 16 & 255) / 255;\n  out[offset++] = (rgb >> 8 & 255) / 255;\n  out[offset++] = (rgb & 255) / 255;\n  out[offset++] = alpha;\n}\nfunction color32BitToUniform(abgr, out, offset) {\n  const alpha = (abgr >> 24 & 255) / 255;\n  out[offset++] = (abgr & 255) / 255 * alpha;\n  out[offset++] = (abgr >> 8 & 255) / 255 * alpha;\n  out[offset++] = (abgr >> 16 & 255) / 255 * alpha;\n  out[offset++] = alpha;\n}\n\nexport { color32BitToUniform, colorToUniform };\n//# sourceMappingURL=colorToUniform.mjs.map\n","import { ExtensionType } from '../../../extensions/Extensions.mjs';\nimport { State } from '../../../rendering/renderers/shared/state/State.mjs';\nimport { BigPool } from '../../../utils/pool/PoolGroup.mjs';\nimport { color32BitToUniform } from '../gpu/colorToUniform.mjs';\nimport { BatchableGraphics } from './BatchableGraphics.mjs';\n\n\"use strict\";\nclass GraphicsPipe {\n  constructor(renderer, adaptor) {\n    this.state = State.for2d();\n    // batchable graphics list, used to render batches\n    this._graphicsBatchesHash = /* @__PURE__ */ Object.create(null);\n    this._destroyRenderableBound = this.destroyRenderable.bind(this);\n    this.renderer = renderer;\n    this._adaptor = adaptor;\n    this._adaptor.init();\n    this.renderer.renderableGC.addManagedHash(this, \"_graphicsBatchesHash\");\n  }\n  validateRenderable(graphics) {\n    const context = graphics.context;\n    const wasBatched = !!this._graphicsBatchesHash[graphics.uid];\n    const gpuContext = this.renderer.graphicsContext.updateGpuContext(context);\n    if (gpuContext.isBatchable || wasBatched !== gpuContext.isBatchable) {\n      return true;\n    }\n    return false;\n  }\n  addRenderable(graphics, instructionSet) {\n    const gpuContext = this.renderer.graphicsContext.updateGpuContext(graphics.context);\n    if (graphics.didViewUpdate) {\n      this._rebuild(graphics);\n    }\n    if (gpuContext.isBatchable) {\n      this._addToBatcher(graphics, instructionSet);\n    } else {\n      this.renderer.renderPipes.batch.break(instructionSet);\n      instructionSet.add(graphics);\n    }\n  }\n  updateRenderable(graphics) {\n    const batches = this._graphicsBatchesHash[graphics.uid];\n    if (batches) {\n      for (let i = 0; i < batches.length; i++) {\n        const batch = batches[i];\n        batch._batcher.updateElement(batch);\n      }\n    }\n  }\n  destroyRenderable(graphics) {\n    if (this._graphicsBatchesHash[graphics.uid]) {\n      this._removeBatchForRenderable(graphics.uid);\n    }\n    graphics.off(\"destroyed\", this._destroyRenderableBound);\n  }\n  execute(graphics) {\n    if (!graphics.isRenderable)\n      return;\n    const renderer = this.renderer;\n    const context = graphics.context;\n    const contextSystem = renderer.graphicsContext;\n    if (!contextSystem.getGpuContext(context).batches.length) {\n      return;\n    }\n    const shader = context.customShader || this._adaptor.shader;\n    this.state.blendMode = graphics.groupBlendMode;\n    const localUniforms = shader.resources.localUniforms.uniforms;\n    localUniforms.uTransformMatrix = graphics.groupTransform;\n    localUniforms.uRound = renderer._roundPixels | graphics._roundPixels;\n    color32BitToUniform(\n      graphics.groupColorAlpha,\n      localUniforms.uColor,\n      0\n    );\n    this._adaptor.execute(this, graphics);\n  }\n  _rebuild(graphics) {\n    const wasBatched = !!this._graphicsBatchesHash[graphics.uid];\n    const gpuContext = this.renderer.graphicsContext.updateGpuContext(graphics.context);\n    if (wasBatched) {\n      this._removeBatchForRenderable(graphics.uid);\n    }\n    if (gpuContext.isBatchable) {\n      this._initBatchesForRenderable(graphics);\n    }\n    graphics.batched = gpuContext.isBatchable;\n  }\n  _addToBatcher(graphics, instructionSet) {\n    const batchPipe = this.renderer.renderPipes.batch;\n    const batches = this._getBatchesForRenderable(graphics);\n    for (let i = 0; i < batches.length; i++) {\n      const batch = batches[i];\n      batchPipe.addToBatch(batch, instructionSet);\n    }\n  }\n  _getBatchesForRenderable(graphics) {\n    return this._graphicsBatchesHash[graphics.uid] || this._initBatchesForRenderable(graphics);\n  }\n  _initBatchesForRenderable(graphics) {\n    const context = graphics.context;\n    const gpuContext = this.renderer.graphicsContext.getGpuContext(context);\n    const roundPixels = this.renderer._roundPixels | graphics._roundPixels;\n    const batches = gpuContext.batches.map((batch) => {\n      const batchClone = BigPool.get(BatchableGraphics);\n      batch.copyTo(batchClone);\n      batchClone.renderable = graphics;\n      batchClone.roundPixels = roundPixels;\n      return batchClone;\n    });\n    if (this._graphicsBatchesHash[graphics.uid] === void 0) {\n      graphics.on(\"destroyed\", this._destroyRenderableBound);\n    }\n    this._graphicsBatchesHash[graphics.uid] = batches;\n    return batches;\n  }\n  _removeBatchForRenderable(graphicsUid) {\n    this._graphicsBatchesHash[graphicsUid].forEach((batch) => {\n      BigPool.return(batch);\n    });\n    this._graphicsBatchesHash[graphicsUid] = null;\n  }\n  destroy() {\n    this.renderer = null;\n    this._adaptor.destroy();\n    this._adaptor = null;\n    this.state = null;\n    for (const i in this._graphicsBatchesHash) {\n      this._removeBatchForRenderable(i);\n    }\n    this._graphicsBatchesHash = null;\n  }\n}\n/** @ignore */\nGraphicsPipe.extension = {\n  type: [\n    ExtensionType.WebGLPipes,\n    ExtensionType.WebGPUPipes,\n    ExtensionType.CanvasPipes\n  ],\n  name: \"graphics\"\n};\n\nexport { GraphicsPipe };\n//# sourceMappingURL=GraphicsPipe.mjs.map\n","import { deprecation, v8_0_0 } from '../../utils/logging/deprecation.mjs';\nimport { MeshGeometry } from '../mesh/shared/MeshGeometry.mjs';\n\n\"use strict\";\nconst _PlaneGeometry = class _PlaneGeometry extends MeshGeometry {\n  constructor(...args) {\n    super({});\n    let options = args[0] ?? {};\n    if (typeof options === \"number\") {\n      deprecation(v8_0_0, \"PlaneGeometry constructor changed please use { width, height, verticesX, verticesY } instead\");\n      options = {\n        width: options,\n        height: args[1],\n        verticesX: args[2],\n        verticesY: args[3]\n      };\n    }\n    this.build(options);\n  }\n  /**\n   * Refreshes plane coordinates\n   * @param options - Options to be applied to plane geometry\n   */\n  build(options) {\n    options = { ..._PlaneGeometry.defaultOptions, ...options };\n    this.verticesX = this.verticesX ?? options.verticesX;\n    this.verticesY = this.verticesY ?? options.verticesY;\n    this.width = this.width ?? options.width;\n    this.height = this.height ?? options.height;\n    const total = this.verticesX * this.verticesY;\n    const verts = [];\n    const uvs = [];\n    const indices = [];\n    const verticesX = this.verticesX - 1;\n    const verticesY = this.verticesY - 1;\n    const sizeX = this.width / verticesX;\n    const sizeY = this.height / verticesY;\n    for (let i = 0; i < total; i++) {\n      const x = i % this.verticesX;\n      const y = i / this.verticesX | 0;\n      verts.push(x * sizeX, y * sizeY);\n      uvs.push(x / verticesX, y / verticesY);\n    }\n    const totalSub = verticesX * verticesY;\n    for (let i = 0; i < totalSub; i++) {\n      const xpos = i % verticesX;\n      const ypos = i / verticesX | 0;\n      const value = ypos * this.verticesX + xpos;\n      const value2 = ypos * this.verticesX + xpos + 1;\n      const value3 = (ypos + 1) * this.verticesX + xpos;\n      const value4 = (ypos + 1) * this.verticesX + xpos + 1;\n      indices.push(\n        value,\n        value2,\n        value3,\n        value2,\n        value4,\n        value3\n      );\n    }\n    this.buffers[0].data = new Float32Array(verts);\n    this.buffers[1].data = new Float32Array(uvs);\n    this.indexBuffer.data = new Uint32Array(indices);\n    this.buffers[0].update();\n    this.buffers[1].update();\n    this.indexBuffer.update();\n  }\n};\n_PlaneGeometry.defaultOptions = {\n  width: 100,\n  height: 100,\n  verticesX: 10,\n  verticesY: 10\n};\nlet PlaneGeometry = _PlaneGeometry;\n\nexport { PlaneGeometry };\n//# sourceMappingURL=PlaneGeometry.mjs.map\n","\"use strict\";\nclass BatchableMesh {\n  constructor() {\n    this.batcherName = \"default\";\n    this.packAsQuad = false;\n    this.indexOffset = 0;\n    this.attributeOffset = 0;\n    this.roundPixels = 0;\n    this._batcher = null;\n    this._batch = null;\n    this._uvUpdateId = -1;\n    this._textureMatrixUpdateId = -1;\n  }\n  get blendMode() {\n    return this.renderable.groupBlendMode;\n  }\n  get topology() {\n    return this._topology || this.geometry.topology;\n  }\n  set topology(value) {\n    this._topology = value;\n  }\n  reset() {\n    this.renderable = null;\n    this.texture = null;\n    this._batcher = null;\n    this._batch = null;\n    this.geometry = null;\n    this._uvUpdateId = -1;\n    this._textureMatrixUpdateId = -1;\n  }\n  get uvs() {\n    const geometry = this.geometry;\n    const uvBuffer = geometry.getBuffer(\"aUV\");\n    const uvs = uvBuffer.data;\n    let transformedUvs = uvs;\n    const textureMatrix = this.texture.textureMatrix;\n    if (!textureMatrix.isSimple) {\n      transformedUvs = this._transformedUvs;\n      if (this._textureMatrixUpdateId !== textureMatrix._updateID || this._uvUpdateId !== uvBuffer._updateID) {\n        if (!transformedUvs || transformedUvs.length < uvs.length) {\n          transformedUvs = this._transformedUvs = new Float32Array(uvs.length);\n        }\n        this._textureMatrixUpdateId = textureMatrix._updateID;\n        this._uvUpdateId = uvBuffer._updateID;\n        textureMatrix.multiplyUvs(uvs, transformedUvs);\n      }\n    }\n    return transformedUvs;\n  }\n  get positions() {\n    return this.geometry.positions;\n  }\n  get indices() {\n    return this.geometry.indices;\n  }\n  get color() {\n    return this.renderable.groupColorAlpha;\n  }\n  get groupTransform() {\n    return this.renderable.groupTransform;\n  }\n  get attributeSize() {\n    return this.geometry.positions.length / 2;\n  }\n  get indexSize() {\n    return this.geometry.indices.length;\n  }\n}\n\nexport { BatchableMesh };\n//# sourceMappingURL=BatchableMesh.mjs.map\n","import { ExtensionType } from '../../../extensions/Extensions.mjs';\nimport { Matrix } from '../../../maths/matrix/Matrix.mjs';\nimport { BindGroup } from '../../../rendering/renderers/gpu/shader/BindGroup.mjs';\nimport { UniformGroup } from '../../../rendering/renderers/shared/shader/UniformGroup.mjs';\nimport { getAdjustedBlendModeBlend } from '../../../rendering/renderers/shared/state/getAdjustedBlendModeBlend.mjs';\nimport { BigPool } from '../../../utils/pool/PoolGroup.mjs';\nimport { color32BitToUniform } from '../../graphics/gpu/colorToUniform.mjs';\nimport { BatchableMesh } from './BatchableMesh.mjs';\n\n\"use strict\";\nclass MeshPipe {\n  constructor(renderer, adaptor) {\n    this.localUniforms = new UniformGroup({\n      uTransformMatrix: { value: new Matrix(), type: \"mat3x3<f32>\" },\n      uColor: { value: new Float32Array([1, 1, 1, 1]), type: \"vec4<f32>\" },\n      uRound: { value: 0, type: \"f32\" }\n    });\n    this.localUniformsBindGroup = new BindGroup({\n      0: this.localUniforms\n    });\n    this._meshDataHash = /* @__PURE__ */ Object.create(null);\n    this._gpuBatchableMeshHash = /* @__PURE__ */ Object.create(null);\n    this._destroyRenderableBound = this.destroyRenderable.bind(this);\n    this.renderer = renderer;\n    this._adaptor = adaptor;\n    this._adaptor.init();\n    renderer.renderableGC.addManagedHash(this, \"_gpuBatchableMeshHash\");\n    renderer.renderableGC.addManagedHash(this, \"_meshDataHash\");\n  }\n  validateRenderable(mesh) {\n    const meshData = this._getMeshData(mesh);\n    const wasBatched = meshData.batched;\n    const isBatched = mesh.batched;\n    meshData.batched = isBatched;\n    if (wasBatched !== isBatched) {\n      return true;\n    } else if (isBatched) {\n      const geometry = mesh._geometry;\n      if (geometry.indices.length !== meshData.indexSize || geometry.positions.length !== meshData.vertexSize) {\n        meshData.indexSize = geometry.indices.length;\n        meshData.vertexSize = geometry.positions.length;\n        return true;\n      }\n      const batchableMesh = this._getBatchableMesh(mesh);\n      return !batchableMesh._batcher.checkAndUpdateTexture(\n        batchableMesh,\n        mesh.texture\n      );\n    }\n    return false;\n  }\n  addRenderable(mesh, instructionSet) {\n    const batcher = this.renderer.renderPipes.batch;\n    const { batched } = this._getMeshData(mesh);\n    if (batched) {\n      const gpuBatchableMesh = this._getBatchableMesh(mesh);\n      gpuBatchableMesh.texture = mesh._texture;\n      gpuBatchableMesh.geometry = mesh._geometry;\n      batcher.addToBatch(gpuBatchableMesh, instructionSet);\n    } else {\n      batcher.break(instructionSet);\n      instructionSet.add(mesh);\n    }\n  }\n  updateRenderable(mesh) {\n    if (mesh.batched) {\n      const gpuBatchableMesh = this._gpuBatchableMeshHash[mesh.uid];\n      gpuBatchableMesh.texture = mesh._texture;\n      gpuBatchableMesh.geometry = mesh._geometry;\n      gpuBatchableMesh._batcher.updateElement(gpuBatchableMesh);\n    }\n  }\n  destroyRenderable(mesh) {\n    this._meshDataHash[mesh.uid] = null;\n    const gpuMesh = this._gpuBatchableMeshHash[mesh.uid];\n    if (gpuMesh) {\n      BigPool.return(gpuMesh);\n      this._gpuBatchableMeshHash[mesh.uid] = null;\n    }\n    mesh.off(\"destroyed\", this._destroyRenderableBound);\n  }\n  execute(mesh) {\n    if (!mesh.isRenderable)\n      return;\n    mesh.state.blendMode = getAdjustedBlendModeBlend(mesh.groupBlendMode, mesh.texture._source);\n    const localUniforms = this.localUniforms;\n    localUniforms.uniforms.uTransformMatrix = mesh.groupTransform;\n    localUniforms.uniforms.uRound = this.renderer._roundPixels | mesh._roundPixels;\n    localUniforms.update();\n    color32BitToUniform(\n      mesh.groupColorAlpha,\n      localUniforms.uniforms.uColor,\n      0\n    );\n    this._adaptor.execute(this, mesh);\n  }\n  _getMeshData(mesh) {\n    return this._meshDataHash[mesh.uid] || this._initMeshData(mesh);\n  }\n  _initMeshData(mesh) {\n    this._meshDataHash[mesh.uid] = {\n      batched: mesh.batched,\n      indexSize: mesh._geometry.indices?.length,\n      vertexSize: mesh._geometry.positions?.length\n    };\n    mesh.on(\"destroyed\", this._destroyRenderableBound);\n    return this._meshDataHash[mesh.uid];\n  }\n  _getBatchableMesh(mesh) {\n    return this._gpuBatchableMeshHash[mesh.uid] || this._initBatchableMesh(mesh);\n  }\n  _initBatchableMesh(mesh) {\n    const gpuMesh = BigPool.get(BatchableMesh);\n    gpuMesh.renderable = mesh;\n    gpuMesh.texture = mesh._texture;\n    gpuMesh.transform = mesh.groupTransform;\n    gpuMesh.roundPixels = this.renderer._roundPixels | mesh._roundPixels;\n    this._gpuBatchableMeshHash[mesh.uid] = gpuMesh;\n    return gpuMesh;\n  }\n  destroy() {\n    for (const i in this._gpuBatchableMeshHash) {\n      if (this._gpuBatchableMeshHash[i]) {\n        BigPool.return(this._gpuBatchableMeshHash[i]);\n      }\n    }\n    this._gpuBatchableMeshHash = null;\n    this._meshDataHash = null;\n    this.localUniforms = null;\n    this.localUniformsBindGroup = null;\n    this._adaptor.destroy();\n    this._adaptor = null;\n    this.renderer = null;\n  }\n}\n/** @ignore */\nMeshPipe.extension = {\n  type: [\n    ExtensionType.WebGLPipes,\n    ExtensionType.WebGPUPipes,\n    ExtensionType.CanvasPipes\n  ],\n  name: \"mesh\"\n};\n\nexport { MeshPipe };\n//# sourceMappingURL=MeshPipe.mjs.map\n","\"use strict\";\nclass GlParticleContainerAdaptor {\n  execute(particleContainerPipe, container) {\n    const state = particleContainerPipe.state;\n    const renderer = particleContainerPipe.renderer;\n    const shader = container.shader || particleContainerPipe.defaultShader;\n    shader.resources.uTexture = container.texture._source;\n    shader.resources.uniforms = particleContainerPipe.localUniforms;\n    const gl = renderer.gl;\n    const buffer = particleContainerPipe.getBuffers(container);\n    renderer.shader.bind(shader);\n    renderer.state.set(state);\n    renderer.geometry.bind(buffer.geometry, shader.glProgram);\n    const byteSize = buffer.geometry.indexBuffer.data.BYTES_PER_ELEMENT;\n    const glType = byteSize === 2 ? gl.UNSIGNED_SHORT : gl.UNSIGNED_INT;\n    gl.drawElements(gl.TRIANGLES, container.particleChildren.length * 6, glType, 0);\n  }\n}\n\nexport { GlParticleContainerAdaptor };\n//# sourceMappingURL=GlParticleContainerAdaptor.mjs.map\n","\"use strict\";\nclass GpuParticleContainerAdaptor {\n  execute(particleContainerPipe, container) {\n    const renderer = particleContainerPipe.renderer;\n    const shader = container.shader || particleContainerPipe.defaultShader;\n    shader.groups[0] = renderer.renderPipes.uniformBatch.getUniformBindGroup(particleContainerPipe.localUniforms, true);\n    shader.groups[1] = renderer.texture.getTextureBindGroup(container.texture);\n    const state = particleContainerPipe.state;\n    const buffer = particleContainerPipe.getBuffers(container);\n    renderer.encoder.draw({\n      geometry: buffer.geometry,\n      shader: container.shader || particleContainerPipe.defaultShader,\n      state,\n      size: container.particleChildren.length * 6\n    });\n  }\n}\n\nexport { GpuParticleContainerAdaptor };\n//# sourceMappingURL=GpuParticleContainerAdaptor.mjs.map\n","\"use strict\";\nfunction createIndicesForQuads(size, outBuffer = null) {\n  const totalIndices = size * 6;\n  if (totalIndices > 65535) {\n    outBuffer || (outBuffer = new Uint32Array(totalIndices));\n  } else {\n    outBuffer || (outBuffer = new Uint16Array(totalIndices));\n  }\n  if (outBuffer.length !== totalIndices) {\n    throw new Error(`Out buffer length is incorrect, got ${outBuffer.length} and expected ${totalIndices}`);\n  }\n  for (let i = 0, j = 0; i < totalIndices; i += 6, j += 4) {\n    outBuffer[i + 0] = j + 0;\n    outBuffer[i + 1] = j + 1;\n    outBuffer[i + 2] = j + 2;\n    outBuffer[i + 3] = j + 0;\n    outBuffer[i + 4] = j + 2;\n    outBuffer[i + 5] = j + 3;\n  }\n  return outBuffer;\n}\n\nexport { createIndicesForQuads };\n//# sourceMappingURL=createIndicesForQuads.mjs.map\n","import { getAttributeInfoFromFormat } from '../../../../rendering/renderers/shared/geometry/utils/getAttributeInfoFromFormat.mjs';\n\n\"use strict\";\nfunction generateParticleUpdateFunction(properties) {\n  return {\n    dynamicUpdate: generateUpdateFunction(properties, true),\n    staticUpdate: generateUpdateFunction(properties, false)\n  };\n}\nfunction generateUpdateFunction(properties, dynamic) {\n  const funcFragments = [];\n  funcFragments.push(`\n      \n        var index = 0;\n\n        for (let i = 0; i < ps.length; ++i)\n        {\n            const p = ps[i];\n\n            `);\n  let offset = 0;\n  for (const i in properties) {\n    const property = properties[i];\n    if (dynamic !== property.dynamic)\n      continue;\n    funcFragments.push(`offset = index + ${offset}`);\n    funcFragments.push(property.code);\n    const attributeInfo = getAttributeInfoFromFormat(property.format);\n    offset += attributeInfo.stride / 4;\n  }\n  funcFragments.push(`\n            index += stride * 4;\n        }\n    `);\n  funcFragments.unshift(`\n        var stride = ${offset};\n    `);\n  const functionSource = funcFragments.join(\"\\n\");\n  return new Function(\"ps\", \"f32v\", \"u32v\", functionSource);\n}\n\nexport { generateParticleUpdateFunction };\n//# sourceMappingURL=generateParticleUpdateFunction.mjs.map\n","import { Buffer } from '../../../rendering/renderers/shared/buffer/Buffer.mjs';\nimport { BufferUsage } from '../../../rendering/renderers/shared/buffer/const.mjs';\nimport { Geometry } from '../../../rendering/renderers/shared/geometry/Geometry.mjs';\nimport { getAttributeInfoFromFormat } from '../../../rendering/renderers/shared/geometry/utils/getAttributeInfoFromFormat.mjs';\nimport { ViewableBuffer } from '../../../utils/data/ViewableBuffer.mjs';\nimport { createIndicesForQuads } from './utils/createIndicesForQuads.mjs';\nimport { generateParticleUpdateFunction } from './utils/generateParticleUpdateFunction.mjs';\n\n\"use strict\";\nclass ParticleBuffer {\n  constructor(options) {\n    this._size = 0;\n    this._generateParticleUpdateCache = {};\n    const size = this._size = options.size ?? 1e3;\n    const properties = options.properties;\n    let staticVertexSize = 0;\n    let dynamicVertexSize = 0;\n    for (const i in properties) {\n      const property = properties[i];\n      const attributeInfo = getAttributeInfoFromFormat(property.format);\n      if (property.dynamic) {\n        dynamicVertexSize += attributeInfo.stride;\n      } else {\n        staticVertexSize += attributeInfo.stride;\n      }\n    }\n    this._dynamicStride = dynamicVertexSize / 4;\n    this._staticStride = staticVertexSize / 4;\n    this.staticAttributeBuffer = new ViewableBuffer(size * 4 * staticVertexSize);\n    this.dynamicAttributeBuffer = new ViewableBuffer(size * 4 * dynamicVertexSize);\n    this.indexBuffer = createIndicesForQuads(size);\n    const geometry = new Geometry();\n    let dynamicOffset = 0;\n    let staticOffset = 0;\n    this._staticBuffer = new Buffer({\n      data: new Float32Array(1),\n      label: \"static-particle-buffer\",\n      shrinkToFit: false,\n      usage: BufferUsage.VERTEX | BufferUsage.COPY_DST\n    });\n    this._dynamicBuffer = new Buffer({\n      data: new Float32Array(1),\n      label: \"dynamic-particle-buffer\",\n      shrinkToFit: false,\n      usage: BufferUsage.VERTEX | BufferUsage.COPY_DST\n    });\n    for (const i in properties) {\n      const property = properties[i];\n      const attributeInfo = getAttributeInfoFromFormat(property.format);\n      if (property.dynamic) {\n        geometry.addAttribute(property.attributeName, {\n          buffer: this._dynamicBuffer,\n          stride: this._dynamicStride * 4,\n          offset: dynamicOffset * 4,\n          format: property.format\n        });\n        dynamicOffset += attributeInfo.size;\n      } else {\n        geometry.addAttribute(property.attributeName, {\n          buffer: this._staticBuffer,\n          stride: this._staticStride * 4,\n          offset: staticOffset * 4,\n          format: property.format\n        });\n        staticOffset += attributeInfo.size;\n      }\n    }\n    geometry.addIndex(this.indexBuffer);\n    const uploadFunction = this.getParticleUpdate(properties);\n    this._dynamicUpload = uploadFunction.dynamicUpdate;\n    this._staticUpload = uploadFunction.staticUpdate;\n    this.geometry = geometry;\n  }\n  getParticleUpdate(properties) {\n    const key = getParticleSyncKey(properties);\n    if (this._generateParticleUpdateCache[key]) {\n      return this._generateParticleUpdateCache[key];\n    }\n    this._generateParticleUpdateCache[key] = this.generateParticleUpdate(properties);\n    return this._generateParticleUpdateCache[key];\n  }\n  generateParticleUpdate(properties) {\n    return generateParticleUpdateFunction(properties);\n  }\n  update(particles, uploadStatic) {\n    if (particles.length > this._size) {\n      uploadStatic = true;\n      this._size = Math.max(particles.length, this._size * 1.5 | 0);\n      this.staticAttributeBuffer = new ViewableBuffer(this._size * this._staticStride * 4 * 4);\n      this.dynamicAttributeBuffer = new ViewableBuffer(this._size * this._dynamicStride * 4 * 4);\n      this.indexBuffer = createIndicesForQuads(this._size);\n      this.geometry.indexBuffer.setDataWithSize(\n        this.indexBuffer,\n        this.indexBuffer.byteLength,\n        true\n      );\n    }\n    const dynamicAttributeBuffer = this.dynamicAttributeBuffer;\n    this._dynamicUpload(particles, dynamicAttributeBuffer.float32View, dynamicAttributeBuffer.uint32View);\n    this._dynamicBuffer.setDataWithSize(\n      this.dynamicAttributeBuffer.float32View,\n      particles.length * this._dynamicStride * 4,\n      true\n    );\n    if (uploadStatic) {\n      const staticAttributeBuffer = this.staticAttributeBuffer;\n      this._staticUpload(particles, staticAttributeBuffer.float32View, staticAttributeBuffer.uint32View);\n      this._staticBuffer.setDataWithSize(\n        staticAttributeBuffer.float32View,\n        particles.length * this._staticStride * 4,\n        true\n      );\n    }\n  }\n  destroy() {\n    this._staticBuffer.destroy();\n    this._dynamicBuffer.destroy();\n    this.geometry.destroy();\n  }\n}\nfunction getParticleSyncKey(properties) {\n  const keyGen = [];\n  for (const key in properties) {\n    const property = properties[key];\n    keyGen.push(key, property.code, property.dynamic ? \"d\" : \"s\");\n  }\n  return keyGen.join(\"_\");\n}\n\nexport { ParticleBuffer };\n//# sourceMappingURL=ParticleBuffer.mjs.map\n","var fragment = \"varying vec2 vUV;\\nvarying vec4 vColor;\\n\\nuniform sampler2D uTexture;\\n\\nvoid main(void){\\n    vec4 color = texture2D(uTexture, vUV) * vColor;\\n    gl_FragColor = color;\\n}\";\n\nexport { fragment as default };\n//# sourceMappingURL=particles.frag.mjs.map\n","var vertex = \"attribute vec2 aVertex;\\nattribute vec2 aUV;\\nattribute vec4 aColor;\\n\\nattribute vec2 aPosition;\\nattribute float aRotation;\\n\\nuniform mat3 uTranslationMatrix;\\nuniform float uRound;\\nuniform vec2 uResolution;\\nuniform vec4 uColor;\\n\\nvarying vec2 vUV;\\nvarying vec4 vColor;\\n\\nvec2 roundPixels(vec2 position, vec2 targetSize)\\n{       \\n    return (floor(((position * 0.5 + 0.5) * targetSize) + 0.5) / targetSize) * 2.0 - 1.0;\\n}\\n\\nvoid main(void){\\n    float cosRotation = cos(aRotation);\\n    float sinRotation = sin(aRotation);\\n    float x = aVertex.x * cosRotation - aVertex.y * sinRotation;\\n    float y = aVertex.x * sinRotation + aVertex.y * cosRotation;\\n\\n    vec2 v = vec2(x, y);\\n    v = v + aPosition;\\n\\n    gl_Position = vec4((uTranslationMatrix * vec3(v, 1.0)).xy, 0.0, 1.0);\\n\\n    if(uRound == 1.0)\\n    {\\n        gl_Position.xy = roundPixels(gl_Position.xy, uResolution);\\n    }\\n\\n    vUV = aUV;\\n    vColor = vec4(aColor.rgb * aColor.a, aColor.a) * uColor;\\n}\\n\";\n\nexport { vertex as default };\n//# sourceMappingURL=particles.vert.mjs.map\n","var wgsl = \"\\nstruct ParticleUniforms {\\n  uProjectionMatrix:mat3x3<f32>,\\n  uColor:vec4<f32>,\\n  uResolution:vec2<f32>,\\n  uRoundPixels:f32,\\n};\\n\\n@group(0) @binding(0) var<uniform> uniforms: ParticleUniforms;\\n\\n@group(1) @binding(0) var uTexture: texture_2d<f32>;\\n@group(1) @binding(1) var uSampler : sampler;\\n\\nstruct VSOutput {\\n    @builtin(position) position: vec4<f32>,\\n    @location(0) uv : vec2<f32>,\\n    @location(1) color : vec4<f32>,\\n  };\\n@vertex\\nfn mainVertex(\\n  @location(0) aVertex: vec2<f32>,\\n  @location(1) aPosition: vec2<f32>,\\n  @location(2) aUV: vec2<f32>,\\n  @location(3) aColor: vec4<f32>,\\n  @location(4) aRotation: f32,\\n) -> VSOutput {\\n  \\n   let v = vec2(\\n       aVertex.x * cos(aRotation) - aVertex.y * sin(aRotation),\\n       aVertex.x * sin(aRotation) + aVertex.y * cos(aRotation)\\n   ) + aPosition;\\n\\n   let position = vec4((uniforms.uProjectionMatrix * vec3(v, 1.0)).xy, 0.0, 1.0);\\n\\n    let vColor = vec4(aColor.rgb * aColor.a, aColor.a) * uniforms.uColor;\\n\\n  return VSOutput(\\n   position,\\n   aUV,\\n   vColor,\\n  );\\n}\\n\\n@fragment\\nfn mainFragment(\\n  @location(0) uv: vec2<f32>,\\n  @location(1) color: vec4<f32>,\\n  @builtin(position) position: vec4<f32>,\\n) -> @location(0) vec4<f32> {\\n\\n    var sample = textureSample(uTexture, uSampler, uv) * color;\\n   \\n    return sample;\\n}\";\n\nexport { wgsl as default };\n//# sourceMappingURL=particles.wgsl.mjs.map\n","import { Color } from '../../../../color/Color.mjs';\nimport { Matrix } from '../../../../maths/matrix/Matrix.mjs';\nimport { GlProgram } from '../../../../rendering/renderers/gl/shader/GlProgram.mjs';\nimport { GpuProgram } from '../../../../rendering/renderers/gpu/shader/GpuProgram.mjs';\nimport { Shader } from '../../../../rendering/renderers/shared/shader/Shader.mjs';\nimport { Texture } from '../../../../rendering/renderers/shared/texture/Texture.mjs';\nimport { TextureStyle } from '../../../../rendering/renderers/shared/texture/TextureStyle.mjs';\nimport fragment from './particles.frag.mjs';\nimport vertex from './particles.vert.mjs';\nimport wgsl from './particles.wgsl.mjs';\n\n\"use strict\";\nclass ParticleShader extends Shader {\n  constructor() {\n    const glProgram = GlProgram.from({\n      vertex,\n      fragment\n    });\n    const gpuProgram = GpuProgram.from({\n      fragment: {\n        source: wgsl,\n        entryPoint: \"mainFragment\"\n      },\n      vertex: {\n        source: wgsl,\n        entryPoint: \"mainVertex\"\n      }\n    });\n    super({\n      glProgram,\n      gpuProgram,\n      resources: {\n        // this will be replaced with the texture from the particle container\n        uTexture: Texture.WHITE.source,\n        // this will be replaced with the texture style from the particle container\n        uSampler: new TextureStyle({}),\n        // this will be replaced with the local uniforms from the particle container\n        uniforms: {\n          uTranslationMatrix: { value: new Matrix(), type: \"mat3x3<f32>\" },\n          uColor: { value: new Color(16777215), type: \"vec4<f32>\" },\n          uRound: { value: 1, type: \"f32\" },\n          uResolution: { value: [0, 0], type: \"vec2<f32>\" }\n        }\n      }\n    });\n  }\n}\n\nexport { ParticleShader };\n//# sourceMappingURL=ParticleShader.mjs.map\n","import { Matrix } from '../../../maths/matrix/Matrix.mjs';\nimport { UniformGroup } from '../../../rendering/renderers/shared/shader/UniformGroup.mjs';\nimport { getAdjustedBlendModeBlend } from '../../../rendering/renderers/shared/state/getAdjustedBlendModeBlend.mjs';\nimport { State } from '../../../rendering/renderers/shared/state/State.mjs';\nimport { color32BitToUniform } from '../../graphics/gpu/colorToUniform.mjs';\nimport { ParticleBuffer } from './ParticleBuffer.mjs';\nimport { ParticleShader } from './shader/ParticleShader.mjs';\n\n\"use strict\";\nclass ParticleContainerPipe {\n  /**\n   * @param renderer - The renderer this sprite batch works for.\n   * @param adaptor\n   */\n  constructor(renderer, adaptor) {\n    this.state = State.for2d();\n    this._gpuBufferHash = /* @__PURE__ */ Object.create(null);\n    // eslint-disable-next-line max-len\n    this._destroyRenderableBound = this.destroyRenderable.bind(this);\n    this.localUniforms = new UniformGroup({\n      uTranslationMatrix: { value: new Matrix(), type: \"mat3x3<f32>\" },\n      uColor: { value: new Float32Array(4), type: \"vec4<f32>\" },\n      uRound: { value: 1, type: \"f32\" },\n      uResolution: { value: [0, 0], type: \"vec2<f32>\" }\n    });\n    this.renderer = renderer;\n    this.adaptor = adaptor;\n    this.defaultShader = new ParticleShader();\n    this.state = State.for2d();\n  }\n  validateRenderable(_renderable) {\n    return false;\n  }\n  addRenderable(renderable, instructionSet) {\n    this.renderer.renderPipes.batch.break(instructionSet);\n    instructionSet.add(renderable);\n  }\n  getBuffers(renderable) {\n    return this._gpuBufferHash[renderable.uid] || this._initBuffer(renderable);\n  }\n  _initBuffer(renderable) {\n    this._gpuBufferHash[renderable.uid] = new ParticleBuffer({\n      size: renderable.particleChildren.length,\n      properties: renderable._properties\n    });\n    renderable.on(\"destroyed\", this._destroyRenderableBound);\n    return this._gpuBufferHash[renderable.uid];\n  }\n  updateRenderable(_renderable) {\n  }\n  destroyRenderable(renderable) {\n    const buffer = this._gpuBufferHash[renderable.uid];\n    buffer.destroy();\n    this._gpuBufferHash[renderable.uid] = null;\n    renderable.off(\"destroyed\", this._destroyRenderableBound);\n  }\n  execute(container) {\n    const children = container.particleChildren;\n    if (children.length === 0) {\n      return;\n    }\n    const renderer = this.renderer;\n    const buffer = this.getBuffers(container);\n    container.texture || (container.texture = children[0].texture);\n    const state = this.state;\n    buffer.update(children, container._childrenDirty);\n    container._childrenDirty = false;\n    state.blendMode = getAdjustedBlendModeBlend(container.blendMode, container.texture._source);\n    const uniforms = this.localUniforms.uniforms;\n    const transformationMatrix = uniforms.uTranslationMatrix;\n    container.worldTransform.copyTo(transformationMatrix);\n    transformationMatrix.prepend(renderer.globalUniforms.globalUniformData.projectionMatrix);\n    uniforms.uResolution = renderer.globalUniforms.globalUniformData.resolution;\n    uniforms.uRound = renderer._roundPixels | container._roundPixels;\n    color32BitToUniform(\n      container.groupColorAlpha,\n      uniforms.uColor,\n      0\n    );\n    this.adaptor.execute(this, container);\n  }\n  /** Destroys the ParticleRenderer. */\n  destroy() {\n    if (this.defaultShader) {\n      this.defaultShader.destroy();\n      this.defaultShader = null;\n    }\n  }\n}\n\nexport { ParticleContainerPipe };\n//# sourceMappingURL=ParticleContainerPipe.mjs.map\n","import { ExtensionType } from '../../../extensions/Extensions.mjs';\nimport { GlParticleContainerAdaptor } from '../gl/GlParticleContainerAdaptor.mjs';\nimport { ParticleContainerPipe } from './ParticleContainerPipe.mjs';\n\n\"use strict\";\nclass GlParticleContainerPipe extends ParticleContainerPipe {\n  constructor(renderer) {\n    super(renderer, new GlParticleContainerAdaptor());\n  }\n}\n/** @ignore */\nGlParticleContainerPipe.extension = {\n  type: [\n    ExtensionType.WebGLPipes\n  ],\n  name: \"particle\"\n};\n\nexport { GlParticleContainerPipe };\n//# sourceMappingURL=GlParticleContainerPipe.mjs.map\n","import { ExtensionType } from '../../../extensions/Extensions.mjs';\nimport { GpuParticleContainerAdaptor } from '../gpu/GpuParticleContainerAdaptor.mjs';\nimport { ParticleContainerPipe } from './ParticleContainerPipe.mjs';\n\n\"use strict\";\nclass GpuParticleContainerPipe extends ParticleContainerPipe {\n  constructor(renderer) {\n    super(renderer, new GpuParticleContainerAdaptor());\n  }\n}\n/** @ignore */\nGpuParticleContainerPipe.extension = {\n  type: [\n    ExtensionType.WebGPUPipes\n  ],\n  name: \"particle\"\n};\n\nexport { GpuParticleContainerPipe };\n//# sourceMappingURL=GpuParticleContainerPipe.mjs.map\n","import { PlaneGeometry } from '../mesh-plane/PlaneGeometry.mjs';\n\n\"use strict\";\nconst _NineSliceGeometry = class _NineSliceGeometry extends PlaneGeometry {\n  constructor(options = {}) {\n    options = { ..._NineSliceGeometry.defaultOptions, ...options };\n    super({\n      width: options.width,\n      height: options.height,\n      verticesX: 4,\n      verticesY: 4\n    });\n    this.update(options);\n  }\n  /**\n   * Updates the NineSliceGeometry with the options.\n   * @param options - The options of the NineSliceGeometry.\n   */\n  update(options) {\n    this.width = options.width ?? this.width;\n    this.height = options.height ?? this.height;\n    this._originalWidth = options.originalWidth ?? this._originalWidth;\n    this._originalHeight = options.originalHeight ?? this._originalHeight;\n    this._leftWidth = options.leftWidth ?? this._leftWidth;\n    this._rightWidth = options.rightWidth ?? this._rightWidth;\n    this._topHeight = options.topHeight ?? this._topHeight;\n    this._bottomHeight = options.bottomHeight ?? this._bottomHeight;\n    this.updateUvs();\n    this.updatePositions();\n  }\n  /** Updates the positions of the vertices. */\n  updatePositions() {\n    const positions = this.positions;\n    const w = this._leftWidth + this._rightWidth;\n    const scaleW = this.width > w ? 1 : this.width / w;\n    const h = this._topHeight + this._bottomHeight;\n    const scaleH = this.height > h ? 1 : this.height / h;\n    const scale = Math.min(scaleW, scaleH);\n    positions[9] = positions[11] = positions[13] = positions[15] = this._topHeight * scale;\n    positions[17] = positions[19] = positions[21] = positions[23] = this.height - this._bottomHeight * scale;\n    positions[25] = positions[27] = positions[29] = positions[31] = this.height;\n    positions[2] = positions[10] = positions[18] = positions[26] = this._leftWidth * scale;\n    positions[4] = positions[12] = positions[20] = positions[28] = this.width - this._rightWidth * scale;\n    positions[6] = positions[14] = positions[22] = positions[30] = this.width;\n    this.getBuffer(\"aPosition\").update();\n  }\n  /** Updates the UVs of the vertices. */\n  updateUvs() {\n    const uvs = this.uvs;\n    uvs[0] = uvs[8] = uvs[16] = uvs[24] = 0;\n    uvs[1] = uvs[3] = uvs[5] = uvs[7] = 0;\n    uvs[6] = uvs[14] = uvs[22] = uvs[30] = 1;\n    uvs[25] = uvs[27] = uvs[29] = uvs[31] = 1;\n    const _uvw = 1 / this._originalWidth;\n    const _uvh = 1 / this._originalHeight;\n    uvs[2] = uvs[10] = uvs[18] = uvs[26] = _uvw * this._leftWidth;\n    uvs[9] = uvs[11] = uvs[13] = uvs[15] = _uvh * this._topHeight;\n    uvs[4] = uvs[12] = uvs[20] = uvs[28] = 1 - _uvw * this._rightWidth;\n    uvs[17] = uvs[19] = uvs[21] = uvs[23] = 1 - _uvh * this._bottomHeight;\n    this.getBuffer(\"aUV\").update();\n  }\n};\n/** The default options for the NineSliceGeometry. */\n_NineSliceGeometry.defaultOptions = {\n  /** The width of the NineSlicePlane, setting this will actually modify the vertices and UV's of this plane. */\n  width: 100,\n  /** The height of the NineSlicePlane, setting this will actually modify the vertices and UV's of this plane. */\n  height: 100,\n  /** The width of the left column. */\n  leftWidth: 10,\n  /** The height of the top row. */\n  topHeight: 10,\n  /** The width of the right column. */\n  rightWidth: 10,\n  /** The height of the bottom row. */\n  bottomHeight: 10,\n  /** The original width of the texture */\n  originalWidth: 100,\n  /** The original height of the texture */\n  originalHeight: 100\n};\nlet NineSliceGeometry = _NineSliceGeometry;\n\nexport { NineSliceGeometry };\n//# sourceMappingURL=NineSliceGeometry.mjs.map\n","import { ExtensionType } from '../../extensions/Extensions.mjs';\nimport { BigPool } from '../../utils/pool/PoolGroup.mjs';\nimport { BatchableMesh } from '../mesh/shared/BatchableMesh.mjs';\nimport { NineSliceGeometry } from './NineSliceGeometry.mjs';\n\n\"use strict\";\nclass NineSliceSpritePipe {\n  constructor(renderer) {\n    this._gpuSpriteHash = /* @__PURE__ */ Object.create(null);\n    this._destroyRenderableBound = this.destroyRenderable.bind(this);\n    this._renderer = renderer;\n    this._renderer.renderableGC.addManagedHash(this, \"_gpuSpriteHash\");\n  }\n  addRenderable(sprite, instructionSet) {\n    const gpuSprite = this._getGpuSprite(sprite);\n    if (sprite.didViewUpdate)\n      this._updateBatchableSprite(sprite, gpuSprite);\n    this._renderer.renderPipes.batch.addToBatch(gpuSprite, instructionSet);\n  }\n  updateRenderable(sprite) {\n    const gpuSprite = this._gpuSpriteHash[sprite.uid];\n    if (sprite.didViewUpdate)\n      this._updateBatchableSprite(sprite, gpuSprite);\n    gpuSprite._batcher.updateElement(gpuSprite);\n  }\n  validateRenderable(sprite) {\n    const gpuSprite = this._getGpuSprite(sprite);\n    return !gpuSprite._batcher.checkAndUpdateTexture(\n      gpuSprite,\n      sprite._texture\n    );\n  }\n  destroyRenderable(sprite) {\n    const batchableMesh = this._gpuSpriteHash[sprite.uid];\n    BigPool.return(batchableMesh.geometry);\n    BigPool.return(batchableMesh);\n    this._gpuSpriteHash[sprite.uid] = null;\n    sprite.off(\"destroyed\", this._destroyRenderableBound);\n  }\n  _updateBatchableSprite(sprite, batchableSprite) {\n    batchableSprite.geometry.update(sprite);\n    batchableSprite.texture = sprite._texture;\n  }\n  _getGpuSprite(sprite) {\n    return this._gpuSpriteHash[sprite.uid] || this._initGPUSprite(sprite);\n  }\n  _initGPUSprite(sprite) {\n    const batchableMesh = BigPool.get(BatchableMesh);\n    batchableMesh.geometry = BigPool.get(NineSliceGeometry);\n    batchableMesh.renderable = sprite;\n    batchableMesh.transform = sprite.groupTransform;\n    batchableMesh.texture = sprite._texture;\n    batchableMesh.roundPixels = this._renderer._roundPixels | sprite._roundPixels;\n    this._gpuSpriteHash[sprite.uid] = batchableMesh;\n    if (!sprite.didViewUpdate) {\n      this._updateBatchableSprite(sprite, batchableMesh);\n    }\n    sprite.on(\"destroyed\", this._destroyRenderableBound);\n    return batchableMesh;\n  }\n  destroy() {\n    for (const i in this._gpuSpriteHash) {\n      const batchableMesh = this._gpuSpriteHash[i];\n      batchableMesh.geometry.destroy();\n    }\n    this._gpuSpriteHash = null;\n    this._renderer = null;\n  }\n}\n/** @ignore */\nNineSliceSpritePipe.extension = {\n  type: [\n    ExtensionType.WebGLPipes,\n    ExtensionType.WebGPUPipes,\n    ExtensionType.CanvasPipes\n  ],\n  name: \"nineSliceSprite\"\n};\n\nexport { NineSliceSpritePipe };\n//# sourceMappingURL=NineSliceSpritePipe.mjs.map\n","\"use strict\";\nconst tilingBit = {\n  name: \"tiling-bit\",\n  vertex: {\n    header: (\n      /* wgsl */\n      `\n            struct TilingUniforms {\n                uMapCoord:mat3x3<f32>,\n                uClampFrame:vec4<f32>,\n                uClampOffset:vec2<f32>,\n                uTextureTransform:mat3x3<f32>,\n                uSizeAnchor:vec4<f32>\n            };\n\n            @group(2) @binding(0) var<uniform> tilingUniforms: TilingUniforms;\n            @group(2) @binding(1) var uTexture: texture_2d<f32>;\n            @group(2) @binding(2) var uSampler: sampler;\n        `\n    ),\n    main: (\n      /* wgsl */\n      `\n            uv = (tilingUniforms.uTextureTransform * vec3(uv, 1.0)).xy;\n\n            position = (position - tilingUniforms.uSizeAnchor.zw) * tilingUniforms.uSizeAnchor.xy;\n        `\n    )\n  },\n  fragment: {\n    header: (\n      /* wgsl */\n      `\n            struct TilingUniforms {\n                uMapCoord:mat3x3<f32>,\n                uClampFrame:vec4<f32>,\n                uClampOffset:vec2<f32>,\n                uTextureTransform:mat3x3<f32>,\n                uSizeAnchor:vec4<f32>\n            };\n\n            @group(2) @binding(0) var<uniform> tilingUniforms: TilingUniforms;\n            @group(2) @binding(1) var uTexture: texture_2d<f32>;\n            @group(2) @binding(2) var uSampler: sampler;\n        `\n    ),\n    main: (\n      /* wgsl */\n      `\n\n            var coord = vUV + ceil(tilingUniforms.uClampOffset - vUV);\n            coord = (tilingUniforms.uMapCoord * vec3(coord, 1.0)).xy;\n            var unclamped = coord;\n            coord = clamp(coord, tilingUniforms.uClampFrame.xy, tilingUniforms.uClampFrame.zw);\n\n            var bias = 0.;\n\n            if(unclamped.x == coord.x && unclamped.y == coord.y)\n            {\n                bias = -32.;\n            } \n\n            outColor = textureSampleBias(uTexture, uSampler, coord, bias);\n        `\n    )\n  }\n};\nconst tilingBitGl = {\n  name: \"tiling-bit\",\n  vertex: {\n    header: (\n      /* glsl */\n      `\n            uniform mat3 uTextureTransform;\n            uniform vec4 uSizeAnchor;\n        \n        `\n    ),\n    main: (\n      /* glsl */\n      `\n            uv = (uTextureTransform * vec3(aUV, 1.0)).xy;\n\n            position = (position - uSizeAnchor.zw) * uSizeAnchor.xy;\n        `\n    )\n  },\n  fragment: {\n    header: (\n      /* glsl */\n      `\n            uniform sampler2D uTexture;\n            uniform mat3 uMapCoord;\n            uniform vec4 uClampFrame;\n            uniform vec2 uClampOffset;\n        `\n    ),\n    main: (\n      /* glsl */\n      `\n\n        vec2 coord = vUV + ceil(uClampOffset - vUV);\n        coord = (uMapCoord * vec3(coord, 1.0)).xy;\n        vec2 unclamped = coord;\n        coord = clamp(coord, uClampFrame.xy, uClampFrame.zw);\n        \n        outColor = texture(uTexture, coord, unclamped == coord ? 0.0 : -32.0);// lod-bias very negative to force lod 0\n    \n        `\n    )\n  }\n};\n\nexport { tilingBit, tilingBitGl };\n//# sourceMappingURL=tilingBit.mjs.map\n","import { Matrix } from '../../../maths/matrix/Matrix.mjs';\nimport { compileHighShaderGpuProgram, compileHighShaderGlProgram } from '../../../rendering/high-shader/compileHighShaderToProgram.mjs';\nimport { localUniformBit, localUniformBitGl } from '../../../rendering/high-shader/shader-bits/localUniformBit.mjs';\nimport { roundPixelsBit, roundPixelsBitGl } from '../../../rendering/high-shader/shader-bits/roundPixelsBit.mjs';\nimport { Shader } from '../../../rendering/renderers/shared/shader/Shader.mjs';\nimport { UniformGroup } from '../../../rendering/renderers/shared/shader/UniformGroup.mjs';\nimport { Texture } from '../../../rendering/renderers/shared/texture/Texture.mjs';\nimport { tilingBit, tilingBitGl } from './tilingBit.mjs';\n\n\"use strict\";\nlet gpuProgram;\nlet glProgram;\nclass TilingSpriteShader extends Shader {\n  constructor() {\n    gpuProgram ?? (gpuProgram = compileHighShaderGpuProgram({\n      name: \"tiling-sprite-shader\",\n      bits: [\n        localUniformBit,\n        tilingBit,\n        roundPixelsBit\n      ]\n    }));\n    glProgram ?? (glProgram = compileHighShaderGlProgram({\n      name: \"tiling-sprite-shader\",\n      bits: [\n        localUniformBitGl,\n        tilingBitGl,\n        roundPixelsBitGl\n      ]\n    }));\n    const tilingUniforms = new UniformGroup({\n      uMapCoord: { value: new Matrix(), type: \"mat3x3<f32>\" },\n      uClampFrame: { value: new Float32Array([0, 0, 1, 1]), type: \"vec4<f32>\" },\n      uClampOffset: { value: new Float32Array([0, 0]), type: \"vec2<f32>\" },\n      uTextureTransform: { value: new Matrix(), type: \"mat3x3<f32>\" },\n      uSizeAnchor: { value: new Float32Array([100, 100, 0.5, 0.5]), type: \"vec4<f32>\" }\n    });\n    super({\n      glProgram,\n      gpuProgram,\n      resources: {\n        localUniforms: new UniformGroup({\n          uTransformMatrix: { value: new Matrix(), type: \"mat3x3<f32>\" },\n          uColor: { value: new Float32Array([1, 1, 1, 1]), type: \"vec4<f32>\" },\n          uRound: { value: 0, type: \"f32\" }\n        }),\n        tilingUniforms,\n        uTexture: Texture.EMPTY.source,\n        uSampler: Texture.EMPTY.source.style\n      }\n    });\n  }\n  updateUniforms(width, height, matrix, anchorX, anchorY, texture) {\n    const tilingUniforms = this.resources.tilingUniforms;\n    const textureWidth = texture.width;\n    const textureHeight = texture.height;\n    const textureMatrix = texture.textureMatrix;\n    const uTextureTransform = tilingUniforms.uniforms.uTextureTransform;\n    uTextureTransform.set(\n      matrix.a * textureWidth / width,\n      matrix.b * textureWidth / height,\n      matrix.c * textureHeight / width,\n      matrix.d * textureHeight / height,\n      matrix.tx / width,\n      matrix.ty / height\n    );\n    uTextureTransform.invert();\n    tilingUniforms.uniforms.uMapCoord = textureMatrix.mapCoord;\n    tilingUniforms.uniforms.uClampFrame = textureMatrix.uClampFrame;\n    tilingUniforms.uniforms.uClampOffset = textureMatrix.uClampOffset;\n    tilingUniforms.uniforms.uTextureTransform = uTextureTransform;\n    tilingUniforms.uniforms.uSizeAnchor[0] = width;\n    tilingUniforms.uniforms.uSizeAnchor[1] = height;\n    tilingUniforms.uniforms.uSizeAnchor[2] = anchorX;\n    tilingUniforms.uniforms.uSizeAnchor[3] = anchorY;\n    if (texture) {\n      this.resources.uTexture = texture.source;\n      this.resources.uSampler = texture.source.style;\n    }\n  }\n}\n\nexport { TilingSpriteShader };\n//# sourceMappingURL=TilingSpriteShader.mjs.map\n","import { MeshGeometry } from '../../mesh/shared/MeshGeometry.mjs';\n\n\"use strict\";\nclass QuadGeometry extends MeshGeometry {\n  constructor() {\n    super({\n      positions: new Float32Array([0, 0, 1, 0, 1, 1, 0, 1]),\n      uvs: new Float32Array([0, 0, 1, 0, 1, 1, 0, 1]),\n      indices: new Uint32Array([0, 1, 2, 0, 2, 3])\n    });\n  }\n}\n\nexport { QuadGeometry };\n//# sourceMappingURL=QuadGeometry.mjs.map\n","\"use strict\";\nfunction setPositions(tilingSprite, positions) {\n  const anchorX = tilingSprite.anchor.x;\n  const anchorY = tilingSprite.anchor.y;\n  positions[0] = -anchorX * tilingSprite.width;\n  positions[1] = -anchorY * tilingSprite.height;\n  positions[2] = (1 - anchorX) * tilingSprite.width;\n  positions[3] = -anchorY * tilingSprite.height;\n  positions[4] = (1 - anchorX) * tilingSprite.width;\n  positions[5] = (1 - anchorY) * tilingSprite.height;\n  positions[6] = -anchorX * tilingSprite.width;\n  positions[7] = (1 - anchorY) * tilingSprite.height;\n}\n\nexport { setPositions };\n//# sourceMappingURL=setPositions.mjs.map\n","\"use strict\";\nfunction applyMatrix(array, stride, offset, matrix) {\n  let index = 0;\n  const size = array.length / (stride || 2);\n  const a = matrix.a;\n  const b = matrix.b;\n  const c = matrix.c;\n  const d = matrix.d;\n  const tx = matrix.tx;\n  const ty = matrix.ty;\n  offset *= stride;\n  while (index < size) {\n    const x = array[offset];\n    const y = array[offset + 1];\n    array[offset] = a * x + c * y + tx;\n    array[offset + 1] = b * x + d * y + ty;\n    offset += stride;\n    index++;\n  }\n}\n\nexport { applyMatrix };\n//# sourceMappingURL=applyMatrix.mjs.map\n","import { Matrix } from '../../../maths/matrix/Matrix.mjs';\nimport { applyMatrix } from './applyMatrix.mjs';\n\n\"use strict\";\nfunction setUvs(tilingSprite, uvs) {\n  const texture = tilingSprite.texture;\n  const width = texture.frame.width;\n  const height = texture.frame.height;\n  let anchorX = 0;\n  let anchorY = 0;\n  if (tilingSprite.applyAnchorToTexture) {\n    anchorX = tilingSprite.anchor.x;\n    anchorY = tilingSprite.anchor.y;\n  }\n  uvs[0] = uvs[6] = -anchorX;\n  uvs[2] = uvs[4] = 1 - anchorX;\n  uvs[1] = uvs[3] = -anchorY;\n  uvs[5] = uvs[7] = 1 - anchorY;\n  const textureMatrix = Matrix.shared;\n  textureMatrix.copyFrom(tilingSprite._tileTransform.matrix);\n  textureMatrix.tx /= tilingSprite.width;\n  textureMatrix.ty /= tilingSprite.height;\n  textureMatrix.invert();\n  textureMatrix.scale(tilingSprite.width / width, tilingSprite.height / height);\n  applyMatrix(uvs, 2, 0, textureMatrix);\n}\n\nexport { setUvs };\n//# sourceMappingURL=setUvs.mjs.map\n","import { ExtensionType } from '../../extensions/Extensions.mjs';\nimport { getAdjustedBlendModeBlend } from '../../rendering/renderers/shared/state/getAdjustedBlendModeBlend.mjs';\nimport { State } from '../../rendering/renderers/shared/state/State.mjs';\nimport { RendererType } from '../../rendering/renderers/types.mjs';\nimport { color32BitToUniform } from '../graphics/gpu/colorToUniform.mjs';\nimport { BatchableMesh } from '../mesh/shared/BatchableMesh.mjs';\nimport { MeshGeometry } from '../mesh/shared/MeshGeometry.mjs';\nimport { TilingSpriteShader } from './shader/TilingSpriteShader.mjs';\nimport { QuadGeometry } from './utils/QuadGeometry.mjs';\nimport { setPositions } from './utils/setPositions.mjs';\nimport { setUvs } from './utils/setUvs.mjs';\n\n\"use strict\";\nconst sharedQuad = new QuadGeometry();\nclass TilingSpritePipe {\n  constructor(renderer) {\n    this._state = State.default2d;\n    this._tilingSpriteDataHash = /* @__PURE__ */ Object.create(null);\n    this._destroyRenderableBound = this.destroyRenderable.bind(this);\n    this._renderer = renderer;\n    this._renderer.renderableGC.addManagedHash(this, \"_tilingSpriteDataHash\");\n  }\n  validateRenderable(renderable) {\n    const tilingSpriteData = this._getTilingSpriteData(renderable);\n    const couldBatch = tilingSpriteData.canBatch;\n    this._updateCanBatch(renderable);\n    const canBatch = tilingSpriteData.canBatch;\n    if (canBatch && canBatch === couldBatch) {\n      const { batchableMesh } = tilingSpriteData;\n      return !batchableMesh._batcher.checkAndUpdateTexture(\n        batchableMesh,\n        renderable.texture\n      );\n    }\n    return couldBatch !== canBatch;\n  }\n  addRenderable(tilingSprite, instructionSet) {\n    const batcher = this._renderer.renderPipes.batch;\n    this._updateCanBatch(tilingSprite);\n    const tilingSpriteData = this._getTilingSpriteData(tilingSprite);\n    const { geometry, canBatch } = tilingSpriteData;\n    if (canBatch) {\n      tilingSpriteData.batchableMesh || (tilingSpriteData.batchableMesh = new BatchableMesh());\n      const batchableMesh = tilingSpriteData.batchableMesh;\n      if (tilingSprite.didViewUpdate) {\n        this._updateBatchableMesh(tilingSprite);\n        batchableMesh.geometry = geometry;\n        batchableMesh.renderable = tilingSprite;\n        batchableMesh.transform = tilingSprite.groupTransform;\n        batchableMesh.texture = tilingSprite._texture;\n      }\n      batchableMesh.roundPixels = this._renderer._roundPixels | tilingSprite._roundPixels;\n      batcher.addToBatch(batchableMesh, instructionSet);\n    } else {\n      batcher.break(instructionSet);\n      tilingSpriteData.shader || (tilingSpriteData.shader = new TilingSpriteShader());\n      this.updateRenderable(tilingSprite);\n      instructionSet.add(tilingSprite);\n    }\n  }\n  execute(tilingSprite) {\n    const { shader } = this._tilingSpriteDataHash[tilingSprite.uid];\n    shader.groups[0] = this._renderer.globalUniforms.bindGroup;\n    const localUniforms = shader.resources.localUniforms.uniforms;\n    localUniforms.uTransformMatrix = tilingSprite.groupTransform;\n    localUniforms.uRound = this._renderer._roundPixels | tilingSprite._roundPixels;\n    color32BitToUniform(\n      tilingSprite.groupColorAlpha,\n      localUniforms.uColor,\n      0\n    );\n    this._state.blendMode = getAdjustedBlendModeBlend(tilingSprite.groupBlendMode, tilingSprite.texture._source);\n    this._renderer.encoder.draw({\n      geometry: sharedQuad,\n      shader,\n      state: this._state\n    });\n  }\n  updateRenderable(tilingSprite) {\n    const tilingSpriteData = this._getTilingSpriteData(tilingSprite);\n    const { canBatch } = tilingSpriteData;\n    if (canBatch) {\n      const { batchableMesh } = tilingSpriteData;\n      if (tilingSprite.didViewUpdate)\n        this._updateBatchableMesh(tilingSprite);\n      batchableMesh._batcher.updateElement(batchableMesh);\n    } else if (tilingSprite.didViewUpdate) {\n      const { shader } = tilingSpriteData;\n      shader.updateUniforms(\n        tilingSprite.width,\n        tilingSprite.height,\n        tilingSprite._tileTransform.matrix,\n        tilingSprite.anchor.x,\n        tilingSprite.anchor.y,\n        tilingSprite.texture\n      );\n    }\n  }\n  destroyRenderable(tilingSprite) {\n    const tilingSpriteData = this._getTilingSpriteData(tilingSprite);\n    tilingSpriteData.batchableMesh = null;\n    tilingSpriteData.shader?.destroy();\n    this._tilingSpriteDataHash[tilingSprite.uid] = null;\n    tilingSprite.off(\"destroyed\", this._destroyRenderableBound);\n  }\n  _getTilingSpriteData(renderable) {\n    return this._tilingSpriteDataHash[renderable.uid] || this._initTilingSpriteData(renderable);\n  }\n  _initTilingSpriteData(tilingSprite) {\n    const geometry = new MeshGeometry({\n      indices: sharedQuad.indices,\n      positions: sharedQuad.positions.slice(),\n      uvs: sharedQuad.uvs.slice()\n    });\n    this._tilingSpriteDataHash[tilingSprite.uid] = {\n      canBatch: true,\n      renderable: tilingSprite,\n      geometry\n    };\n    tilingSprite.on(\"destroyed\", this._destroyRenderableBound);\n    return this._tilingSpriteDataHash[tilingSprite.uid];\n  }\n  _updateBatchableMesh(tilingSprite) {\n    const renderableData = this._getTilingSpriteData(tilingSprite);\n    const { geometry } = renderableData;\n    const style = tilingSprite.texture.source.style;\n    if (style.addressMode !== \"repeat\") {\n      style.addressMode = \"repeat\";\n      style.update();\n    }\n    setUvs(tilingSprite, geometry.uvs);\n    setPositions(tilingSprite, geometry.positions);\n  }\n  destroy() {\n    for (const i in this._tilingSpriteDataHash) {\n      this.destroyRenderable(this._tilingSpriteDataHash[i].renderable);\n    }\n    this._tilingSpriteDataHash = null;\n    this._renderer = null;\n  }\n  _updateCanBatch(tilingSprite) {\n    const renderableData = this._getTilingSpriteData(tilingSprite);\n    const texture = tilingSprite.texture;\n    let _nonPowOf2wrapping = true;\n    if (this._renderer.type === RendererType.WEBGL) {\n      _nonPowOf2wrapping = this._renderer.context.supports.nonPowOf2wrapping;\n    }\n    renderableData.canBatch = texture.textureMatrix.isSimple && (_nonPowOf2wrapping || texture.source.isPowerOfTwo);\n    return renderableData.canBatch;\n  }\n}\n/** @ignore */\nTilingSpritePipe.extension = {\n  type: [\n    ExtensionType.WebGLPipes,\n    ExtensionType.WebGPUPipes,\n    ExtensionType.CanvasPipes\n  ],\n  name: \"tilingSprite\"\n};\n\nexport { TilingSpritePipe };\n//# sourceMappingURL=TilingSpritePipe.mjs.map\n","\"use strict\";\nconst localUniformMSDFBit = {\n  name: \"local-uniform-msdf-bit\",\n  vertex: {\n    header: (\n      /* wgsl */\n      `\n            struct LocalUniforms {\n                uColor:vec4<f32>,\n                uTransformMatrix:mat3x3<f32>,\n                uDistance: f32,\n                uRound:f32,\n            }\n\n            @group(2) @binding(0) var<uniform> localUniforms : LocalUniforms;\n        `\n    ),\n    main: (\n      /* wgsl */\n      `\n            vColor *= localUniforms.uColor;\n            modelMatrix *= localUniforms.uTransformMatrix;\n        `\n    ),\n    end: (\n      /* wgsl */\n      `\n            if(localUniforms.uRound == 1)\n            {\n                vPosition = vec4(roundPixels(vPosition.xy, globalUniforms.uResolution), vPosition.zw);\n            }\n        `\n    )\n  },\n  fragment: {\n    header: (\n      /* wgsl */\n      `\n            struct LocalUniforms {\n                uColor:vec4<f32>,\n                uTransformMatrix:mat3x3<f32>,\n                uDistance: f32\n            }\n\n            @group(2) @binding(0) var<uniform> localUniforms : LocalUniforms;\n         `\n    ),\n    main: (\n      /* wgsl */\n      ` \n            outColor = vec4<f32>(calculateMSDFAlpha(outColor, localUniforms.uColor, localUniforms.uDistance));\n        `\n    )\n  }\n};\nconst localUniformMSDFBitGl = {\n  name: \"local-uniform-msdf-bit\",\n  vertex: {\n    header: (\n      /* glsl */\n      `\n            uniform mat3 uTransformMatrix;\n            uniform vec4 uColor;\n            uniform float uRound;\n        `\n    ),\n    main: (\n      /* glsl */\n      `\n            vColor *= uColor;\n            modelMatrix *= uTransformMatrix;\n        `\n    ),\n    end: (\n      /* glsl */\n      `\n            if(uRound == 1.)\n            {\n                gl_Position.xy = roundPixels(gl_Position.xy, uResolution);\n            }\n        `\n    )\n  },\n  fragment: {\n    header: (\n      /* glsl */\n      `\n            uniform float uDistance;\n         `\n    ),\n    main: (\n      /* glsl */\n      ` \n            outColor = vec4(calculateMSDFAlpha(outColor, vColor, uDistance));\n        `\n    )\n  }\n};\n\nexport { localUniformMSDFBit, localUniformMSDFBitGl };\n//# sourceMappingURL=localUniformMSDFBit.mjs.map\n","\"use strict\";\nconst mSDFBit = {\n  name: \"msdf-bit\",\n  fragment: {\n    header: (\n      /* wgsl */\n      `\n            fn calculateMSDFAlpha(msdfColor:vec4<f32>, shapeColor:vec4<f32>, distance:f32) -> f32 {\n                \n                // MSDF\n                var median = msdfColor.r + msdfColor.g + msdfColor.b -\n                    min(msdfColor.r, min(msdfColor.g, msdfColor.b)) -\n                    max(msdfColor.r, max(msdfColor.g, msdfColor.b));\n            \n                // SDF\n                median = min(median, msdfColor.a);\n\n                var screenPxDistance = distance * (median - 0.5);\n                var alpha = clamp(screenPxDistance + 0.5, 0.0, 1.0);\n                if (median < 0.01) {\n                    alpha = 0.0;\n                } else if (median > 0.99) {\n                    alpha = 1.0;\n                }\n\n                // Gamma correction for coverage-like alpha\n                var luma: f32 = dot(shapeColor.rgb, vec3<f32>(0.299, 0.587, 0.114));\n                var gamma: f32 = mix(1.0, 1.0 / 2.2, luma);\n                var coverage: f32 = pow(shapeColor.a * alpha, gamma);\n\n                return coverage;\n             \n            }\n        `\n    )\n  }\n};\nconst mSDFBitGl = {\n  name: \"msdf-bit\",\n  fragment: {\n    header: (\n      /* glsl */\n      `\n            float calculateMSDFAlpha(vec4 msdfColor, vec4 shapeColor, float distance) {\n                \n                // MSDF\n                float median = msdfColor.r + msdfColor.g + msdfColor.b -\n                                min(msdfColor.r, min(msdfColor.g, msdfColor.b)) -\n                                max(msdfColor.r, max(msdfColor.g, msdfColor.b));\n               \n                // SDF\n                median = min(median, msdfColor.a);\n            \n                float screenPxDistance = distance * (median - 0.5);\n                float alpha = clamp(screenPxDistance + 0.5, 0.0, 1.0);\n           \n                if (median < 0.01) {\n                    alpha = 0.0;\n                } else if (median > 0.99) {\n                    alpha = 1.0;\n                }\n\n                // Gamma correction for coverage-like alpha\n                float luma = dot(shapeColor.rgb, vec3(0.299, 0.587, 0.114));\n                float gamma = mix(1.0, 1.0 / 2.2, luma);\n                float coverage = pow(shapeColor.a * alpha, gamma);  \n              \n                return coverage;\n            }\n        `\n    )\n  }\n};\n\nexport { mSDFBit, mSDFBitGl };\n//# sourceMappingURL=mSDFBit.mjs.map\n","import { Matrix } from '../../../maths/matrix/Matrix.mjs';\nimport { getMaxTexturesPerBatch } from '../../../rendering/batcher/gl/utils/maxRecommendedTextures.mjs';\nimport { compileHighShaderGpuProgram, compileHighShaderGlProgram } from '../../../rendering/high-shader/compileHighShaderToProgram.mjs';\nimport { colorBit, colorBitGl } from '../../../rendering/high-shader/shader-bits/colorBit.mjs';\nimport { generateTextureBatchBit, generateTextureBatchBitGl } from '../../../rendering/high-shader/shader-bits/generateTextureBatchBit.mjs';\nimport { roundPixelsBit, roundPixelsBitGl } from '../../../rendering/high-shader/shader-bits/roundPixelsBit.mjs';\nimport { getBatchSamplersUniformGroup } from '../../../rendering/renderers/gl/shader/getBatchSamplersUniformGroup.mjs';\nimport { Shader } from '../../../rendering/renderers/shared/shader/Shader.mjs';\nimport { UniformGroup } from '../../../rendering/renderers/shared/shader/UniformGroup.mjs';\nimport { localUniformMSDFBit, localUniformMSDFBitGl } from './shader-bits/localUniformMSDFBit.mjs';\nimport { mSDFBit, mSDFBitGl } from './shader-bits/mSDFBit.mjs';\n\n\"use strict\";\nlet gpuProgram;\nlet glProgram;\nclass SdfShader extends Shader {\n  constructor() {\n    const uniforms = new UniformGroup({\n      uColor: { value: new Float32Array([1, 1, 1, 1]), type: \"vec4<f32>\" },\n      uTransformMatrix: { value: new Matrix(), type: \"mat3x3<f32>\" },\n      uDistance: { value: 4, type: \"f32\" },\n      uRound: { value: 0, type: \"f32\" }\n    });\n    const maxTextures = getMaxTexturesPerBatch();\n    gpuProgram ?? (gpuProgram = compileHighShaderGpuProgram({\n      name: \"sdf-shader\",\n      bits: [\n        colorBit,\n        generateTextureBatchBit(maxTextures),\n        localUniformMSDFBit,\n        mSDFBit,\n        roundPixelsBit\n      ]\n    }));\n    glProgram ?? (glProgram = compileHighShaderGlProgram({\n      name: \"sdf-shader\",\n      bits: [\n        colorBitGl,\n        generateTextureBatchBitGl(maxTextures),\n        localUniformMSDFBitGl,\n        mSDFBitGl,\n        roundPixelsBitGl\n      ]\n    }));\n    super({\n      glProgram,\n      gpuProgram,\n      resources: {\n        localUniforms: uniforms,\n        batchSamplers: getBatchSamplersUniformGroup(maxTextures)\n      }\n    });\n  }\n}\n\nexport { SdfShader };\n//# sourceMappingURL=SdfShader.mjs.map\n","import { Cache } from '../../assets/cache/Cache.mjs';\nimport { ExtensionType } from '../../extensions/Extensions.mjs';\nimport { BigPool } from '../../utils/pool/PoolGroup.mjs';\nimport { Graphics } from '../graphics/shared/Graphics.mjs';\nimport { SdfShader } from '../text/sdfShader/SdfShader.mjs';\nimport { BitmapFontManager } from './BitmapFontManager.mjs';\nimport { getBitmapTextLayout } from './utils/getBitmapTextLayout.mjs';\n\n\"use strict\";\nclass BitmapTextPipe {\n  constructor(renderer) {\n    this._gpuBitmapText = {};\n    this._destroyRenderableBound = this.destroyRenderable.bind(this);\n    this._renderer = renderer;\n    this._renderer.renderableGC.addManagedHash(this, \"_gpuBitmapText\");\n  }\n  validateRenderable(bitmapText) {\n    const graphicsRenderable = this._getGpuBitmapText(bitmapText);\n    if (bitmapText._didTextUpdate) {\n      bitmapText._didTextUpdate = false;\n      this._updateContext(bitmapText, graphicsRenderable);\n    }\n    return this._renderer.renderPipes.graphics.validateRenderable(graphicsRenderable);\n  }\n  addRenderable(bitmapText, instructionSet) {\n    const graphicsRenderable = this._getGpuBitmapText(bitmapText);\n    syncWithProxy(bitmapText, graphicsRenderable);\n    if (bitmapText._didTextUpdate) {\n      bitmapText._didTextUpdate = false;\n      this._updateContext(bitmapText, graphicsRenderable);\n    }\n    this._renderer.renderPipes.graphics.addRenderable(graphicsRenderable, instructionSet);\n    if (graphicsRenderable.context.customShader) {\n      this._updateDistanceField(bitmapText);\n    }\n  }\n  destroyRenderable(bitmapText) {\n    bitmapText.off(\"destroyed\", this._destroyRenderableBound);\n    this._destroyRenderableByUid(bitmapText.uid);\n  }\n  _destroyRenderableByUid(renderableUid) {\n    const context = this._gpuBitmapText[renderableUid].context;\n    if (context.customShader) {\n      BigPool.return(context.customShader);\n      context.customShader = null;\n    }\n    BigPool.return(this._gpuBitmapText[renderableUid]);\n    this._gpuBitmapText[renderableUid] = null;\n  }\n  updateRenderable(bitmapText) {\n    const graphicsRenderable = this._getGpuBitmapText(bitmapText);\n    syncWithProxy(bitmapText, graphicsRenderable);\n    this._renderer.renderPipes.graphics.updateRenderable(graphicsRenderable);\n    if (graphicsRenderable.context.customShader) {\n      this._updateDistanceField(bitmapText);\n    }\n  }\n  _updateContext(bitmapText, proxyGraphics) {\n    const { context } = proxyGraphics;\n    const bitmapFont = BitmapFontManager.getFont(bitmapText.text, bitmapText._style);\n    context.clear();\n    if (bitmapFont.distanceField.type !== \"none\") {\n      if (!context.customShader) {\n        context.customShader = BigPool.get(SdfShader);\n      }\n    }\n    const chars = Array.from(bitmapText.text);\n    const style = bitmapText._style;\n    let currentY = bitmapFont.baseLineOffset;\n    const bitmapTextLayout = getBitmapTextLayout(chars, style, bitmapFont, true);\n    let index = 0;\n    const padding = style.padding;\n    const scale = bitmapTextLayout.scale;\n    let tx = bitmapTextLayout.width;\n    let ty = bitmapTextLayout.height + bitmapTextLayout.offsetY;\n    if (style._stroke) {\n      tx += style._stroke.width / scale;\n      ty += style._stroke.width / scale;\n    }\n    context.translate(-bitmapText._anchor._x * tx - padding, -bitmapText._anchor._y * ty - padding).scale(scale, scale);\n    const tint = bitmapFont.applyFillAsTint ? style._fill.color : 16777215;\n    for (let i = 0; i < bitmapTextLayout.lines.length; i++) {\n      const line = bitmapTextLayout.lines[i];\n      for (let j = 0; j < line.charPositions.length; j++) {\n        const char = chars[index++];\n        const charData = bitmapFont.chars[char];\n        if (charData?.texture) {\n          context.texture(\n            charData.texture,\n            tint ? tint : \"black\",\n            Math.round(line.charPositions[j] + charData.xOffset),\n            Math.round(currentY + charData.yOffset)\n          );\n        }\n      }\n      currentY += bitmapFont.lineHeight;\n    }\n  }\n  _getGpuBitmapText(bitmapText) {\n    return this._gpuBitmapText[bitmapText.uid] || this.initGpuText(bitmapText);\n  }\n  initGpuText(bitmapText) {\n    const proxyRenderable = BigPool.get(Graphics);\n    this._gpuBitmapText[bitmapText.uid] = proxyRenderable;\n    this._updateContext(bitmapText, proxyRenderable);\n    bitmapText.on(\"destroyed\", this._destroyRenderableBound);\n    return this._gpuBitmapText[bitmapText.uid];\n  }\n  _updateDistanceField(bitmapText) {\n    const context = this._getGpuBitmapText(bitmapText).context;\n    const fontFamily = bitmapText._style.fontFamily;\n    const dynamicFont = Cache.get(`${fontFamily}-bitmap`);\n    const { a, b, c, d } = bitmapText.groupTransform;\n    const dx = Math.sqrt(a * a + b * b);\n    const dy = Math.sqrt(c * c + d * d);\n    const worldScale = (Math.abs(dx) + Math.abs(dy)) / 2;\n    const fontScale = dynamicFont.baseRenderedFontSize / bitmapText._style.fontSize;\n    const distance = worldScale * dynamicFont.distanceField.range * (1 / fontScale);\n    context.customShader.resources.localUniforms.uniforms.uDistance = distance;\n  }\n  destroy() {\n    for (const uid in this._gpuBitmapText) {\n      this._destroyRenderableByUid(uid);\n    }\n    this._gpuBitmapText = null;\n    this._renderer = null;\n  }\n}\n/** @ignore */\nBitmapTextPipe.extension = {\n  type: [\n    ExtensionType.WebGLPipes,\n    ExtensionType.WebGPUPipes,\n    ExtensionType.CanvasPipes\n  ],\n  name: \"bitmapText\"\n};\nfunction syncWithProxy(container, proxy) {\n  proxy.groupTransform = container.groupTransform;\n  proxy.groupColorAlpha = container.groupColorAlpha;\n  proxy.groupColor = container.groupColor;\n  proxy.groupBlendMode = container.groupBlendMode;\n  proxy.globalDisplayStatus = container.globalDisplayStatus;\n  proxy.groupTransform = container.groupTransform;\n  proxy.localDisplayStatus = container.localDisplayStatus;\n  proxy.groupAlpha = container.groupAlpha;\n  proxy._roundPixels = container._roundPixels;\n}\n\nexport { BitmapTextPipe };\n//# sourceMappingURL=BitmapTextPipe.mjs.map\n","import { ExtensionType } from '../../extensions/Extensions.mjs';\nimport { Texture } from '../../rendering/renderers/shared/texture/Texture.mjs';\nimport { updateQuadBounds } from '../../utils/data/updateQuadBounds.mjs';\nimport { BigPool } from '../../utils/pool/PoolGroup.mjs';\nimport { BatchableSprite } from '../sprite/BatchableSprite.mjs';\n\n\"use strict\";\nclass HTMLTextPipe {\n  constructor(renderer) {\n    this._gpuText = /* @__PURE__ */ Object.create(null);\n    this._destroyRenderableBound = this.destroyRenderable.bind(this);\n    this._renderer = renderer;\n    this._renderer.runners.resolutionChange.add(this);\n    this._renderer.renderableGC.addManagedHash(this, \"_gpuText\");\n  }\n  resolutionChange() {\n    for (const i in this._gpuText) {\n      const gpuText = this._gpuText[i];\n      if (!gpuText)\n        continue;\n      const text = gpuText.batchableSprite.renderable;\n      if (text._autoResolution) {\n        text._resolution = this._renderer.resolution;\n        text.onViewUpdate();\n      }\n    }\n  }\n  validateRenderable(htmlText) {\n    const gpuText = this._getGpuText(htmlText);\n    const newKey = htmlText._getKey();\n    if (gpuText.textureNeedsUploading) {\n      gpuText.textureNeedsUploading = false;\n      return true;\n    }\n    if (gpuText.currentKey !== newKey) {\n      return true;\n    }\n    return false;\n  }\n  addRenderable(htmlText, instructionSet) {\n    const gpuText = this._getGpuText(htmlText);\n    const batchableSprite = gpuText.batchableSprite;\n    if (htmlText._didTextUpdate) {\n      this._updateText(htmlText);\n    }\n    this._renderer.renderPipes.batch.addToBatch(batchableSprite, instructionSet);\n  }\n  updateRenderable(htmlText) {\n    const gpuText = this._getGpuText(htmlText);\n    const batchableSprite = gpuText.batchableSprite;\n    if (htmlText._didTextUpdate) {\n      this._updateText(htmlText);\n    }\n    batchableSprite._batcher.updateElement(batchableSprite);\n  }\n  destroyRenderable(htmlText) {\n    htmlText.off(\"destroyed\", this._destroyRenderableBound);\n    this._destroyRenderableById(htmlText.uid);\n  }\n  _destroyRenderableById(htmlTextUid) {\n    const gpuText = this._gpuText[htmlTextUid];\n    this._renderer.htmlText.decreaseReferenceCount(gpuText.currentKey);\n    BigPool.return(gpuText.batchableSprite);\n    this._gpuText[htmlTextUid] = null;\n  }\n  _updateText(htmlText) {\n    const newKey = htmlText._getKey();\n    const gpuText = this._getGpuText(htmlText);\n    const batchableSprite = gpuText.batchableSprite;\n    if (gpuText.currentKey !== newKey) {\n      this._updateGpuText(htmlText).catch((e) => {\n        console.error(e);\n      });\n    }\n    htmlText._didTextUpdate = false;\n    const padding = htmlText._style.padding;\n    updateQuadBounds(batchableSprite.bounds, htmlText._anchor, batchableSprite.texture, padding);\n  }\n  async _updateGpuText(htmlText) {\n    htmlText._didTextUpdate = false;\n    const gpuText = this._getGpuText(htmlText);\n    if (gpuText.generatingTexture)\n      return;\n    const newKey = htmlText._getKey();\n    this._renderer.htmlText.decreaseReferenceCount(gpuText.currentKey);\n    gpuText.generatingTexture = true;\n    gpuText.currentKey = newKey;\n    const resolution = htmlText.resolution ?? this._renderer.resolution;\n    const texture = await this._renderer.htmlText.getManagedTexture(\n      htmlText.text,\n      resolution,\n      htmlText._style,\n      htmlText._getKey()\n    );\n    const batchableSprite = gpuText.batchableSprite;\n    batchableSprite.texture = gpuText.texture = texture;\n    gpuText.generatingTexture = false;\n    gpuText.textureNeedsUploading = true;\n    htmlText.onViewUpdate();\n    const padding = htmlText._style.padding;\n    updateQuadBounds(batchableSprite.bounds, htmlText._anchor, batchableSprite.texture, padding);\n  }\n  _getGpuText(htmlText) {\n    return this._gpuText[htmlText.uid] || this.initGpuText(htmlText);\n  }\n  initGpuText(htmlText) {\n    const gpuTextData = {\n      texture: Texture.EMPTY,\n      currentKey: \"--\",\n      batchableSprite: BigPool.get(BatchableSprite),\n      textureNeedsUploading: false,\n      generatingTexture: false\n    };\n    const batchableSprite = gpuTextData.batchableSprite;\n    batchableSprite.renderable = htmlText;\n    batchableSprite.transform = htmlText.groupTransform;\n    batchableSprite.texture = Texture.EMPTY;\n    batchableSprite.bounds = { minX: 0, maxX: 1, minY: 0, maxY: 0 };\n    batchableSprite.roundPixels = this._renderer._roundPixels | htmlText._roundPixels;\n    htmlText._resolution = htmlText._autoResolution ? this._renderer.resolution : htmlText.resolution;\n    this._gpuText[htmlText.uid] = gpuTextData;\n    htmlText.on(\"destroyed\", this._destroyRenderableBound);\n    return gpuTextData;\n  }\n  destroy() {\n    for (const i in this._gpuText) {\n      this._destroyRenderableById(i);\n    }\n    this._gpuText = null;\n    this._renderer = null;\n  }\n}\n/** @ignore */\nHTMLTextPipe.extension = {\n  type: [\n    ExtensionType.WebGLPipes,\n    ExtensionType.WebGPUPipes,\n    ExtensionType.CanvasPipes\n  ],\n  name: \"htmlText\"\n};\n\nexport { HTMLTextPipe };\n//# sourceMappingURL=HTMLTextPipe.mjs.map\n","import { DOMAdapter } from '../../environment/adapter.mjs';\n\n\"use strict\";\nfunction isSafari() {\n  const { userAgent } = DOMAdapter.get().getNavigator();\n  return /^((?!chrome|android).)*safari/i.test(userAgent);\n}\n\nexport { isSafari };\n//# sourceMappingURL=isSafari.mjs.map\n","import { TexturePool } from '../../../rendering/renderers/shared/texture/TexturePool.mjs';\nimport { Bounds } from '../../container/bounds/Bounds.mjs';\n\n\"use strict\";\nconst tempBounds = new Bounds();\nfunction getPo2TextureFromSource(image, width, height, resolution) {\n  const bounds = tempBounds;\n  bounds.minX = 0;\n  bounds.minY = 0;\n  bounds.maxX = image.width / resolution | 0;\n  bounds.maxY = image.height / resolution | 0;\n  const texture = TexturePool.getOptimalTexture(\n    bounds.width,\n    bounds.height,\n    resolution,\n    false\n  );\n  texture.source.uploadMethodId = \"image\";\n  texture.source.resource = image;\n  texture.source.alphaMode = \"premultiply-alpha-on-upload\";\n  texture.frame.width = width / resolution;\n  texture.frame.height = height / resolution;\n  texture.source.emit(\"update\", texture.source);\n  texture.updateUvs();\n  return texture;\n}\n\nexport { getPo2TextureFromSource };\n//# sourceMappingURL=getPo2TextureFromSource.mjs.map\n","\"use strict\";\nfunction extractFontFamilies(text, style) {\n  const fontFamily = style.fontFamily;\n  const fontFamilies = [];\n  const dedupe = {};\n  const regex = /font-family:([^;\"\\s]+)/g;\n  const matches = text.match(regex);\n  function addFontFamily(fontFamily2) {\n    if (!dedupe[fontFamily2]) {\n      fontFamilies.push(fontFamily2);\n      dedupe[fontFamily2] = true;\n    }\n  }\n  if (Array.isArray(fontFamily)) {\n    for (let i = 0; i < fontFamily.length; i++) {\n      addFontFamily(fontFamily[i]);\n    }\n  } else {\n    addFontFamily(fontFamily);\n  }\n  if (matches) {\n    matches.forEach((match) => {\n      const fontFamily2 = match.split(\":\")[1].trim();\n      addFontFamily(fontFamily2);\n    });\n  }\n  for (const i in style.tagStyles) {\n    const fontFamily2 = style.tagStyles[i].fontFamily;\n    addFontFamily(fontFamily2);\n  }\n  return fontFamilies;\n}\n\nexport { extractFontFamilies };\n//# sourceMappingURL=extractFontFamilies.mjs.map\n","import { DOMAdapter } from '../../../environment/adapter.mjs';\n\n\"use strict\";\nasync function loadFontAsBase64(url) {\n  const response = await DOMAdapter.get().fetch(url);\n  const blob = await response.blob();\n  const reader = new FileReader();\n  const dataSrc = await new Promise((resolve, reject) => {\n    reader.onloadend = () => resolve(reader.result);\n    reader.onerror = reject;\n    reader.readAsDataURL(blob);\n  });\n  return dataSrc;\n}\n\nexport { loadFontAsBase64 };\n//# sourceMappingURL=loadFontAsBase64.mjs.map\n","import { loadFontAsBase64 } from './loadFontAsBase64.mjs';\n\n\"use strict\";\nasync function loadFontCSS(style, url) {\n  const dataSrc = await loadFontAsBase64(url);\n  return `@font-face {\n        font-family: \"${style.fontFamily}\";\n        src: url('${dataSrc}');\n        font-weight: ${style.fontWeight};\n        font-style: ${style.fontStyle};\n    }`;\n}\n\nexport { loadFontCSS };\n//# sourceMappingURL=loadFontCSS.mjs.map\n","import { Cache } from '../../../assets/cache/Cache.mjs';\nimport { loadFontCSS } from './loadFontCSS.mjs';\n\n\"use strict\";\nconst FontStylePromiseCache = /* @__PURE__ */ new Map();\nasync function getFontCss(fontFamilies, style, defaultOptions) {\n  const fontPromises = fontFamilies.filter((fontFamily) => Cache.has(`${fontFamily}-and-url`)).map((fontFamily, i) => {\n    if (!FontStylePromiseCache.has(fontFamily)) {\n      const { url } = Cache.get(`${fontFamily}-and-url`);\n      if (i === 0) {\n        FontStylePromiseCache.set(fontFamily, loadFontCSS({\n          fontWeight: style.fontWeight,\n          fontStyle: style.fontStyle,\n          fontFamily\n        }, url));\n      } else {\n        FontStylePromiseCache.set(fontFamily, loadFontCSS({\n          fontWeight: defaultOptions.fontWeight,\n          fontStyle: defaultOptions.fontStyle,\n          fontFamily\n        }, url));\n      }\n    }\n    return FontStylePromiseCache.get(fontFamily);\n  });\n  return (await Promise.all(fontPromises)).join(\"\\n\");\n}\n\nexport { FontStylePromiseCache, getFontCss };\n//# sourceMappingURL=getFontCss.mjs.map\n","\"use strict\";\nfunction getSVGUrl(text, style, resolution, fontCSS, htmlTextData) {\n  const { domElement, styleElement, svgRoot } = htmlTextData;\n  domElement.innerHTML = `<style>${style.cssStyle}</style><div style='padding:0;'>${text}</div>`;\n  domElement.setAttribute(\"style\", `transform: scale(${resolution});transform-origin: top left; display: inline-block`);\n  styleElement.textContent = fontCSS;\n  const { width, height } = htmlTextData.image;\n  svgRoot.setAttribute(\"width\", width.toString());\n  svgRoot.setAttribute(\"height\", height.toString());\n  return new XMLSerializer().serializeToString(svgRoot);\n}\n\nexport { getSVGUrl };\n//# sourceMappingURL=getSVGUrl.mjs.map\n","import { CanvasPool } from '../../../rendering/renderers/shared/texture/CanvasPool.mjs';\n\n\"use strict\";\nfunction getTemporaryCanvasFromImage(image, resolution) {\n  const canvasAndContext = CanvasPool.getOptimalCanvasAndContext(\n    image.width,\n    image.height,\n    resolution\n  );\n  const { context } = canvasAndContext;\n  context.clearRect(0, 0, image.width, image.height);\n  context.drawImage(image, 0, 0);\n  return canvasAndContext;\n}\n\nexport { getTemporaryCanvasFromImage };\n//# sourceMappingURL=getTemporaryCanvasFromImage.mjs.map\n","\"use strict\";\nfunction loadSVGImage(image, url, delay) {\n  return new Promise(async (resolve) => {\n    if (delay) {\n      await new Promise((resolve2) => setTimeout(resolve2, 100));\n    }\n    image.onload = () => {\n      resolve();\n    };\n    image.src = `data:image/svg+xml;charset=utf8,${encodeURIComponent(url)}`;\n    image.crossOrigin = \"anonymous\";\n  });\n}\n\nexport { loadSVGImage };\n//# sourceMappingURL=loadSVGImage.mjs.map\n","import { ExtensionType } from '../../extensions/Extensions.mjs';\nimport { CanvasPool } from '../../rendering/renderers/shared/texture/CanvasPool.mjs';\nimport { TexturePool } from '../../rendering/renderers/shared/texture/TexturePool.mjs';\nimport { RendererType } from '../../rendering/renderers/types.mjs';\nimport { isSafari } from '../../utils/browser/isSafari.mjs';\nimport { warn } from '../../utils/logging/warn.mjs';\nimport { BigPool } from '../../utils/pool/PoolGroup.mjs';\nimport { getPo2TextureFromSource } from '../text/utils/getPo2TextureFromSource.mjs';\nimport { HTMLTextRenderData } from './HTMLTextRenderData.mjs';\nimport { HTMLTextStyle } from './HTMLTextStyle.mjs';\nimport { extractFontFamilies } from './utils/extractFontFamilies.mjs';\nimport { getFontCss } from './utils/getFontCss.mjs';\nimport { getSVGUrl } from './utils/getSVGUrl.mjs';\nimport { getTemporaryCanvasFromImage } from './utils/getTemporaryCanvasFromImage.mjs';\nimport { loadSVGImage } from './utils/loadSVGImage.mjs';\nimport { measureHtmlText } from './utils/measureHtmlText.mjs';\n\n\"use strict\";\nclass HTMLTextSystem {\n  constructor(renderer) {\n    this._activeTextures = {};\n    this._renderer = renderer;\n    this._createCanvas = renderer.type === RendererType.WEBGPU;\n  }\n  getTexture(options) {\n    return this._buildTexturePromise(\n      options.text,\n      options.resolution,\n      options.style\n    );\n  }\n  getManagedTexture(text, resolution, style, textKey) {\n    if (this._activeTextures[textKey]) {\n      this._increaseReferenceCount(textKey);\n      return this._activeTextures[textKey].promise;\n    }\n    const promise = this._buildTexturePromise(text, resolution, style).then((texture) => {\n      this._activeTextures[textKey].texture = texture;\n      return texture;\n    });\n    this._activeTextures[textKey] = {\n      texture: null,\n      promise,\n      usageCount: 1\n    };\n    return promise;\n  }\n  async _buildTexturePromise(text, resolution, style) {\n    const htmlTextData = BigPool.get(HTMLTextRenderData);\n    const fontFamilies = extractFontFamilies(text, style);\n    const fontCSS = await getFontCss(\n      fontFamilies,\n      style,\n      HTMLTextStyle.defaultTextStyle\n    );\n    const measured = measureHtmlText(text, style, fontCSS, htmlTextData);\n    const width = Math.ceil(Math.ceil(Math.max(1, measured.width) + style.padding * 2) * resolution);\n    const height = Math.ceil(Math.ceil(Math.max(1, measured.height) + style.padding * 2) * resolution);\n    const image = htmlTextData.image;\n    const uvSafeOffset = 2;\n    image.width = (width | 0) + uvSafeOffset;\n    image.height = (height | 0) + uvSafeOffset;\n    const svgURL = getSVGUrl(text, style, resolution, fontCSS, htmlTextData);\n    await loadSVGImage(image, svgURL, isSafari() && fontFamilies.length > 0);\n    const resource = image;\n    let canvasAndContext;\n    if (this._createCanvas) {\n      canvasAndContext = getTemporaryCanvasFromImage(image, resolution);\n    }\n    const texture = getPo2TextureFromSource(\n      canvasAndContext ? canvasAndContext.canvas : resource,\n      image.width - uvSafeOffset,\n      image.height - uvSafeOffset,\n      resolution\n    );\n    if (this._createCanvas) {\n      this._renderer.texture.initSource(texture.source);\n      CanvasPool.returnCanvasAndContext(canvasAndContext);\n    }\n    BigPool.return(htmlTextData);\n    return texture;\n  }\n  _increaseReferenceCount(textKey) {\n    this._activeTextures[textKey].usageCount++;\n  }\n  decreaseReferenceCount(textKey) {\n    const activeTexture = this._activeTextures[textKey];\n    if (!activeTexture)\n      return;\n    activeTexture.usageCount--;\n    if (activeTexture.usageCount === 0) {\n      if (activeTexture.texture) {\n        this._cleanUp(activeTexture);\n      } else {\n        activeTexture.promise.then((texture) => {\n          activeTexture.texture = texture;\n          this._cleanUp(activeTexture);\n        }).catch(() => {\n          warn(\"HTMLTextSystem: Failed to clean texture\");\n        });\n      }\n      this._activeTextures[textKey] = null;\n    }\n  }\n  _cleanUp(activeTexture) {\n    TexturePool.returnTexture(activeTexture.texture);\n    activeTexture.texture.source.resource = null;\n    activeTexture.texture.source.uploadMethodId = \"unknown\";\n  }\n  getReferenceCount(textKey) {\n    return this._activeTextures[textKey].usageCount;\n  }\n  destroy() {\n    this._activeTextures = null;\n  }\n}\n/** @ignore */\nHTMLTextSystem.extension = {\n  type: [\n    ExtensionType.WebGLSystem,\n    ExtensionType.WebGPUSystem,\n    ExtensionType.CanvasSystem\n  ],\n  name: \"htmlText\"\n};\nHTMLTextSystem.defaultFontOptions = {\n  fontFamily: \"Arial\",\n  fontStyle: \"normal\",\n  fontWeight: \"normal\"\n};\n\nexport { HTMLTextSystem };\n//# sourceMappingURL=HTMLTextSystem.mjs.map\n","import { ExtensionType } from '../../../extensions/Extensions.mjs';\nimport { updateQuadBounds } from '../../../utils/data/updateQuadBounds.mjs';\nimport { BigPool } from '../../../utils/pool/PoolGroup.mjs';\nimport { BatchableSprite } from '../../sprite/BatchableSprite.mjs';\n\n\"use strict\";\nclass CanvasTextPipe {\n  constructor(renderer) {\n    this._gpuText = /* @__PURE__ */ Object.create(null);\n    this._destroyRenderableBound = this.destroyRenderable.bind(this);\n    this._renderer = renderer;\n    this._renderer.runners.resolutionChange.add(this);\n    this._renderer.renderableGC.addManagedHash(this, \"_gpuText\");\n  }\n  resolutionChange() {\n    for (const i in this._gpuText) {\n      const gpuText = this._gpuText[i];\n      if (!gpuText)\n        continue;\n      const text = gpuText.batchableSprite.renderable;\n      if (text._autoResolution) {\n        text._resolution = this._renderer.resolution;\n        text.onViewUpdate();\n      }\n    }\n  }\n  validateRenderable(text) {\n    const gpuText = this._getGpuText(text);\n    const newKey = text._getKey();\n    if (gpuText.currentKey !== newKey) {\n      return true;\n    }\n    return false;\n  }\n  addRenderable(text, instructionSet) {\n    const gpuText = this._getGpuText(text);\n    const batchableSprite = gpuText.batchableSprite;\n    if (text._didTextUpdate) {\n      this._updateText(text);\n    }\n    this._renderer.renderPipes.batch.addToBatch(batchableSprite, instructionSet);\n  }\n  updateRenderable(text) {\n    const gpuText = this._getGpuText(text);\n    const batchableSprite = gpuText.batchableSprite;\n    if (text._didTextUpdate) {\n      this._updateText(text);\n    }\n    batchableSprite._batcher.updateElement(batchableSprite);\n  }\n  destroyRenderable(text) {\n    text.off(\"destroyed\", this._destroyRenderableBound);\n    this._destroyRenderableById(text.uid);\n  }\n  _destroyRenderableById(textUid) {\n    const gpuText = this._gpuText[textUid];\n    this._renderer.canvasText.decreaseReferenceCount(gpuText.currentKey);\n    BigPool.return(gpuText.batchableSprite);\n    this._gpuText[textUid] = null;\n  }\n  _updateText(text) {\n    const newKey = text._getKey();\n    const gpuText = this._getGpuText(text);\n    const batchableSprite = gpuText.batchableSprite;\n    if (gpuText.currentKey !== newKey) {\n      this._updateGpuText(text);\n    }\n    text._didTextUpdate = false;\n    const padding = text._style.padding;\n    updateQuadBounds(batchableSprite.bounds, text._anchor, batchableSprite.texture, padding);\n  }\n  _updateGpuText(text) {\n    const gpuText = this._getGpuText(text);\n    const batchableSprite = gpuText.batchableSprite;\n    if (gpuText.texture) {\n      this._renderer.canvasText.decreaseReferenceCount(gpuText.currentKey);\n    }\n    gpuText.texture = batchableSprite.texture = this._renderer.canvasText.getManagedTexture(text);\n    gpuText.currentKey = text._getKey();\n    batchableSprite.texture = gpuText.texture;\n  }\n  _getGpuText(text) {\n    return this._gpuText[text.uid] || this.initGpuText(text);\n  }\n  initGpuText(text) {\n    const gpuTextData = {\n      texture: null,\n      currentKey: \"--\",\n      batchableSprite: BigPool.get(BatchableSprite)\n    };\n    gpuTextData.batchableSprite.renderable = text;\n    gpuTextData.batchableSprite.transform = text.groupTransform;\n    gpuTextData.batchableSprite.bounds = { minX: 0, maxX: 1, minY: 0, maxY: 0 };\n    gpuTextData.batchableSprite.roundPixels = this._renderer._roundPixels | text._roundPixels;\n    this._gpuText[text.uid] = gpuTextData;\n    text._resolution = text._autoResolution ? this._renderer.resolution : text.resolution;\n    this._updateText(text);\n    text.on(\"destroyed\", this._destroyRenderableBound);\n    return gpuTextData;\n  }\n  destroy() {\n    for (const i in this._gpuText) {\n      this._destroyRenderableById(i);\n    }\n    this._gpuText = null;\n    this._renderer = null;\n  }\n}\n/** @ignore */\nCanvasTextPipe.extension = {\n  type: [\n    ExtensionType.WebGLPipes,\n    ExtensionType.WebGPUPipes,\n    ExtensionType.CanvasPipes\n  ],\n  name: \"text\"\n};\n\nexport { CanvasTextPipe };\n//# sourceMappingURL=CanvasTextPipe.mjs.map\n","import { Rectangle } from '../../maths/shapes/Rectangle.mjs';\n\n\"use strict\";\nfunction checkRow(data, width, y) {\n  for (let x = 0, index = 4 * y * width; x < width; ++x, index += 4) {\n    if (data[index + 3] !== 0)\n      return false;\n  }\n  return true;\n}\nfunction checkColumn(data, width, x, top, bottom) {\n  const stride = 4 * width;\n  for (let y = top, index = top * stride + 4 * x; y <= bottom; ++y, index += stride) {\n    if (data[index + 3] !== 0)\n      return false;\n  }\n  return true;\n}\nfunction getCanvasBoundingBox(canvas, resolution = 1) {\n  const { width, height } = canvas;\n  const context = canvas.getContext(\"2d\", {\n    willReadFrequently: true\n  });\n  if (context === null) {\n    throw new TypeError(\"Failed to get canvas 2D context\");\n  }\n  const imageData = context.getImageData(0, 0, width, height);\n  const data = imageData.data;\n  let left = 0;\n  let top = 0;\n  let right = width - 1;\n  let bottom = height - 1;\n  while (top < height && checkRow(data, width, top))\n    ++top;\n  if (top === height)\n    return Rectangle.EMPTY;\n  while (checkRow(data, width, bottom))\n    --bottom;\n  while (checkColumn(data, width, left, top, bottom))\n    ++left;\n  while (checkColumn(data, width, right, top, bottom))\n    --right;\n  ++right;\n  ++bottom;\n  return new Rectangle(left / resolution, top / resolution, (right - left) / resolution, (bottom - top) / resolution);\n}\n\nexport { getCanvasBoundingBox };\n//# sourceMappingURL=getCanvasBoundingBox.mjs.map\n","import { Color } from '../../../color/Color.mjs';\nimport { ExtensionType } from '../../../extensions/Extensions.mjs';\nimport { nextPow2 } from '../../../maths/misc/pow2.mjs';\nimport { CanvasPool } from '../../../rendering/renderers/shared/texture/CanvasPool.mjs';\nimport { TexturePool } from '../../../rendering/renderers/shared/texture/TexturePool.mjs';\nimport { getCanvasBoundingBox } from '../../../utils/canvas/getCanvasBoundingBox.mjs';\nimport { deprecation } from '../../../utils/logging/deprecation.mjs';\nimport { TextStyle } from '../TextStyle.mjs';\nimport { getPo2TextureFromSource } from '../utils/getPo2TextureFromSource.mjs';\nimport { CanvasTextMetrics } from './CanvasTextMetrics.mjs';\nimport { fontStringFromTextStyle } from './utils/fontStringFromTextStyle.mjs';\nimport { getCanvasFillStyle } from './utils/getCanvasFillStyle.mjs';\n\n\"use strict\";\nclass CanvasTextSystem {\n  constructor(_renderer) {\n    this._activeTextures = {};\n    this._renderer = _renderer;\n  }\n  getTextureSize(text, resolution, style) {\n    const measured = CanvasTextMetrics.measureText(text || \" \", style);\n    let width = Math.ceil(Math.ceil(Math.max(1, measured.width) + style.padding * 2) * resolution);\n    let height = Math.ceil(Math.ceil(Math.max(1, measured.height) + style.padding * 2) * resolution);\n    width = Math.ceil(width - 1e-6);\n    height = Math.ceil(height - 1e-6);\n    width = nextPow2(width);\n    height = nextPow2(height);\n    return { width, height };\n  }\n  getTexture(options, resolution, style, _textKey) {\n    if (typeof options === \"string\") {\n      deprecation(\"8.0.0\", \"CanvasTextSystem.getTexture: Use object TextOptions instead of separate arguments\");\n      options = {\n        text: options,\n        style,\n        resolution\n      };\n    }\n    if (!(options.style instanceof TextStyle)) {\n      options.style = new TextStyle(options.style);\n    }\n    const { texture, canvasAndContext } = this.createTextureAndCanvas(\n      options\n    );\n    this._renderer.texture.initSource(texture._source);\n    CanvasPool.returnCanvasAndContext(canvasAndContext);\n    return texture;\n  }\n  createTextureAndCanvas(options) {\n    const { text, style } = options;\n    const resolution = options.resolution ?? this._renderer.resolution;\n    const measured = CanvasTextMetrics.measureText(text || \" \", style);\n    const width = Math.ceil(Math.ceil(Math.max(1, measured.width) + style.padding * 2) * resolution);\n    const height = Math.ceil(Math.ceil(Math.max(1, measured.height) + style.padding * 2) * resolution);\n    const canvasAndContext = CanvasPool.getOptimalCanvasAndContext(width, height);\n    const { canvas } = canvasAndContext;\n    this.renderTextToCanvas(text, style, resolution, canvasAndContext);\n    const texture = getPo2TextureFromSource(canvas, width, height, resolution);\n    if (style.trim) {\n      const trimmed = getCanvasBoundingBox(canvas, resolution);\n      texture.frame.copyFrom(trimmed);\n      texture.updateUvs();\n    }\n    return { texture, canvasAndContext };\n  }\n  getManagedTexture(text) {\n    text._resolution = text._autoResolution ? this._renderer.resolution : text.resolution;\n    const textKey = text._getKey();\n    if (this._activeTextures[textKey]) {\n      this._increaseReferenceCount(textKey);\n      return this._activeTextures[textKey].texture;\n    }\n    const { texture, canvasAndContext } = this.createTextureAndCanvas(text);\n    this._activeTextures[textKey] = {\n      canvasAndContext,\n      texture,\n      usageCount: 1\n    };\n    return texture;\n  }\n  _increaseReferenceCount(textKey) {\n    this._activeTextures[textKey].usageCount++;\n  }\n  decreaseReferenceCount(textKey) {\n    const activeTexture = this._activeTextures[textKey];\n    activeTexture.usageCount--;\n    if (activeTexture.usageCount === 0) {\n      CanvasPool.returnCanvasAndContext(activeTexture.canvasAndContext);\n      TexturePool.returnTexture(activeTexture.texture);\n      const source = activeTexture.texture.source;\n      source.resource = null;\n      source.uploadMethodId = \"unknown\";\n      source.alphaMode = \"no-premultiply-alpha\";\n      this._activeTextures[textKey] = null;\n    }\n  }\n  getReferenceCount(textKey) {\n    return this._activeTextures[textKey].usageCount;\n  }\n  /**\n   * Renders text to its canvas, and updates its texture.\n   *\n   * By default this is used internally to ensure the texture is correct before rendering,\n   * but it can be used called externally, for example from this class to 'pre-generate' the texture from a piece of text,\n   * and then shared across multiple Sprites.\n   * @param text\n   * @param style\n   * @param resolution\n   * @param canvasAndContext\n   */\n  renderTextToCanvas(text, style, resolution, canvasAndContext) {\n    const { canvas, context } = canvasAndContext;\n    const font = fontStringFromTextStyle(style);\n    const measured = CanvasTextMetrics.measureText(text || \" \", style);\n    const lines = measured.lines;\n    const lineHeight = measured.lineHeight;\n    const lineWidths = measured.lineWidths;\n    const maxLineWidth = measured.maxLineWidth;\n    const fontProperties = measured.fontProperties;\n    const height = canvas.height;\n    context.resetTransform();\n    context.scale(resolution, resolution);\n    context.textBaseline = style.textBaseline;\n    if (style._stroke?.width) {\n      const strokeStyle = style._stroke;\n      context.lineWidth = strokeStyle.width;\n      context.miterLimit = strokeStyle.miterLimit;\n      context.lineJoin = strokeStyle.join;\n      context.lineCap = strokeStyle.cap;\n    }\n    context.font = font;\n    let linePositionX;\n    let linePositionY;\n    const passesCount = style.dropShadow ? 2 : 1;\n    for (let i = 0; i < passesCount; ++i) {\n      const isShadowPass = style.dropShadow && i === 0;\n      const dsOffsetText = isShadowPass ? Math.ceil(Math.max(1, height) + style.padding * 2) : 0;\n      const dsOffsetShadow = dsOffsetText * resolution;\n      if (isShadowPass) {\n        context.fillStyle = \"black\";\n        context.strokeStyle = \"black\";\n        const shadowOptions = style.dropShadow;\n        const dropShadowColor = shadowOptions.color;\n        const dropShadowAlpha = shadowOptions.alpha;\n        context.shadowColor = Color.shared.setValue(dropShadowColor).setAlpha(dropShadowAlpha).toRgbaString();\n        const dropShadowBlur = shadowOptions.blur * resolution;\n        const dropShadowDistance = shadowOptions.distance * resolution;\n        context.shadowBlur = dropShadowBlur;\n        context.shadowOffsetX = Math.cos(shadowOptions.angle) * dropShadowDistance;\n        context.shadowOffsetY = Math.sin(shadowOptions.angle) * dropShadowDistance + dsOffsetShadow;\n      } else {\n        context.fillStyle = style._fill ? getCanvasFillStyle(style._fill, context) : null;\n        if (style._stroke?.width) {\n          context.strokeStyle = getCanvasFillStyle(style._stroke, context);\n        }\n        context.shadowColor = \"black\";\n      }\n      let linePositionYShift = (lineHeight - fontProperties.fontSize) / 2;\n      if (lineHeight - fontProperties.fontSize < 0) {\n        linePositionYShift = 0;\n      }\n      const strokeWidth = style._stroke?.width ?? 0;\n      for (let i2 = 0; i2 < lines.length; i2++) {\n        linePositionX = strokeWidth / 2;\n        linePositionY = strokeWidth / 2 + i2 * lineHeight + fontProperties.ascent + linePositionYShift;\n        if (style.align === \"right\") {\n          linePositionX += maxLineWidth - lineWidths[i2];\n        } else if (style.align === \"center\") {\n          linePositionX += (maxLineWidth - lineWidths[i2]) / 2;\n        }\n        if (style._stroke?.width) {\n          this._drawLetterSpacing(\n            lines[i2],\n            style,\n            canvasAndContext,\n            linePositionX + style.padding,\n            linePositionY + style.padding - dsOffsetText,\n            true\n          );\n        }\n        if (style._fill !== void 0) {\n          this._drawLetterSpacing(\n            lines[i2],\n            style,\n            canvasAndContext,\n            linePositionX + style.padding,\n            linePositionY + style.padding - dsOffsetText\n          );\n        }\n      }\n    }\n  }\n  /**\n   * Render the text with letter-spacing.\n   * @param text - The text to draw\n   * @param style\n   * @param canvasAndContext\n   * @param x - Horizontal position to draw the text\n   * @param y - Vertical position to draw the text\n   * @param isStroke - Is this drawing for the outside stroke of the\n   *  text? If not, it's for the inside fill\n   */\n  _drawLetterSpacing(text, style, canvasAndContext, x, y, isStroke = false) {\n    const { context } = canvasAndContext;\n    const letterSpacing = style.letterSpacing;\n    let useExperimentalLetterSpacing = false;\n    if (CanvasTextMetrics.experimentalLetterSpacingSupported) {\n      if (CanvasTextMetrics.experimentalLetterSpacing) {\n        context.letterSpacing = `${letterSpacing}px`;\n        context.textLetterSpacing = `${letterSpacing}px`;\n        useExperimentalLetterSpacing = true;\n      } else {\n        context.letterSpacing = \"0px\";\n        context.textLetterSpacing = \"0px\";\n      }\n    }\n    if (letterSpacing === 0 || useExperimentalLetterSpacing) {\n      if (isStroke) {\n        context.strokeText(text, x, y);\n      } else {\n        context.fillText(text, x, y);\n      }\n      return;\n    }\n    let currentPosition = x;\n    const stringArray = CanvasTextMetrics.graphemeSegmenter(text);\n    let previousWidth = context.measureText(text).width;\n    let currentWidth = 0;\n    for (let i = 0; i < stringArray.length; ++i) {\n      const currentChar = stringArray[i];\n      if (isStroke) {\n        context.strokeText(currentChar, currentPosition, y);\n      } else {\n        context.fillText(currentChar, currentPosition, y);\n      }\n      let textStr = \"\";\n      for (let j = i + 1; j < stringArray.length; ++j) {\n        textStr += stringArray[j];\n      }\n      currentWidth = context.measureText(textStr).width;\n      currentPosition += previousWidth - currentWidth + letterSpacing;\n      previousWidth = currentWidth;\n    }\n  }\n  destroy() {\n    this._activeTextures = null;\n  }\n}\n/** @ignore */\nCanvasTextSystem.extension = {\n  type: [\n    ExtensionType.WebGLSystem,\n    ExtensionType.WebGPUSystem,\n    ExtensionType.CanvasSystem\n  ],\n  name: \"canvasText\"\n};\n\nexport { CanvasTextSystem };\n//# sourceMappingURL=CanvasTextSystem.mjs.map\n","import { extensions } from '../extensions/Extensions.mjs';\nimport { ResizePlugin } from './ResizePlugin.mjs';\nimport { TickerPlugin } from './TickerPlugin.mjs';\n\n\"use strict\";\nextensions.add(ResizePlugin);\nextensions.add(TickerPlugin);\n//# sourceMappingURL=init.mjs.map\n","import { extensions } from '../../extensions/Extensions.mjs';\nimport { GraphicsContextSystem } from './shared/GraphicsContextSystem.mjs';\nimport { GraphicsPipe } from './shared/GraphicsPipe.mjs';\n\n\"use strict\";\nextensions.add(GraphicsPipe);\nextensions.add(GraphicsContextSystem);\n//# sourceMappingURL=init.mjs.map\n","import { extensions } from '../../extensions/Extensions.mjs';\nimport { MeshPipe } from './shared/MeshPipe.mjs';\n\n\"use strict\";\nextensions.add(MeshPipe);\n//# sourceMappingURL=init.mjs.map\n","import { extensions } from '../../extensions/Extensions.mjs';\nimport { GlParticleContainerPipe } from './shared/GlParticleContainerPipe.mjs';\nimport { GpuParticleContainerPipe } from './shared/GpuParticleContainerPipe.mjs';\n\n\"use strict\";\nextensions.add(GlParticleContainerPipe);\nextensions.add(GpuParticleContainerPipe);\n//# sourceMappingURL=init.mjs.map\n","import { extensions } from '../../extensions/Extensions.mjs';\nimport { CanvasTextPipe } from './canvas/CanvasTextPipe.mjs';\nimport { CanvasTextSystem } from './canvas/CanvasTextSystem.mjs';\n\n\"use strict\";\nextensions.add(CanvasTextSystem);\nextensions.add(CanvasTextPipe);\n//# sourceMappingURL=init.mjs.map\n","import { extensions } from '../../extensions/Extensions.mjs';\nimport { BitmapTextPipe } from './BitmapTextPipe.mjs';\n\n\"use strict\";\nextensions.add(BitmapTextPipe);\n//# sourceMappingURL=init.mjs.map\n","import { extensions } from '../../extensions/Extensions.mjs';\nimport { HTMLTextPipe } from './HTMLTextPipe.mjs';\nimport { HTMLTextSystem } from './HTMLTextSystem.mjs';\n\n\"use strict\";\nextensions.add(HTMLTextSystem);\nextensions.add(HTMLTextPipe);\n//# sourceMappingURL=init.mjs.map\n","import { extensions } from '../../extensions/Extensions.mjs';\nimport { TilingSpritePipe } from './TilingSpritePipe.mjs';\n\n\"use strict\";\nextensions.add(TilingSpritePipe);\n//# sourceMappingURL=init.mjs.map\n","import { extensions } from '../../extensions/Extensions.mjs';\nimport { NineSliceSpritePipe } from './NineSliceSpritePipe.mjs';\n\n\"use strict\";\nextensions.add(NineSliceSpritePipe);\n//# sourceMappingURL=init.mjs.map\n","import { extensions } from '../extensions/Extensions.mjs';\nimport { FilterPipe } from './FilterPipe.mjs';\nimport { FilterSystem } from './FilterSystem.mjs';\n\n\"use strict\";\nextensions.add(FilterSystem);\nextensions.add(FilterPipe);\n//# sourceMappingURL=init.mjs.map\n"],"names":["idCounts","idHash","createIdFromString","value","groupId","id","context","getTestContext","DOMAdapter","maxFragmentPrecision","getMaxFragmentPrecision","gl","addProgramDefines","src","isES300","isFragment","ensurePrecision","options","maxSupportedPrecision","precision","insertVersion","fragmentNameCache","VertexNameCache","setProgramName","name","nameCache","stripVersion","processes","programCache","_GlProgram","preprocessorOptions","fragment","vertex","processKey","processOptions","key","GlProgram","attributeFormatData","getAttributeInfoFromFormat","format","WGSL_TO_VERTEX_TYPES","extractAttributesFromGpuProgram","source","entryPoint","results","mainVertStart","arrowFunctionStart","functionArgsSubstring","inputsRegex","match","extractStructAndGroups","wgsl","linePattern","groupPattern","bindingPattern","namePattern","typePattern","structPattern","structMemberPattern","structName","groups","item","structs","struct","members","acc","member","name2","type","group","ShaderStage","ShaderStage2","generateGpuLayoutGroups","layout","i","generateLayoutHash","removeStructAndGroupDuplicates","vertexStructsAndGroups","fragmentStructsAndGroups","structNameSet","dupeGroupKeySet","GpuProgram","gpuLayout","structsAndGroups","bigKey","UNIFORM_TYPES_VALUES","UNIFORM_TYPES_MAP","getDefaultUniformValue","size","_UniformGroup","uniformStructures","uid","uniforms","uniformData","UniformGroup","BindGroup","resources","index","resource","keyParts","currentResource","tick","RendererType","RendererType2","Shader","EventEmitter","gpuProgram","glProgram","compatibleRenderers","groupMap","nameHash","j","uniformName","groupData","data","bindTick","groupIndex","bindIndex","_a","_b","uniformsOut","destroyPrograms","bindGroup","gpu","rest","blendModeIds","BLEND","OFFSET","CULLING","DEPTH_TEST","WINDING","DEPTH_MASK","_State","state","State","ResizePlugin","dom","width","height","clientWidth","clientHeight","ExtensionType","TickerPlugin","ticker","UPDATE_PRIORITY","Ticker","oldTicker","AbstractBitmapFont","deprecation","v8_0_0","destroyTextures","page","_FillGradient","x0","y0","x1","y1","offset","color","Color","defaultSize","gradientStops","canvas","ctx","gradient","stop","Texture","ImageSource","m","Matrix","dx","dy","dist","angle","stops","texture","transform","FillGradient","repetitionMap","FillPattern","repetition","parseSvgPath","parse","length","segment","path","_","command","args","parseValues","number","numbers","SVGToGraphicsPath","svgPath","commands","subpaths","currentSubPath","lastX","lastY","warn","Circle","x","y","radius","r2","alignment","outerWidth","distance","out","Rectangle","circle","Ellipse","halfWidth","halfHeight","normx","normy","strokeWidth","strokeOuterWidth","strokeInnerWidth","innerHorizontal","innerVertical","outerHorizontal","outerVertical","normalizedX","normalizedY","innerEllipse","outerEllipse","ellipse","squaredDistanceToLineSegment","x2","y2","a","b","c","d","dot","lenSq","param","xx","yy","Polygon","points","flat","p","il","polygon","inside","xi","yi","xj","yj","strokeWidthSquared","rightWidthSquared","leftWidthSquared","iterationLength","distanceSquared","sign","minX","maxX","minY","maxY","n","pointsDesc","currentPoint","isCornerWithinStroke","pX","pY","cornerX","cornerY","strokeWidthInner","strokeWidthOuter","RoundedRectangle","rectangle","radius2","innerX","innerY","innerWidth","innerHeight","rightBound","bottomBound","fragTemplate","generateIfTestSrc","maxIfs","checkMaxIfStatementsInShader","shader","fragmentSrc","maxTexturesPerBatchCache","getMaxTexturesPerBatch","cachedGroups","getTextureBatchBindGroup","textures","generateTextureBatchBindGroup","maxTextures","bindGroupResources","ViewableBuffer","sizeOrBuffer","fastCopy","sourceBuffer","destinationBuffer","lengthDouble","sourceFloat64View","remainingBytes","sourceUint8View","BLEND_TO_NPM","getAdjustedBlendModeBlend","blendMode","textureSource","BatchTextureArray","t","Batch","batchPool","batchPoolIndex","getBatchFromPool","returnBatchToPool","batch","BATCH_TICK","_Batcher","attributesInitialSize","indicesInitialSize","batchableObject","textureId","attributeBuffer","instructionSet","elements","textureBatch","firstElement","topology","f32","u32","indexBuffer","start","action","element","adjustedBlendMode","breakRequired","indexStart","indexSize","newSize","newArrayBuffer","newIndexBuffer","indicesOffset","indices","indexOffset","attributeOffset","Batcher","BufferUsage","BufferUsage2","Buffer","usage","label","shrinkToFit","mappedAtCreation","syncGPU","oldData","sizeInBytes","ensureIsBuffer","buffer","getGeometryBounds","geometry","attributeId","bounds","attribute","byteSize","stride","ensureIsAttribute","Geometry","Bounds","attributes","attributeOption","destroyBuffers","placeHolderBufferData","placeHolderIndexData","BatchGeometry","addBits","srcParts","parts","part","sanitisedPart","findHooksRx","compileHooks","programSrc","hook","extractInputs","fragmentSource","regex","compileInputs","fragments","template","sort","mainInput","finalString","inValue","cleanedString","extractOutputs","extractVariableName","stripVariable","compileOutputs","mainStruct","mainStart","mainEnd","compiledCode","injectBits","templateSrc","fragmentParts","cacheMap","bitCacheMap","CACHE_UID","compileHighShader","bits","cacheId","generateCacheId","compileInputsAndOutputs","compileBits","compileHighShaderGl","vertexFragments","shaderBit","v","fragmentFragments","compiledVertex","compiledFragment","highFragment","vertexParts","vertexGPUTemplate","fragmentGPUTemplate","vertexGlTemplate","fragmentGlTemplate","globalUniformsBit","globalUniformsBitGl","compileHighShaderGpuProgram","compileHighShaderGlProgram","colorBit","colorBitGl","textureBatchBitGpuCache","generateBindingSrc","bindingIndex","generateSampleSrc","generateTextureBatchBit","textureBatchBitGlCache","generateSampleGlSrc","generateTextureBatchBitGl","roundPixelsBit","roundPixelsBitGl","batchSamplersUniformGroupHash","getBatchSamplersUniformGroup","batchSamplersUniformGroup","sampleValues","DefaultShader","defaultShader","_DefaultBatcher","float32View","uint32View","textureIdAndRound","wt","tx","ty","positions","uvs","argb","end","i2","w0","w1","h0","h1","DefaultBatcher","buildUvs","vertices","verticesStride","verticesOffset","uvsOffset","uvsStride","matrix","buildSimpleUvs","transformVertices","identityMatrix","BatchableGraphics","rgb","bgr","renderable","multiplyHexColors","gpuBuffer","buildCircle","shape","rx","ry","roundedRect","j1","j2","j3","j4","y22","x02","y02","x12","x22","y12","centerX","centerY","count","centerIndex","buildEllipse","buildRoundedRectangle","closePointEps","curveEps","getOrientationOfPoints","area","square","nx","ny","innerWeight","outerWeight","clockwise","verts","ix","iy","ox","oy","exx","eyy","eix","eiy","eox","eoy","round","cx","cy","sx","sy","ex","ey","cx2p0x","cy2p0y","angle0","angle1","startAngle","angleDiff","absAngleDiff","segCount","angleInc","buildLine","lineStyle","flipAlignment","closed","eps","style","orientation","firstPoint","Point","lastPoint","closedShape","closedPath","midPointX","midPointY","indexCount","widthSquared","miterLimitSquared","perpX","perpY","perp1x","perp1y","ratio","dx0","dy0","dx1","dy1","cross","c1","c2","px","py","pDist","imx","imy","omx","omy","smallerInsideSegmentSq","insideWeight","smallerInsideDiagonalSq","eps2","buildPixelLine","fx","fy","lx","ly","closePath","triangulateWithHoles","holes","triangles","earcut","emptyArray","buildPolygon","buildRectangle","rectData","verticesIndex","buildTriangle","shapeBuilders","extensions","tempRect","buildContextBatches","gpuContext","geometryData","batches","instruction","addTextureToGeometryData","isStroke","shapePath","hole","addShapePathToGeometryData","vertOffset","build","rect","textureUvs","graphicsBatch","BigPool","lastIndex","close","holeIndices","otherPoints","getHoleArrays","holePoints","textureMatrix","holePrimitives","holeArrays","k","holePrimitive","GpuGraphicsContext","GraphicsContextRenderData","InstructionSet","v8_3_4","_GraphicsContextSystem","renderer","batchMode","graphicsData","vertexSize","batcher","drawBatches","GraphicsContextSystem","RECURSION_LIMIT","FLT_EPSILON","PATH_DISTANCE_EPSILON","buildAdaptiveBezier","sX","sY","cp1x","cp1y","cp2x","cp2y","eX","eY","smoothness","smoothing","distanceTolerance","begin","recursive","x3","y3","x4","y4","level","x23","y23","x34","y34","x123","y123","x234","y234","x1234","y1234","d2","d3","buildAdaptiveQuadratic","buildArc","steps","f","cs","sn","buildArcTo","fromX","a1","b1","a2","b2","mm","dd","cc","tt","k1","k2","qx","qy","endAngle","TAU","mapToEllipse","cosPhi","sinPhi","out2","xp","yp","approxUnitArc","ang1","ang2","vectorAngle","ux","uy","vx","vy","getArcCenter","largeArcFlag","sweepFlag","pxp","pyp","rxSq","rySq","pxpSq","pypSq","radicant","centerXp","centerYp","vx1","vy1","vx2","vy2","buildArcToSvg","xAxisRotation","lambda","segments","outCurvePoint","curve","roundedShapeArc","g","vecFrom","pp","len","sharpCorner","p1","p2","pRadius","p3","v1","v2","radDirection","drawDirection","halfAngle","cRadius","lenOut","cX","cY","roundedShapeQuadraticCurve","pointLerp","numPoints","thisPoint","nextPoint","lastEdgeLength","lastOffsetDistance","nextEdgeLength","nextOffsetDistance","tempRectangle","ShapePath","graphicsPath2D","fromY","counterclockwise","currentPoly","w","h","sides","rotation","delta","corner","sideLength","internalAngle","useQuadratic","fillet","maxFillet","inset","right","bottom","dir","chamfer","radiusX","radiusY","lastShape","tempX","shapePrimitives","shapePrimitive","boundsRect","GraphicsPath","instructions","last","currentX","currentY","cpx1","cpy1","innerRadius","r","deep","newGraphicsPath2D","cpx2","cpy2","adjustTransform","lastInstruction","currentMatrix","SVGParser","svg","graphicsContext","div","session","renderChildren","fillStyle","strokeStyle","children","f1","s1","parseStyle","pointsString","graphicsPath","parseFloatAttribute","defaultValue","useFill","useStroke","styleParts","stylePart","stroke","fill","isColorLike","isFillPattern","isFillGradient","handleColorLike","defaultStyle","temp","handleFillPattern","handleFillGradient","handleFillObject","sourceStyle","toFillStyle","objectStyle","toStrokeStyle","miterLimit","cap","join","pixelLine","tmpPoint","tempMatrix","_GraphicsContext","clone","tint","dw","dh","alpha","holePath","transformedX","transformedY","cpx","cpy","outerPadding","_bounds","point","hasHit","shapes","transformedPoint","holeShapes","destroyTextureSource","GraphicsContext","valuesToIterateForKeys","generateTextStyleKey","prop","addFillStyleKey","addStokeStyleKey","addDropShadowKey","dropShadow","_TextStyle","convertV7Tov8Style","fullStyle","thisKey","cb","target","property","newValue","TextStyle","oldStyle","defaults","obj","fontSize","gradientFill","fills","CanvasPoolClass","canvasOptions","pixelWidth","pixelHeight","minWidth","minHeight","resolution","nextPow2","canvasAndContext","CanvasPool","genericFontFamilies","fontStringFromTextStyle","fontSizeString","fontFamilies","fontFamily","contextSettings","_CanvasTextMetrics","result","proto","text","lines","lineWidths","lineHeight","maxLineWidth","fontProperties","wordWrap","textKey","font","lineWidth","letterSpacing","useExperimentalLetterSpacing","metrics","metricWidth","actualBoundingBoxLeft","boundsWidth","val","line","cache","whiteSpace","collapseSpaces","collapseNewlines","canPrependSpaces","wordWrapWidth","tokens","token","currIsBreakingSpace","lastIsBreakingSpace","tokenWidth","characters","char","lastChar","nextChar","characterWidth","isLastToken","newLine","_nextChar","_token","breakWords","_char","_index","_breakWords","properties","segmenter","s","CanvasTextMetrics","getCanvasFillStyle","fillPattern","pattern","fillGradient","resolveCharacters","chars","startCode","endCode","_DynamicBitmapFont","dynamicOptions","requestedFontSize","charList","self","pageData","fontScale","padding","maxCharHeight","skipTexture","maxTextureWidth","maxTextureHeight","textureGlyphWidth","paddedWidth","paddedHeight","pageData2","xAdvance","frame","newChars","measureCache","first","second","total","amount","textureResolution","strokeThickness","shadowOptions","dropShadowBlur","dropShadowDistance","descent","DynamicBitmapFont","getBitmapTextLayout","trimEnd","layoutData","currentLine","previousChar","firstWord","currentWord","nextWord","word","position","nextLine","scale","adjustedLetterSpacing","adjustedWordWrapWidth","isEnd","charData","spaceWidth","kerning","nextCharWidth","alignCenter","alignRight","alignJustify","measurementData","indy","spaceIndex","totalSpaces","fontCount","BitmapFontManagerClass","fontFamilyKey","overrideFill","Cache","fnt","dynamicFont","bitmapFont","textStyle","flatChars","cacheKey","BitmapFontManager","FilterPipe","filterEffect","container","_filterEffect","_container","getFastGlobalBounds","_getGlobalBoundsRecursive","renderGroup","manageEffects","localBounds","boundsPool","viewBounds","advanced","getGlobalRenderableBounds","renderables","quadGeometry","FilterSystem","filters","filterData","filterFrameTransform","colorTextureSource","antialias","blendRequired","enabled","clipToViewport","filter","viewPort","rootResolution","TexturePool","inputTexture","backTexture","previousBounds","renderTarget","flip","flop","lastRenderSurface","backgroundResolution","input","output","clear","isFinalTarget","currentIndex","filterUniforms","outputFrame","inputSize","inputPixel","inputClamp","globalFrame","outputTexture","filterData2","rootTexture","batchUniforms","outputMatrix","sprite","mappedMatrix","worldTransform","Graphics","ViewContainer","roundPixels","method","_MeshGeometry","positionBuffer","uvBuffer","MeshGeometry","textStyleToCSS","cssStyles","strokeToCSS","dropShadowToCSS","tagStyleToCSS","dropShadowStyle","templates","tagStyles","tagStyle","cssTagStyle","HTMLTextStyle","toAdd","toRemove","nssvg","nsxhtml","HTMLTextRenderData","foreignObject","svgRoot","styleElement","domElement","tempHTMLTextRenderData","measureHtmlText","fontStyleCSS","htmlTextRenderData","contentBounds","doublePadding","localUniformBit","localUniformBitGl","BatchableSprite","color32BitToUniform","abgr","GraphicsPipe","adaptor","graphics","wasBatched","localUniforms","batchPipe","batchClone","graphicsUid","_PlaneGeometry","verticesX","verticesY","sizeX","sizeY","totalSub","xpos","ypos","value2","value3","value4","PlaneGeometry","BatchableMesh","transformedUvs","MeshPipe","mesh","meshData","isBatched","batchableMesh","batched","gpuBatchableMesh","gpuMesh","GlParticleContainerAdaptor","particleContainerPipe","glType","GpuParticleContainerAdaptor","createIndicesForQuads","outBuffer","totalIndices","generateParticleUpdateFunction","generateUpdateFunction","dynamic","funcFragments","attributeInfo","functionSource","ParticleBuffer","staticVertexSize","dynamicVertexSize","dynamicOffset","staticOffset","uploadFunction","getParticleSyncKey","particles","uploadStatic","dynamicAttributeBuffer","staticAttributeBuffer","keyGen","ParticleShader","TextureStyle","ParticleContainerPipe","_renderable","transformationMatrix","GlParticleContainerPipe","GpuParticleContainerPipe","_NineSliceGeometry","scaleW","scaleH","_uvw","_uvh","NineSliceGeometry","NineSliceSpritePipe","gpuSprite","batchableSprite","tilingBit","tilingBitGl","TilingSpriteShader","tilingUniforms","anchorX","anchorY","textureWidth","textureHeight","uTextureTransform","QuadGeometry","setPositions","tilingSprite","applyMatrix","array","setUvs","sharedQuad","TilingSpritePipe","tilingSpriteData","couldBatch","canBatch","renderableData","_nonPowOf2wrapping","localUniformMSDFBit","localUniformMSDFBitGl","mSDFBit","mSDFBitGl","SdfShader","BitmapTextPipe","bitmapText","graphicsRenderable","syncWithProxy","renderableUid","proxyGraphics","bitmapTextLayout","proxyRenderable","worldScale","proxy","HTMLTextPipe","gpuText","htmlText","newKey","htmlTextUid","e","updateQuadBounds","gpuTextData","isSafari","userAgent","tempBounds","getPo2TextureFromSource","image","extractFontFamilies","dedupe","matches","addFontFamily","fontFamily2","loadFontAsBase64","url","blob","reader","resolve","reject","loadFontCSS","dataSrc","FontStylePromiseCache","getFontCss","defaultOptions","fontPromises","getSVGUrl","fontCSS","htmlTextData","getTemporaryCanvasFromImage","loadSVGImage","delay","resolve2","HTMLTextSystem","promise","measured","uvSafeOffset","svgURL","activeTexture","CanvasTextPipe","textUid","checkRow","checkColumn","top","getCanvasBoundingBox","left","CanvasTextSystem","_renderer","_textKey","trimmed","linePositionX","linePositionY","passesCount","isShadowPass","dsOffsetText","dsOffsetShadow","dropShadowColor","dropShadowAlpha","linePositionYShift","currentPosition","stringArray","previousWidth","currentWidth","currentChar","textStr"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166]}