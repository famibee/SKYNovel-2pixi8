{"version":3,"file":"browserAll.js","sources":["../node_modules/ismobilejs/esm/isMobile.js","../node_modules/pixi.js/lib/utils/browser/isMobile.mjs","../node_modules/pixi.js/lib/accessibility/AccessibilitySystem.mjs","../node_modules/pixi.js/lib/accessibility/accessibilityTarget.mjs","../node_modules/pixi.js/lib/events/EventSystem.mjs","../node_modules/pixi.js/lib/events/FederatedEventTarget.mjs","../node_modules/pixi.js/lib/accessibility/init.mjs","../node_modules/pixi.js/lib/events/init.mjs"],"sourcesContent":["var appleIphone = /iPhone/i;\nvar appleIpod = /iPod/i;\nvar appleTablet = /iPad/i;\nvar appleUniversal = /\\biOS-universal(?:.+)Mac\\b/i;\nvar androidPhone = /\\bAndroid(?:.+)Mobile\\b/i;\nvar androidTablet = /Android/i;\nvar amazonPhone = /(?:SD4930UR|\\bSilk(?:.+)Mobile\\b)/i;\nvar amazonTablet = /Silk/i;\nvar windowsPhone = /Windows Phone/i;\nvar windowsTablet = /\\bWindows(?:.+)ARM\\b/i;\nvar otherBlackBerry = /BlackBerry/i;\nvar otherBlackBerry10 = /BB10/i;\nvar otherOpera = /Opera Mini/i;\nvar otherChrome = /\\b(CriOS|Chrome)(?:.+)Mobile/i;\nvar otherFirefox = /Mobile(?:.+)Firefox\\b/i;\nvar isAppleTabletOnIos13 = function (navigator) {\n    return (typeof navigator !== 'undefined' &&\n        navigator.platform === 'MacIntel' &&\n        typeof navigator.maxTouchPoints === 'number' &&\n        navigator.maxTouchPoints > 1 &&\n        typeof MSStream === 'undefined');\n};\nfunction createMatch(userAgent) {\n    return function (regex) { return regex.test(userAgent); };\n}\nexport default function isMobile(param) {\n    var nav = {\n        userAgent: '',\n        platform: '',\n        maxTouchPoints: 0\n    };\n    if (!param && typeof navigator !== 'undefined') {\n        nav = {\n            userAgent: navigator.userAgent,\n            platform: navigator.platform,\n            maxTouchPoints: navigator.maxTouchPoints || 0\n        };\n    }\n    else if (typeof param === 'string') {\n        nav.userAgent = param;\n    }\n    else if (param && param.userAgent) {\n        nav = {\n            userAgent: param.userAgent,\n            platform: param.platform,\n            maxTouchPoints: param.maxTouchPoints || 0\n        };\n    }\n    var userAgent = nav.userAgent;\n    var tmp = userAgent.split('[FBAN');\n    if (typeof tmp[1] !== 'undefined') {\n        userAgent = tmp[0];\n    }\n    tmp = userAgent.split('Twitter');\n    if (typeof tmp[1] !== 'undefined') {\n        userAgent = tmp[0];\n    }\n    var match = createMatch(userAgent);\n    var result = {\n        apple: {\n            phone: match(appleIphone) && !match(windowsPhone),\n            ipod: match(appleIpod),\n            tablet: !match(appleIphone) &&\n                (match(appleTablet) || isAppleTabletOnIos13(nav)) &&\n                !match(windowsPhone),\n            universal: match(appleUniversal),\n            device: (match(appleIphone) ||\n                match(appleIpod) ||\n                match(appleTablet) ||\n                match(appleUniversal) ||\n                isAppleTabletOnIos13(nav)) &&\n                !match(windowsPhone)\n        },\n        amazon: {\n            phone: match(amazonPhone),\n            tablet: !match(amazonPhone) && match(amazonTablet),\n            device: match(amazonPhone) || match(amazonTablet)\n        },\n        android: {\n            phone: (!match(windowsPhone) && match(amazonPhone)) ||\n                (!match(windowsPhone) && match(androidPhone)),\n            tablet: !match(windowsPhone) &&\n                !match(amazonPhone) &&\n                !match(androidPhone) &&\n                (match(amazonTablet) || match(androidTablet)),\n            device: (!match(windowsPhone) &&\n                (match(amazonPhone) ||\n                    match(amazonTablet) ||\n                    match(androidPhone) ||\n                    match(androidTablet))) ||\n                match(/\\bokhttp\\b/i)\n        },\n        windows: {\n            phone: match(windowsPhone),\n            tablet: match(windowsTablet),\n            device: match(windowsPhone) || match(windowsTablet)\n        },\n        other: {\n            blackberry: match(otherBlackBerry),\n            blackberry10: match(otherBlackBerry10),\n            opera: match(otherOpera),\n            firefox: match(otherFirefox),\n            chrome: match(otherChrome),\n            device: match(otherBlackBerry) ||\n                match(otherBlackBerry10) ||\n                match(otherOpera) ||\n                match(otherFirefox) ||\n                match(otherChrome)\n        },\n        any: false,\n        phone: false,\n        tablet: false\n    };\n    result.any =\n        result.apple.device ||\n            result.android.device ||\n            result.windows.device ||\n            result.other.device;\n    result.phone =\n        result.apple.phone || result.android.phone || result.windows.phone;\n    result.tablet =\n        result.apple.tablet || result.android.tablet || result.windows.tablet;\n    return result;\n}\n//# sourceMappingURL=isMobile.js.map","import isMobileJs from 'ismobilejs';\n\n\"use strict\";\nconst isMobileCall = isMobileJs.default ?? isMobileJs;\nconst isMobile = isMobileCall(globalThis.navigator);\n\nexport { isMobile };\n//# sourceMappingURL=isMobile.mjs.map\n","import { FederatedEvent } from '../events/FederatedEvent.mjs';\nimport { ExtensionType } from '../extensions/Extensions.mjs';\nimport { isMobile } from '../utils/browser/isMobile.mjs';\nimport { removeItems } from '../utils/data/removeItems.mjs';\n\n\"use strict\";\nconst KEY_CODE_TAB = 9;\nconst DIV_TOUCH_SIZE = 100;\nconst DIV_TOUCH_POS_X = 0;\nconst DIV_TOUCH_POS_Y = 0;\nconst DIV_TOUCH_ZINDEX = 2;\nconst DIV_HOOK_SIZE = 1;\nconst DIV_HOOK_POS_X = -1e3;\nconst DIV_HOOK_POS_Y = -1e3;\nconst DIV_HOOK_ZINDEX = 2;\nclass AccessibilitySystem {\n  // 2fps\n  // eslint-disable-next-line jsdoc/require-param\n  /**\n   * @param {WebGLRenderer|WebGPURenderer} renderer - A reference to the current renderer\n   */\n  constructor(renderer, _mobileInfo = isMobile) {\n    this._mobileInfo = _mobileInfo;\n    /** Setting this to true will visually show the divs. */\n    this.debug = false;\n    /** Internal variable, see isActive getter. */\n    this._isActive = false;\n    /** Internal variable, see isMobileAccessibility getter. */\n    this._isMobileAccessibility = false;\n    /** A simple pool for storing divs. */\n    this._pool = [];\n    /** This is a tick used to check if an object is no longer being rendered. */\n    this._renderId = 0;\n    /** The array of currently active accessible items. */\n    this._children = [];\n    /** Count to throttle div updates on android devices. */\n    this._androidUpdateCount = 0;\n    /**  The frequency to update the div elements. */\n    this._androidUpdateFrequency = 500;\n    this._hookDiv = null;\n    if (_mobileInfo.tablet || _mobileInfo.phone) {\n      this._createTouchHook();\n    }\n    const div = document.createElement(\"div\");\n    div.style.width = `${DIV_TOUCH_SIZE}px`;\n    div.style.height = `${DIV_TOUCH_SIZE}px`;\n    div.style.position = \"absolute\";\n    div.style.top = `${DIV_TOUCH_POS_X}px`;\n    div.style.left = `${DIV_TOUCH_POS_Y}px`;\n    div.style.zIndex = DIV_TOUCH_ZINDEX.toString();\n    this._div = div;\n    this._renderer = renderer;\n    this._onKeyDown = this._onKeyDown.bind(this);\n    this._onMouseMove = this._onMouseMove.bind(this);\n    globalThis.addEventListener(\"keydown\", this._onKeyDown, false);\n  }\n  /**\n   * Value of `true` if accessibility is currently active and accessibility layers are showing.\n   * @member {boolean}\n   * @readonly\n   */\n  get isActive() {\n    return this._isActive;\n  }\n  /**\n   * Value of `true` if accessibility is enabled for touch devices.\n   * @member {boolean}\n   * @readonly\n   */\n  get isMobileAccessibility() {\n    return this._isMobileAccessibility;\n  }\n  get hookDiv() {\n    return this._hookDiv;\n  }\n  /**\n   * Creates the touch hooks.\n   * @private\n   */\n  _createTouchHook() {\n    const hookDiv = document.createElement(\"button\");\n    hookDiv.style.width = `${DIV_HOOK_SIZE}px`;\n    hookDiv.style.height = `${DIV_HOOK_SIZE}px`;\n    hookDiv.style.position = \"absolute\";\n    hookDiv.style.top = `${DIV_HOOK_POS_X}px`;\n    hookDiv.style.left = `${DIV_HOOK_POS_Y}px`;\n    hookDiv.style.zIndex = DIV_HOOK_ZINDEX.toString();\n    hookDiv.style.backgroundColor = \"#FF0000\";\n    hookDiv.title = \"select to enable accessibility for this content\";\n    hookDiv.addEventListener(\"focus\", () => {\n      this._isMobileAccessibility = true;\n      this._activate();\n      this._destroyTouchHook();\n    });\n    document.body.appendChild(hookDiv);\n    this._hookDiv = hookDiv;\n  }\n  /**\n   * Destroys the touch hooks.\n   * @private\n   */\n  _destroyTouchHook() {\n    if (!this._hookDiv) {\n      return;\n    }\n    document.body.removeChild(this._hookDiv);\n    this._hookDiv = null;\n  }\n  /**\n   * Activating will cause the Accessibility layer to be shown.\n   * This is called when a user presses the tab key.\n   * @private\n   */\n  _activate() {\n    if (this._isActive) {\n      return;\n    }\n    this._isActive = true;\n    globalThis.document.addEventListener(\"mousemove\", this._onMouseMove, true);\n    globalThis.removeEventListener(\"keydown\", this._onKeyDown, false);\n    this._renderer.runners.postrender.add(this);\n    this._renderer.view.canvas.parentNode?.appendChild(this._div);\n  }\n  /**\n   * Deactivating will cause the Accessibility layer to be hidden.\n   * This is called when a user moves the mouse.\n   * @private\n   */\n  _deactivate() {\n    if (!this._isActive || this._isMobileAccessibility) {\n      return;\n    }\n    this._isActive = false;\n    globalThis.document.removeEventListener(\"mousemove\", this._onMouseMove, true);\n    globalThis.addEventListener(\"keydown\", this._onKeyDown, false);\n    this._renderer.runners.postrender.remove(this);\n    this._div.parentNode?.removeChild(this._div);\n  }\n  /**\n   * This recursive function will run through the scene graph and add any new accessible objects to the DOM layer.\n   * @private\n   * @param {Container} container - The Container to check.\n   */\n  _updateAccessibleObjects(container) {\n    if (!container.visible || !container.accessibleChildren) {\n      return;\n    }\n    if (container.accessible && container.isInteractive()) {\n      if (!container._accessibleActive) {\n        this._addChild(container);\n      }\n      container._renderId = this._renderId;\n    }\n    const children = container.children;\n    if (children) {\n      for (let i = 0; i < children.length; i++) {\n        this._updateAccessibleObjects(children[i]);\n      }\n    }\n  }\n  /**\n   * Runner init called, view is available at this point.\n   * @ignore\n   */\n  init(options) {\n    this.debug = options?.debug ?? this.debug;\n    this._renderer.runners.postrender.remove(this);\n  }\n  /**\n   * Runner postrender was called, ensure that all divs are mapped correctly to their Containers.\n   * Only fires while active.\n   * @ignore\n   */\n  postrender() {\n    const now = performance.now();\n    if (this._mobileInfo.android.device && now < this._androidUpdateCount) {\n      return;\n    }\n    this._androidUpdateCount = now + this._androidUpdateFrequency;\n    if (!this._renderer.renderingToScreen || !this._renderer.view.canvas) {\n      return;\n    }\n    if (this._renderer.lastObjectRendered) {\n      this._updateAccessibleObjects(this._renderer.lastObjectRendered);\n    }\n    const { x, y, width, height } = this._renderer.view.canvas.getBoundingClientRect();\n    const { width: viewWidth, height: viewHeight, resolution } = this._renderer;\n    const sx = width / viewWidth * resolution;\n    const sy = height / viewHeight * resolution;\n    let div = this._div;\n    div.style.left = `${x}px`;\n    div.style.top = `${y}px`;\n    div.style.width = `${viewWidth}px`;\n    div.style.height = `${viewHeight}px`;\n    for (let i = 0; i < this._children.length; i++) {\n      const child = this._children[i];\n      if (child._renderId !== this._renderId) {\n        child._accessibleActive = false;\n        removeItems(this._children, i, 1);\n        this._div.removeChild(child._accessibleDiv);\n        this._pool.push(child._accessibleDiv);\n        child._accessibleDiv = null;\n        i--;\n      } else {\n        div = child._accessibleDiv;\n        let hitArea = child.hitArea;\n        const wt = child.worldTransform;\n        if (child.hitArea) {\n          div.style.left = `${(wt.tx + hitArea.x * wt.a) * sx}px`;\n          div.style.top = `${(wt.ty + hitArea.y * wt.d) * sy}px`;\n          div.style.width = `${hitArea.width * wt.a * sx}px`;\n          div.style.height = `${hitArea.height * wt.d * sy}px`;\n        } else {\n          hitArea = child.getBounds().rectangle;\n          this._capHitArea(hitArea);\n          div.style.left = `${hitArea.x * sx}px`;\n          div.style.top = `${hitArea.y * sy}px`;\n          div.style.width = `${hitArea.width * sx}px`;\n          div.style.height = `${hitArea.height * sy}px`;\n          if (div.title !== child.accessibleTitle && child.accessibleTitle !== null) {\n            div.title = child.accessibleTitle || \"\";\n          }\n          if (div.getAttribute(\"aria-label\") !== child.accessibleHint && child.accessibleHint !== null) {\n            div.setAttribute(\"aria-label\", child.accessibleHint || \"\");\n          }\n        }\n        if (child.accessibleTitle !== div.title || child.tabIndex !== div.tabIndex) {\n          div.title = child.accessibleTitle || \"\";\n          div.tabIndex = child.tabIndex;\n          if (this.debug) {\n            this._updateDebugHTML(div);\n          }\n        }\n      }\n    }\n    this._renderId++;\n  }\n  /**\n   * private function that will visually add the information to the\n   * accessibility div\n   * @param {HTMLElement} div -\n   */\n  _updateDebugHTML(div) {\n    div.innerHTML = `type: ${div.type}</br> title : ${div.title}</br> tabIndex: ${div.tabIndex}`;\n  }\n  /**\n   * Adjust the hit area based on the bounds of a display object\n   * @param {Rectangle} hitArea - Bounds of the child\n   */\n  _capHitArea(hitArea) {\n    if (hitArea.x < 0) {\n      hitArea.width += hitArea.x;\n      hitArea.x = 0;\n    }\n    if (hitArea.y < 0) {\n      hitArea.height += hitArea.y;\n      hitArea.y = 0;\n    }\n    const { width: viewWidth, height: viewHeight } = this._renderer;\n    if (hitArea.x + hitArea.width > viewWidth) {\n      hitArea.width = viewWidth - hitArea.x;\n    }\n    if (hitArea.y + hitArea.height > viewHeight) {\n      hitArea.height = viewHeight - hitArea.y;\n    }\n  }\n  /**\n   * Adds a Container to the accessibility manager\n   * @private\n   * @param {Container} container - The child to make accessible.\n   */\n  _addChild(container) {\n    let div = this._pool.pop();\n    if (!div) {\n      div = document.createElement(\"button\");\n      div.style.width = `${DIV_TOUCH_SIZE}px`;\n      div.style.height = `${DIV_TOUCH_SIZE}px`;\n      div.style.backgroundColor = this.debug ? \"rgba(255,255,255,0.5)\" : \"transparent\";\n      div.style.position = \"absolute\";\n      div.style.zIndex = DIV_TOUCH_ZINDEX.toString();\n      div.style.borderStyle = \"none\";\n      if (navigator.userAgent.toLowerCase().includes(\"chrome\")) {\n        div.setAttribute(\"aria-live\", \"off\");\n      } else {\n        div.setAttribute(\"aria-live\", \"polite\");\n      }\n      if (navigator.userAgent.match(/rv:.*Gecko\\//)) {\n        div.setAttribute(\"aria-relevant\", \"additions\");\n      } else {\n        div.setAttribute(\"aria-relevant\", \"text\");\n      }\n      div.addEventListener(\"click\", this._onClick.bind(this));\n      div.addEventListener(\"focus\", this._onFocus.bind(this));\n      div.addEventListener(\"focusout\", this._onFocusOut.bind(this));\n    }\n    div.style.pointerEvents = container.accessiblePointerEvents;\n    div.type = container.accessibleType;\n    if (container.accessibleTitle && container.accessibleTitle !== null) {\n      div.title = container.accessibleTitle;\n    } else if (!container.accessibleHint || container.accessibleHint === null) {\n      div.title = `container ${container.tabIndex}`;\n    }\n    if (container.accessibleHint && container.accessibleHint !== null) {\n      div.setAttribute(\"aria-label\", container.accessibleHint);\n    }\n    if (this.debug) {\n      this._updateDebugHTML(div);\n    }\n    container._accessibleActive = true;\n    container._accessibleDiv = div;\n    div.container = container;\n    this._children.push(container);\n    this._div.appendChild(container._accessibleDiv);\n    container._accessibleDiv.tabIndex = container.tabIndex;\n  }\n  /**\n   * Dispatch events with the EventSystem.\n   * @param e\n   * @param type\n   * @private\n   */\n  _dispatchEvent(e, type) {\n    const { container: target } = e.target;\n    const boundary = this._renderer.events.rootBoundary;\n    const event = Object.assign(new FederatedEvent(boundary), { target });\n    boundary.rootTarget = this._renderer.lastObjectRendered;\n    type.forEach((type2) => boundary.dispatchEvent(event, type2));\n  }\n  /**\n   * Maps the div button press to pixi's EventSystem (click)\n   * @private\n   * @param {MouseEvent} e - The click event.\n   */\n  _onClick(e) {\n    this._dispatchEvent(e, [\"click\", \"pointertap\", \"tap\"]);\n  }\n  /**\n   * Maps the div focus events to pixi's EventSystem (mouseover)\n   * @private\n   * @param {FocusEvent} e - The focus event.\n   */\n  _onFocus(e) {\n    if (!e.target.getAttribute(\"aria-live\")) {\n      e.target.setAttribute(\"aria-live\", \"assertive\");\n    }\n    this._dispatchEvent(e, [\"mouseover\"]);\n  }\n  /**\n   * Maps the div focus events to pixi's EventSystem (mouseout)\n   * @private\n   * @param {FocusEvent} e - The focusout event.\n   */\n  _onFocusOut(e) {\n    if (!e.target.getAttribute(\"aria-live\")) {\n      e.target.setAttribute(\"aria-live\", \"polite\");\n    }\n    this._dispatchEvent(e, [\"mouseout\"]);\n  }\n  /**\n   * Is called when a key is pressed\n   * @private\n   * @param {KeyboardEvent} e - The keydown event.\n   */\n  _onKeyDown(e) {\n    if (e.keyCode !== KEY_CODE_TAB) {\n      return;\n    }\n    this._activate();\n  }\n  /**\n   * Is called when the mouse moves across the renderer element\n   * @private\n   * @param {MouseEvent} e - The mouse event.\n   */\n  _onMouseMove(e) {\n    if (e.movementX === 0 && e.movementY === 0) {\n      return;\n    }\n    this._deactivate();\n  }\n  /** Destroys the accessibility manager */\n  destroy() {\n    this._destroyTouchHook();\n    this._div = null;\n    globalThis.document.removeEventListener(\"mousemove\", this._onMouseMove, true);\n    globalThis.removeEventListener(\"keydown\", this._onKeyDown);\n    this._pool = null;\n    this._children = null;\n    this._renderer = null;\n  }\n}\n/** @ignore */\nAccessibilitySystem.extension = {\n  type: [\n    ExtensionType.WebGLSystem,\n    ExtensionType.WebGPUSystem\n  ],\n  name: \"accessibility\"\n};\n\nexport { AccessibilitySystem };\n//# sourceMappingURL=AccessibilitySystem.mjs.map\n","\"use strict\";\nconst accessibilityTarget = {\n  /**\n   * Flag for if the object is accessible. If true AccessibilityManager will overlay a\n   * shadow div with attributes set\n   * @member {boolean}\n   * @memberof scene.Container#\n   */\n  accessible: false,\n  /**\n   * Sets the title attribute of the shadow div\n   * If accessibleTitle AND accessibleHint has not been this will default to 'container [tabIndex]'\n   * @member {string}\n   * @memberof scene.Container#\n   */\n  accessibleTitle: null,\n  /**\n   * Sets the aria-label attribute of the shadow div\n   * @member {string}\n   * @memberof scene.Container#\n   */\n  accessibleHint: null,\n  /**\n   * @member {number}\n   * @memberof scene.Container#\n   * @todo Needs docs.\n   */\n  tabIndex: 0,\n  /**\n   * @member {boolean}\n   * @memberof scene.Container#\n   * @private\n   */\n  _accessibleActive: false,\n  /**\n   * @memberof scene.Container#\n   * @private\n   */\n  _accessibleDiv: null,\n  /**\n   * Specify the type of div the accessible layer is. Screen readers treat the element differently\n   * depending on this type. Defaults to button.\n   * @member {string}\n   * @memberof scene.Container#\n   * @default 'button'\n   */\n  accessibleType: \"button\",\n  /**\n   * Specify the pointer-events the accessible div will use\n   * Defaults to auto.\n   * @type {PointerEvents}\n   * @memberof scene.Container#\n   * @default 'auto'\n   */\n  accessiblePointerEvents: \"auto\",\n  /**\n   * Setting to false will prevent any children inside this container to\n   * be accessible. Defaults to true.\n   * @member {boolean}\n   * @memberof scene.Container#\n   * @default true\n   */\n  accessibleChildren: true,\n  /**\n   * @member {number}\n   * @memberof scene.Container#\n   * @private\n   */\n  _renderId: -1\n};\n\nexport { accessibilityTarget };\n//# sourceMappingURL=accessibilityTarget.mjs.map\n","import { ExtensionType } from '../extensions/Extensions.mjs';\nimport { EventBoundary } from './EventBoundary.mjs';\nimport { EventsTicker } from './EventTicker.mjs';\nimport { FederatedPointerEvent } from './FederatedPointerEvent.mjs';\nimport { FederatedWheelEvent } from './FederatedWheelEvent.mjs';\n\n\"use strict\";\nconst MOUSE_POINTER_ID = 1;\nconst TOUCH_TO_POINTER = {\n  touchstart: \"pointerdown\",\n  touchend: \"pointerup\",\n  touchendoutside: \"pointerupoutside\",\n  touchmove: \"pointermove\",\n  touchcancel: \"pointercancel\"\n};\nconst _EventSystem = class _EventSystem {\n  /**\n   * @param {Renderer} renderer\n   */\n  constructor(renderer) {\n    /** Does the device support touch events https://www.w3.org/TR/touch-events/ */\n    this.supportsTouchEvents = \"ontouchstart\" in globalThis;\n    /** Does the device support pointer events https://www.w3.org/Submission/pointer-events/ */\n    this.supportsPointerEvents = !!globalThis.PointerEvent;\n    /**\n     * The DOM element to which the root event listeners are bound. This is automatically set to\n     * the renderer's {@link Renderer#view view}.\n     */\n    this.domElement = null;\n    /** The resolution used to convert between the DOM client space into world space. */\n    this.resolution = 1;\n    this.renderer = renderer;\n    this.rootBoundary = new EventBoundary(null);\n    EventsTicker.init(this);\n    this.autoPreventDefault = true;\n    this._eventsAdded = false;\n    this._rootPointerEvent = new FederatedPointerEvent(null);\n    this._rootWheelEvent = new FederatedWheelEvent(null);\n    this.cursorStyles = {\n      default: \"inherit\",\n      pointer: \"pointer\"\n    };\n    this.features = new Proxy({ ..._EventSystem.defaultEventFeatures }, {\n      set: (target, key, value) => {\n        if (key === \"globalMove\") {\n          this.rootBoundary.enableGlobalMoveEvents = value;\n        }\n        target[key] = value;\n        return true;\n      }\n    });\n    this._onPointerDown = this._onPointerDown.bind(this);\n    this._onPointerMove = this._onPointerMove.bind(this);\n    this._onPointerUp = this._onPointerUp.bind(this);\n    this._onPointerOverOut = this._onPointerOverOut.bind(this);\n    this.onWheel = this.onWheel.bind(this);\n  }\n  /**\n   * The default interaction mode for all display objects.\n   * @see Container.eventMode\n   * @type {EventMode}\n   * @readonly\n   * @since 7.2.0\n   */\n  static get defaultEventMode() {\n    return this._defaultEventMode;\n  }\n  /**\n   * Runner init called, view is available at this point.\n   * @ignore\n   */\n  init(options) {\n    const { canvas, resolution } = this.renderer;\n    this.setTargetElement(canvas);\n    this.resolution = resolution;\n    _EventSystem._defaultEventMode = options.eventMode ?? \"passive\";\n    Object.assign(this.features, options.eventFeatures ?? {});\n    this.rootBoundary.enableGlobalMoveEvents = this.features.globalMove;\n  }\n  /**\n   * Handle changing resolution.\n   * @ignore\n   */\n  resolutionChange(resolution) {\n    this.resolution = resolution;\n  }\n  /** Destroys all event listeners and detaches the renderer. */\n  destroy() {\n    this.setTargetElement(null);\n    this.renderer = null;\n    this._currentCursor = null;\n  }\n  /**\n   * Sets the current cursor mode, handling any callbacks or CSS style changes.\n   * @param mode - cursor mode, a key from the cursorStyles dictionary\n   */\n  setCursor(mode) {\n    mode || (mode = \"default\");\n    let applyStyles = true;\n    if (globalThis.OffscreenCanvas && this.domElement instanceof OffscreenCanvas) {\n      applyStyles = false;\n    }\n    if (this._currentCursor === mode) {\n      return;\n    }\n    this._currentCursor = mode;\n    const style = this.cursorStyles[mode];\n    if (style) {\n      switch (typeof style) {\n        case \"string\":\n          if (applyStyles) {\n            this.domElement.style.cursor = style;\n          }\n          break;\n        case \"function\":\n          style(mode);\n          break;\n        case \"object\":\n          if (applyStyles) {\n            Object.assign(this.domElement.style, style);\n          }\n          break;\n      }\n    } else if (applyStyles && typeof mode === \"string\" && !Object.prototype.hasOwnProperty.call(this.cursorStyles, mode)) {\n      this.domElement.style.cursor = mode;\n    }\n  }\n  /**\n   * The global pointer event.\n   * Useful for getting the pointer position without listening to events.\n   * @since 7.2.0\n   */\n  get pointer() {\n    return this._rootPointerEvent;\n  }\n  /**\n   * Event handler for pointer down events on {@link EventSystem#domElement this.domElement}.\n   * @param nativeEvent - The native mouse/pointer/touch event.\n   */\n  _onPointerDown(nativeEvent) {\n    if (!this.features.click)\n      return;\n    this.rootBoundary.rootTarget = this.renderer.lastObjectRendered;\n    const events = this._normalizeToPointerData(nativeEvent);\n    if (this.autoPreventDefault && events[0].isNormalized) {\n      const cancelable = nativeEvent.cancelable || !(\"cancelable\" in nativeEvent);\n      if (cancelable) {\n        nativeEvent.preventDefault();\n      }\n    }\n    for (let i = 0, j = events.length; i < j; i++) {\n      const nativeEvent2 = events[i];\n      const federatedEvent = this._bootstrapEvent(this._rootPointerEvent, nativeEvent2);\n      this.rootBoundary.mapEvent(federatedEvent);\n    }\n    this.setCursor(this.rootBoundary.cursor);\n  }\n  /**\n   * Event handler for pointer move events on on {@link EventSystem#domElement this.domElement}.\n   * @param nativeEvent - The native mouse/pointer/touch events.\n   */\n  _onPointerMove(nativeEvent) {\n    if (!this.features.move)\n      return;\n    this.rootBoundary.rootTarget = this.renderer.lastObjectRendered;\n    EventsTicker.pointerMoved();\n    const normalizedEvents = this._normalizeToPointerData(nativeEvent);\n    for (let i = 0, j = normalizedEvents.length; i < j; i++) {\n      const event = this._bootstrapEvent(this._rootPointerEvent, normalizedEvents[i]);\n      this.rootBoundary.mapEvent(event);\n    }\n    this.setCursor(this.rootBoundary.cursor);\n  }\n  /**\n   * Event handler for pointer up events on {@link EventSystem#domElement this.domElement}.\n   * @param nativeEvent - The native mouse/pointer/touch event.\n   */\n  _onPointerUp(nativeEvent) {\n    if (!this.features.click)\n      return;\n    this.rootBoundary.rootTarget = this.renderer.lastObjectRendered;\n    let target = nativeEvent.target;\n    if (nativeEvent.composedPath && nativeEvent.composedPath().length > 0) {\n      target = nativeEvent.composedPath()[0];\n    }\n    const outside = target !== this.domElement ? \"outside\" : \"\";\n    const normalizedEvents = this._normalizeToPointerData(nativeEvent);\n    for (let i = 0, j = normalizedEvents.length; i < j; i++) {\n      const event = this._bootstrapEvent(this._rootPointerEvent, normalizedEvents[i]);\n      event.type += outside;\n      this.rootBoundary.mapEvent(event);\n    }\n    this.setCursor(this.rootBoundary.cursor);\n  }\n  /**\n   * Event handler for pointer over & out events on {@link EventSystem#domElement this.domElement}.\n   * @param nativeEvent - The native mouse/pointer/touch event.\n   */\n  _onPointerOverOut(nativeEvent) {\n    if (!this.features.click)\n      return;\n    this.rootBoundary.rootTarget = this.renderer.lastObjectRendered;\n    const normalizedEvents = this._normalizeToPointerData(nativeEvent);\n    for (let i = 0, j = normalizedEvents.length; i < j; i++) {\n      const event = this._bootstrapEvent(this._rootPointerEvent, normalizedEvents[i]);\n      this.rootBoundary.mapEvent(event);\n    }\n    this.setCursor(this.rootBoundary.cursor);\n  }\n  /**\n   * Passive handler for `wheel` events on {@link EventSystem.domElement this.domElement}.\n   * @param nativeEvent - The native wheel event.\n   */\n  onWheel(nativeEvent) {\n    if (!this.features.wheel)\n      return;\n    const wheelEvent = this.normalizeWheelEvent(nativeEvent);\n    this.rootBoundary.rootTarget = this.renderer.lastObjectRendered;\n    this.rootBoundary.mapEvent(wheelEvent);\n  }\n  /**\n   * Sets the {@link EventSystem#domElement domElement} and binds event listeners.\n   *\n   * To deregister the current DOM element without setting a new one, pass {@code null}.\n   * @param element - The new DOM element.\n   */\n  setTargetElement(element) {\n    this._removeEvents();\n    this.domElement = element;\n    EventsTicker.domElement = element;\n    this._addEvents();\n  }\n  /** Register event listeners on {@link Renderer#domElement this.domElement}. */\n  _addEvents() {\n    if (this._eventsAdded || !this.domElement) {\n      return;\n    }\n    EventsTicker.addTickerListener();\n    const style = this.domElement.style;\n    if (style) {\n      if (globalThis.navigator.msPointerEnabled) {\n        style.msContentZooming = \"none\";\n        style.msTouchAction = \"none\";\n      } else if (this.supportsPointerEvents) {\n        style.touchAction = \"none\";\n      }\n    }\n    if (this.supportsPointerEvents) {\n      globalThis.document.addEventListener(\"pointermove\", this._onPointerMove, true);\n      this.domElement.addEventListener(\"pointerdown\", this._onPointerDown, true);\n      this.domElement.addEventListener(\"pointerleave\", this._onPointerOverOut, true);\n      this.domElement.addEventListener(\"pointerover\", this._onPointerOverOut, true);\n      globalThis.addEventListener(\"pointerup\", this._onPointerUp, true);\n    } else {\n      globalThis.document.addEventListener(\"mousemove\", this._onPointerMove, true);\n      this.domElement.addEventListener(\"mousedown\", this._onPointerDown, true);\n      this.domElement.addEventListener(\"mouseout\", this._onPointerOverOut, true);\n      this.domElement.addEventListener(\"mouseover\", this._onPointerOverOut, true);\n      globalThis.addEventListener(\"mouseup\", this._onPointerUp, true);\n      if (this.supportsTouchEvents) {\n        this.domElement.addEventListener(\"touchstart\", this._onPointerDown, true);\n        this.domElement.addEventListener(\"touchend\", this._onPointerUp, true);\n        this.domElement.addEventListener(\"touchmove\", this._onPointerMove, true);\n      }\n    }\n    this.domElement.addEventListener(\"wheel\", this.onWheel, {\n      passive: true,\n      capture: true\n    });\n    this._eventsAdded = true;\n  }\n  /** Unregister event listeners on {@link EventSystem#domElement this.domElement}. */\n  _removeEvents() {\n    if (!this._eventsAdded || !this.domElement) {\n      return;\n    }\n    EventsTicker.removeTickerListener();\n    const style = this.domElement.style;\n    if (style) {\n      if (globalThis.navigator.msPointerEnabled) {\n        style.msContentZooming = \"\";\n        style.msTouchAction = \"\";\n      } else if (this.supportsPointerEvents) {\n        style.touchAction = \"\";\n      }\n    }\n    if (this.supportsPointerEvents) {\n      globalThis.document.removeEventListener(\"pointermove\", this._onPointerMove, true);\n      this.domElement.removeEventListener(\"pointerdown\", this._onPointerDown, true);\n      this.domElement.removeEventListener(\"pointerleave\", this._onPointerOverOut, true);\n      this.domElement.removeEventListener(\"pointerover\", this._onPointerOverOut, true);\n      globalThis.removeEventListener(\"pointerup\", this._onPointerUp, true);\n    } else {\n      globalThis.document.removeEventListener(\"mousemove\", this._onPointerMove, true);\n      this.domElement.removeEventListener(\"mousedown\", this._onPointerDown, true);\n      this.domElement.removeEventListener(\"mouseout\", this._onPointerOverOut, true);\n      this.domElement.removeEventListener(\"mouseover\", this._onPointerOverOut, true);\n      globalThis.removeEventListener(\"mouseup\", this._onPointerUp, true);\n      if (this.supportsTouchEvents) {\n        this.domElement.removeEventListener(\"touchstart\", this._onPointerDown, true);\n        this.domElement.removeEventListener(\"touchend\", this._onPointerUp, true);\n        this.domElement.removeEventListener(\"touchmove\", this._onPointerMove, true);\n      }\n    }\n    this.domElement.removeEventListener(\"wheel\", this.onWheel, true);\n    this.domElement = null;\n    this._eventsAdded = false;\n  }\n  /**\n   * Maps x and y coords from a DOM object and maps them correctly to the PixiJS view. The\n   * resulting value is stored in the point. This takes into account the fact that the DOM\n   * element could be scaled and positioned anywhere on the screen.\n   * @param  {PointData} point - the point that the result will be stored in\n   * @param  {number} x - the x coord of the position to map\n   * @param  {number} y - the y coord of the position to map\n   */\n  mapPositionToPoint(point, x, y) {\n    const rect = this.domElement.isConnected ? this.domElement.getBoundingClientRect() : {\n      x: 0,\n      y: 0,\n      width: this.domElement.width,\n      height: this.domElement.height,\n      left: 0,\n      top: 0\n    };\n    const resolutionMultiplier = 1 / this.resolution;\n    point.x = (x - rect.left) * (this.domElement.width / rect.width) * resolutionMultiplier;\n    point.y = (y - rect.top) * (this.domElement.height / rect.height) * resolutionMultiplier;\n  }\n  /**\n   * Ensures that the original event object contains all data that a regular pointer event would have\n   * @param event - The original event data from a touch or mouse event\n   * @returns An array containing a single normalized pointer event, in the case of a pointer\n   *  or mouse event, or a multiple normalized pointer events if there are multiple changed touches\n   */\n  _normalizeToPointerData(event) {\n    const normalizedEvents = [];\n    if (this.supportsTouchEvents && event instanceof TouchEvent) {\n      for (let i = 0, li = event.changedTouches.length; i < li; i++) {\n        const touch = event.changedTouches[i];\n        if (typeof touch.button === \"undefined\")\n          touch.button = 0;\n        if (typeof touch.buttons === \"undefined\")\n          touch.buttons = 1;\n        if (typeof touch.isPrimary === \"undefined\") {\n          touch.isPrimary = event.touches.length === 1 && event.type === \"touchstart\";\n        }\n        if (typeof touch.width === \"undefined\")\n          touch.width = touch.radiusX || 1;\n        if (typeof touch.height === \"undefined\")\n          touch.height = touch.radiusY || 1;\n        if (typeof touch.tiltX === \"undefined\")\n          touch.tiltX = 0;\n        if (typeof touch.tiltY === \"undefined\")\n          touch.tiltY = 0;\n        if (typeof touch.pointerType === \"undefined\")\n          touch.pointerType = \"touch\";\n        if (typeof touch.pointerId === \"undefined\")\n          touch.pointerId = touch.identifier || 0;\n        if (typeof touch.pressure === \"undefined\")\n          touch.pressure = touch.force || 0.5;\n        if (typeof touch.twist === \"undefined\")\n          touch.twist = 0;\n        if (typeof touch.tangentialPressure === \"undefined\")\n          touch.tangentialPressure = 0;\n        if (typeof touch.layerX === \"undefined\")\n          touch.layerX = touch.offsetX = touch.clientX;\n        if (typeof touch.layerY === \"undefined\")\n          touch.layerY = touch.offsetY = touch.clientY;\n        touch.isNormalized = true;\n        touch.type = event.type;\n        normalizedEvents.push(touch);\n      }\n    } else if (!globalThis.MouseEvent || event instanceof MouseEvent && (!this.supportsPointerEvents || !(event instanceof globalThis.PointerEvent))) {\n      const tempEvent = event;\n      if (typeof tempEvent.isPrimary === \"undefined\")\n        tempEvent.isPrimary = true;\n      if (typeof tempEvent.width === \"undefined\")\n        tempEvent.width = 1;\n      if (typeof tempEvent.height === \"undefined\")\n        tempEvent.height = 1;\n      if (typeof tempEvent.tiltX === \"undefined\")\n        tempEvent.tiltX = 0;\n      if (typeof tempEvent.tiltY === \"undefined\")\n        tempEvent.tiltY = 0;\n      if (typeof tempEvent.pointerType === \"undefined\")\n        tempEvent.pointerType = \"mouse\";\n      if (typeof tempEvent.pointerId === \"undefined\")\n        tempEvent.pointerId = MOUSE_POINTER_ID;\n      if (typeof tempEvent.pressure === \"undefined\")\n        tempEvent.pressure = 0.5;\n      if (typeof tempEvent.twist === \"undefined\")\n        tempEvent.twist = 0;\n      if (typeof tempEvent.tangentialPressure === \"undefined\")\n        tempEvent.tangentialPressure = 0;\n      tempEvent.isNormalized = true;\n      normalizedEvents.push(tempEvent);\n    } else {\n      normalizedEvents.push(event);\n    }\n    return normalizedEvents;\n  }\n  /**\n   * Normalizes the native {@link https://w3c.github.io/uievents/#interface-wheelevent WheelEvent}.\n   *\n   * The returned {@link FederatedWheelEvent} is a shared instance. It will not persist across\n   * multiple native wheel events.\n   * @param nativeEvent - The native wheel event that occurred on the canvas.\n   * @returns A federated wheel event.\n   */\n  normalizeWheelEvent(nativeEvent) {\n    const event = this._rootWheelEvent;\n    this._transferMouseData(event, nativeEvent);\n    event.deltaX = nativeEvent.deltaX;\n    event.deltaY = nativeEvent.deltaY;\n    event.deltaZ = nativeEvent.deltaZ;\n    event.deltaMode = nativeEvent.deltaMode;\n    this.mapPositionToPoint(event.screen, nativeEvent.clientX, nativeEvent.clientY);\n    event.global.copyFrom(event.screen);\n    event.offset.copyFrom(event.screen);\n    event.nativeEvent = nativeEvent;\n    event.type = nativeEvent.type;\n    return event;\n  }\n  /**\n   * Normalizes the `nativeEvent` into a federateed {@link FederatedPointerEvent}.\n   * @param event\n   * @param nativeEvent\n   */\n  _bootstrapEvent(event, nativeEvent) {\n    event.originalEvent = null;\n    event.nativeEvent = nativeEvent;\n    event.pointerId = nativeEvent.pointerId;\n    event.width = nativeEvent.width;\n    event.height = nativeEvent.height;\n    event.isPrimary = nativeEvent.isPrimary;\n    event.pointerType = nativeEvent.pointerType;\n    event.pressure = nativeEvent.pressure;\n    event.tangentialPressure = nativeEvent.tangentialPressure;\n    event.tiltX = nativeEvent.tiltX;\n    event.tiltY = nativeEvent.tiltY;\n    event.twist = nativeEvent.twist;\n    this._transferMouseData(event, nativeEvent);\n    this.mapPositionToPoint(event.screen, nativeEvent.clientX, nativeEvent.clientY);\n    event.global.copyFrom(event.screen);\n    event.offset.copyFrom(event.screen);\n    event.isTrusted = nativeEvent.isTrusted;\n    if (event.type === \"pointerleave\") {\n      event.type = \"pointerout\";\n    }\n    if (event.type.startsWith(\"mouse\")) {\n      event.type = event.type.replace(\"mouse\", \"pointer\");\n    }\n    if (event.type.startsWith(\"touch\")) {\n      event.type = TOUCH_TO_POINTER[event.type] || event.type;\n    }\n    return event;\n  }\n  /**\n   * Transfers base & mouse event data from the {@code nativeEvent} to the federated event.\n   * @param event\n   * @param nativeEvent\n   */\n  _transferMouseData(event, nativeEvent) {\n    event.isTrusted = nativeEvent.isTrusted;\n    event.srcElement = nativeEvent.srcElement;\n    event.timeStamp = performance.now();\n    event.type = nativeEvent.type;\n    event.altKey = nativeEvent.altKey;\n    event.button = nativeEvent.button;\n    event.buttons = nativeEvent.buttons;\n    event.client.x = nativeEvent.clientX;\n    event.client.y = nativeEvent.clientY;\n    event.ctrlKey = nativeEvent.ctrlKey;\n    event.metaKey = nativeEvent.metaKey;\n    event.movement.x = nativeEvent.movementX;\n    event.movement.y = nativeEvent.movementY;\n    event.page.x = nativeEvent.pageX;\n    event.page.y = nativeEvent.pageY;\n    event.relatedTarget = null;\n    event.shiftKey = nativeEvent.shiftKey;\n  }\n};\n/** @ignore */\n_EventSystem.extension = {\n  name: \"events\",\n  type: [\n    ExtensionType.WebGLSystem,\n    ExtensionType.CanvasSystem,\n    ExtensionType.WebGPUSystem\n  ],\n  priority: -1\n};\n/**\n * The event features that are enabled by the EventSystem\n * (included in the **pixi.js** and **pixi.js-legacy** bundle), otherwise it will be ignored.\n * @since 7.2.0\n */\n_EventSystem.defaultEventFeatures = {\n  /** Enables pointer events associated with pointer movement. */\n  move: true,\n  /** Enables global pointer move events. */\n  globalMove: true,\n  /** Enables pointer events associated with clicking. */\n  click: true,\n  /** Enables wheel events. */\n  wheel: true\n};\nlet EventSystem = _EventSystem;\n\nexport { EventSystem };\n//# sourceMappingURL=EventSystem.mjs.map\n","import { EventSystem } from './EventSystem.mjs';\nimport { FederatedEvent } from './FederatedEvent.mjs';\n\n\"use strict\";\nconst FederatedContainer = {\n  /**\n   * Property-based event handler for the `click` event.\n   * @memberof scene.Container#\n   * @default null\n   * @example\n   * this.onclick = (event) => {\n   *  //some function here that happens on click\n   * }\n   */\n  onclick: null,\n  /**\n   * Property-based event handler for the `mousedown` event.\n   * @memberof scene.Container#\n   * @default null\n   * @example\n   * this.onmousedown = (event) => {\n   *  //some function here that happens on mousedown\n   * }\n   */\n  onmousedown: null,\n  /**\n   * Property-based event handler for the `mouseenter` event.\n   * @memberof scene.Container#\n   * @default null\n   * @example\n   * this.onmouseenter = (event) => {\n   *  //some function here that happens on mouseenter\n   * }\n   */\n  onmouseenter: null,\n  /**\n   * Property-based event handler for the `mouseleave` event.\n   * @memberof scene.Container#\n   * @default null\n   * @example\n   * this.onmouseleave = (event) => {\n   *  //some function here that happens on mouseleave\n   * }\n   */\n  onmouseleave: null,\n  /**\n   * Property-based event handler for the `mousemove` event.\n   * @memberof scene.Container#\n   * @default null\n   * @example\n   * this.onmousemove = (event) => {\n   *  //some function here that happens on mousemove\n   * }\n   */\n  onmousemove: null,\n  /**\n   * Property-based event handler for the `globalmousemove` event.\n   * @memberof scene.Container#\n   * @default null\n   * @example\n   * this.onglobalmousemove = (event) => {\n   *  //some function here that happens on globalmousemove\n   * }\n   */\n  onglobalmousemove: null,\n  /**\n   * Property-based event handler for the `mouseout` event.\n   * @memberof scene.Container#\n   * @default null\n   * @example\n   * this.onmouseout = (event) => {\n   *  //some function here that happens on mouseout\n   * }\n   */\n  onmouseout: null,\n  /**\n   * Property-based event handler for the `mouseover` event.\n   * @memberof scene.Container#\n   * @default null\n   * @example\n   * this.onmouseover = (event) => {\n   *  //some function here that happens on mouseover\n   * }\n   */\n  onmouseover: null,\n  /**\n   * Property-based event handler for the `mouseup` event.\n   * @memberof scene.Container#\n   * @default null\n   * @example\n   * this.onmouseup = (event) => {\n   *  //some function here that happens on mouseup\n   * }\n   */\n  onmouseup: null,\n  /**\n   * Property-based event handler for the `mouseupoutside` event.\n   * @memberof scene.Container#\n   * @default null\n   * @example\n   * this.onmouseupoutside = (event) => {\n   *  //some function here that happens on mouseupoutside\n   * }\n   */\n  onmouseupoutside: null,\n  /**\n   * Property-based event handler for the `pointercancel` event.\n   * @memberof scene.Container#\n   * @default null\n   * @example\n   * this.onpointercancel = (event) => {\n   *  //some function here that happens on pointercancel\n   * }\n   */\n  onpointercancel: null,\n  /**\n   * Property-based event handler for the `pointerdown` event.\n   * @memberof scene.Container#\n   * @default null\n   * @example\n   * this.onpointerdown = (event) => {\n   *  //some function here that happens on pointerdown\n   * }\n   */\n  onpointerdown: null,\n  /**\n   * Property-based event handler for the `pointerenter` event.\n   * @memberof scene.Container#\n   * @default null\n   * @example\n   * this.onpointerenter = (event) => {\n   *  //some function here that happens on pointerenter\n   * }\n   */\n  onpointerenter: null,\n  /**\n   * Property-based event handler for the `pointerleave` event.\n   * @memberof scene.Container#\n   * @default null\n   * @example\n   * this.onpointerleave = (event) => {\n   *  //some function here that happens on pointerleave\n   * }\n   */\n  onpointerleave: null,\n  /**\n   * Property-based event handler for the `pointermove` event.\n   * @memberof scene.Container#\n   * @default null\n   * @example\n   * this.onpointermove = (event) => {\n   *  //some function here that happens on pointermove\n   * }\n   */\n  onpointermove: null,\n  /**\n   * Property-based event handler for the `globalpointermove` event.\n   * @memberof scene.Container#\n   * @default null\n   * @example\n   * this.onglobalpointermove = (event) => {\n   *  //some function here that happens on globalpointermove\n   * }\n   */\n  onglobalpointermove: null,\n  /**\n   * Property-based event handler for the `pointerout` event.\n   * @memberof scene.Container#\n   * @default null\n   * @example\n   * this.onpointerout = (event) => {\n   *  //some function here that happens on pointerout\n   * }\n   */\n  onpointerout: null,\n  /**\n   * Property-based event handler for the `pointerover` event.\n   * @memberof scene.Container#\n   * @default null\n   * @example\n   * this.onpointerover = (event) => {\n   *  //some function here that happens on pointerover\n   * }\n   */\n  onpointerover: null,\n  /**\n   * Property-based event handler for the `pointertap` event.\n   * @memberof scene.Container#\n   * @default null\n   * @example\n   * this.onpointertap = (event) => {\n   *  //some function here that happens on pointertap\n   * }\n   */\n  onpointertap: null,\n  /**\n   * Property-based event handler for the `pointerup` event.\n   * @memberof scene.Container#\n   * @default null\n   * @example\n   * this.onpointerup = (event) => {\n   *  //some function here that happens on pointerup\n   * }\n   */\n  onpointerup: null,\n  /**\n   * Property-based event handler for the `pointerupoutside` event.\n   * @memberof scene.Container#\n   * @default null\n   * @example\n   * this.onpointerupoutside = (event) => {\n   *  //some function here that happens on pointerupoutside\n   * }\n   */\n  onpointerupoutside: null,\n  /**\n   * Property-based event handler for the `rightclick` event.\n   * @memberof scene.Container#\n   * @default null\n   * @example\n   * this.onrightclick = (event) => {\n   *  //some function here that happens on rightclick\n   * }\n   */\n  onrightclick: null,\n  /**\n   * Property-based event handler for the `rightdown` event.\n   * @memberof scene.Container#\n   * @default null\n   * @example\n   * this.onrightdown = (event) => {\n   *  //some function here that happens on rightdown\n   * }\n   */\n  onrightdown: null,\n  /**\n   * Property-based event handler for the `rightup` event.\n   * @memberof scene.Container#\n   * @default null\n   * @example\n   * this.onrightup = (event) => {\n   *  //some function here that happens on rightup\n   * }\n   */\n  onrightup: null,\n  /**\n   * Property-based event handler for the `rightupoutside` event.\n   * @memberof scene.Container#\n   * @default null\n   * @example\n   * this.onrightupoutside = (event) => {\n   *  //some function here that happens on rightupoutside\n   * }\n   */\n  onrightupoutside: null,\n  /**\n   * Property-based event handler for the `tap` event.\n   * @memberof scene.Container#\n   * @default null\n   * @example\n   * this.ontap = (event) => {\n   *  //some function here that happens on tap\n   * }\n   */\n  ontap: null,\n  /**\n   * Property-based event handler for the `touchcancel` event.\n   * @memberof scene.Container#\n   * @default null\n   * @example\n   * this.ontouchcancel = (event) => {\n   *  //some function here that happens on touchcancel\n   * }\n   */\n  ontouchcancel: null,\n  /**\n   * Property-based event handler for the `touchend` event.\n   * @memberof scene.Container#\n   * @default null\n   * @example\n   * this.ontouchend = (event) => {\n   *  //some function here that happens on touchend\n   * }\n   */\n  ontouchend: null,\n  /**\n   * Property-based event handler for the `touchendoutside` event.\n   * @memberof scene.Container#\n   * @default null\n   * @example\n   * this.ontouchendoutside = (event) => {\n   *  //some function here that happens on touchendoutside\n   * }\n   */\n  ontouchendoutside: null,\n  /**\n   * Property-based event handler for the `touchmove` event.\n   * @memberof scene.Container#\n   * @default null\n   * @example\n   * this.ontouchmove = (event) => {\n   *  //some function here that happens on touchmove\n   * }\n   */\n  ontouchmove: null,\n  /**\n   * Property-based event handler for the `globaltouchmove` event.\n   * @memberof scene.Container#\n   * @default null\n   * @example\n   * this.onglobaltouchmove = (event) => {\n   *  //some function here that happens on globaltouchmove\n   * }\n   */\n  onglobaltouchmove: null,\n  /**\n   * Property-based event handler for the `touchstart` event.\n   * @memberof scene.Container#\n   * @default null\n   * @example\n   * this.ontouchstart = (event) => {\n   *  //some function here that happens on touchstart\n   * }\n   */\n  ontouchstart: null,\n  /**\n   * Property-based event handler for the `wheel` event.\n   * @memberof scene.Container#\n   * @default null\n   * @example\n   * this.onwheel = (event) => {\n   *  //some function here that happens on wheel\n   * }\n   */\n  onwheel: null,\n  /**\n   * Enable interaction events for the Container. Touch, pointer and mouse\n   * @memberof scene.Container#\n   */\n  get interactive() {\n    return this.eventMode === \"dynamic\" || this.eventMode === \"static\";\n  },\n  set interactive(value) {\n    this.eventMode = value ? \"static\" : \"passive\";\n  },\n  /**\n   * @ignore\n   */\n  _internalEventMode: void 0,\n  /**\n   * Enable interaction events for the Container. Touch, pointer and mouse.\n   * There are 5 types of interaction settings:\n   * - `'none'`: Ignores all interaction events, even on its children.\n   * - `'passive'`: **(default)** Does not emit events and ignores all hit testing on itself and non-interactive children.\n   * Interactive children will still emit events.\n   * - `'auto'`: Does not emit events but is hit tested if parent is interactive. Same as `interactive = false` in v7\n   * - `'static'`: Emit events and is hit tested. Same as `interaction = true` in v7\n   * - `'dynamic'`: Emits events and is hit tested but will also receive mock interaction events fired from a ticker to\n   * allow for interaction when the mouse isn't moving\n   * @example\n   * import { Sprite } from 'pixi.js';\n   *\n   * const sprite = new Sprite(texture);\n   * sprite.eventMode = 'static';\n   * sprite.on('tap', (event) => {\n   *     // Handle event\n   * });\n   * @memberof scene.Container#\n   * @since 7.2.0\n   */\n  get eventMode() {\n    return this._internalEventMode ?? EventSystem.defaultEventMode;\n  },\n  set eventMode(value) {\n    this._internalEventMode = value;\n  },\n  /**\n   * Determines if the container is interactive or not\n   * @returns {boolean} Whether the container is interactive or not\n   * @memberof scene.Container#\n   * @since 7.2.0\n   * @example\n   * import { Sprite } from 'pixi.js';\n   *\n   * const sprite = new Sprite(texture);\n   * sprite.eventMode = 'static';\n   * sprite.isInteractive(); // true\n   *\n   * sprite.eventMode = 'dynamic';\n   * sprite.isInteractive(); // true\n   *\n   * sprite.eventMode = 'none';\n   * sprite.isInteractive(); // false\n   *\n   * sprite.eventMode = 'passive';\n   * sprite.isInteractive(); // false\n   *\n   * sprite.eventMode = 'auto';\n   * sprite.isInteractive(); // false\n   */\n  isInteractive() {\n    return this.eventMode === \"static\" || this.eventMode === \"dynamic\";\n  },\n  /**\n   * Determines if the children to the container can be clicked/touched\n   * Setting this to false allows PixiJS to bypass a recursive `hitTest` function\n   * @memberof scene.Container#\n   */\n  interactiveChildren: true,\n  /**\n   * Interaction shape. Children will be hit first, then this shape will be checked.\n   * Setting this will cause this shape to be checked in hit tests rather than the container's bounds.\n   * @example\n   * import { Rectangle, Sprite } from 'pixi.js';\n   *\n   * const sprite = new Sprite(texture);\n   * sprite.interactive = true;\n   * sprite.hitArea = new Rectangle(0, 0, 100, 100);\n   * @member {IHitArea}\n   * @memberof scene.Container#\n   */\n  hitArea: null,\n  /**\n   * Unlike `on` or `addListener` which are methods from EventEmitter, `addEventListener`\n   * seeks to be compatible with the DOM's `addEventListener` with support for options.\n   * @memberof scene.Container\n   * @param type - The type of event to listen to.\n   * @param listener - The listener callback or object.\n   * @param options - Listener options, used for capture phase.\n   * @example\n   * // Tell the user whether they did a single, double, triple, or nth click.\n   * button.addEventListener('click', {\n   *     handleEvent(e): {\n   *         let prefix;\n   *\n   *         switch (e.detail) {\n   *             case 1: prefix = 'single'; break;\n   *             case 2: prefix = 'double'; break;\n   *             case 3: prefix = 'triple'; break;\n   *             default: prefix = e.detail + 'th'; break;\n   *         }\n   *\n   *         console.log('That was a ' + prefix + 'click');\n   *     }\n   * });\n   *\n   * // But skip the first click!\n   * button.parent.addEventListener('click', function blockClickOnce(e) {\n   *     e.stopImmediatePropagation();\n   *     button.parent.removeEventListener('click', blockClickOnce, true);\n   * }, {\n   *     capture: true,\n   * });\n   */\n  addEventListener(type, listener, options) {\n    const capture = typeof options === \"boolean\" && options || typeof options === \"object\" && options.capture;\n    const signal = typeof options === \"object\" ? options.signal : void 0;\n    const once = typeof options === \"object\" ? options.once === true : false;\n    const context = typeof listener === \"function\" ? void 0 : listener;\n    type = capture ? `${type}capture` : type;\n    const listenerFn = typeof listener === \"function\" ? listener : listener.handleEvent;\n    const emitter = this;\n    if (signal) {\n      signal.addEventListener(\"abort\", () => {\n        emitter.off(type, listenerFn, context);\n      });\n    }\n    if (once) {\n      emitter.once(type, listenerFn, context);\n    } else {\n      emitter.on(type, listenerFn, context);\n    }\n  },\n  /**\n   * Unlike `off` or `removeListener` which are methods from EventEmitter, `removeEventListener`\n   * seeks to be compatible with the DOM's `removeEventListener` with support for options.\n   * @memberof scene.Container\n   * @param type - The type of event the listener is bound to.\n   * @param listener - The listener callback or object.\n   * @param options - The original listener options. This is required to deregister a capture phase listener.\n   */\n  removeEventListener(type, listener, options) {\n    const capture = typeof options === \"boolean\" && options || typeof options === \"object\" && options.capture;\n    const context = typeof listener === \"function\" ? void 0 : listener;\n    type = capture ? `${type}capture` : type;\n    listener = typeof listener === \"function\" ? listener : listener.handleEvent;\n    this.off(type, listener, context);\n  },\n  /**\n   * Dispatch the event on this {@link Container} using the event's {@link EventBoundary}.\n   *\n   * The target of the event is set to `this` and the `defaultPrevented` flag is cleared before dispatch.\n   * @memberof scene.Container\n   * @param e - The event to dispatch.\n   * @returns Whether the {@link FederatedEvent.preventDefault preventDefault}() method was not invoked.\n   * @example\n   * // Reuse a click event!\n   * button.dispatchEvent(clickEvent);\n   */\n  dispatchEvent(e) {\n    if (!(e instanceof FederatedEvent)) {\n      throw new Error(\"Container cannot propagate events outside of the Federated Events API\");\n    }\n    e.defaultPrevented = false;\n    e.path = null;\n    e.target = this;\n    e.manager.dispatchEvent(e);\n    return !e.defaultPrevented;\n  }\n};\n\nexport { FederatedContainer };\n//# sourceMappingURL=FederatedEventTarget.mjs.map\n","import { extensions } from '../extensions/Extensions.mjs';\nimport { Container } from '../scene/container/Container.mjs';\nimport { AccessibilitySystem } from './AccessibilitySystem.mjs';\nimport { accessibilityTarget } from './accessibilityTarget.mjs';\n\n\"use strict\";\nextensions.add(AccessibilitySystem);\nContainer.mixin(accessibilityTarget);\n//# sourceMappingURL=init.mjs.map\n","import { extensions } from '../extensions/Extensions.mjs';\nimport { Container } from '../scene/container/Container.mjs';\nimport { EventSystem } from './EventSystem.mjs';\nimport { FederatedContainer } from './FederatedEventTarget.mjs';\n\n\"use strict\";\nextensions.add(EventSystem);\nContainer.mixin(FederatedContainer);\n//# sourceMappingURL=init.mjs.map\n"],"names":["appleIphone","appleIpod","appleTablet","appleUniversal","androidPhone","androidTablet","amazonPhone","amazonTablet","windowsPhone","windowsTablet","otherBlackBerry","otherBlackBerry10","otherOpera","otherChrome","otherFirefox","isAppleTabletOnIos13","navigator","createMatch","userAgent","regex","isMobile","param","nav","tmp","match","result","isMobileCall","isMobileJs","KEY_CODE_TAB","DIV_TOUCH_SIZE","DIV_TOUCH_POS_X","DIV_TOUCH_POS_Y","DIV_TOUCH_ZINDEX","DIV_HOOK_SIZE","DIV_HOOK_POS_X","DIV_HOOK_POS_Y","DIV_HOOK_ZINDEX","AccessibilitySystem","renderer","_mobileInfo","div","hookDiv","container","children","options","now","x","y","width","height","viewWidth","viewHeight","resolution","sx","sy","i","child","removeItems","hitArea","wt","type","target","boundary","event","FederatedEvent","type2","ExtensionType","accessibilityTarget","MOUSE_POINTER_ID","TOUCH_TO_POINTER","_EventSystem","EventBoundary","EventsTicker","FederatedPointerEvent","FederatedWheelEvent","key","value","canvas","mode","applyStyles","style","nativeEvent","events","j","nativeEvent2","federatedEvent","normalizedEvents","outside","wheelEvent","element","point","rect","resolutionMultiplier","li","touch","tempEvent","EventSystem","FederatedContainer","listener","capture","signal","once","context","listenerFn","emitter","e","extensions","Container"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7]}