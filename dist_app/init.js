"use strict";const d=require("./appMain2.js"),Ot=Object.create(null),$e=Object.create(null);function be(n,t){let e=$e[n];return e===void 0&&(Ot[t]===void 0&&(Ot[t]=1),$e[n]=e=Ot[t]++),e}let wt;function Mr(){return(!wt||wt?.isContextLost())&&(wt=d.DOMAdapter.get().createCanvas().getContext("webgl",{})),wt}let Pt;function Ii(){if(!Pt){Pt="mediump";const n=Mr();n&&n.getShaderPrecisionFormat&&(Pt=n.getShaderPrecisionFormat(n.FRAGMENT_SHADER,n.HIGH_FLOAT).precision?"highp":"mediump")}return Pt}function Gi(n,t,e){return t?n:e?(n=n.replace("out vec4 finalColor;",""),`
        
        #ifdef GL_ES // This checks if it is WebGL1
        #define in varying
        #define finalColor gl_FragColor
        #define texture texture2D
        #endif
        ${n}
        `):`
        
        #ifdef GL_ES // This checks if it is WebGL1
        #define in attribute
        #define out varying
        #endif
        ${n}
        `}function Ui(n,t,e){const r=e?t.maxSupportedFragmentPrecision:t.maxSupportedVertexPrecision;if(n.substring(0,9)!=="precision"){let i=e?t.requestedFragmentPrecision:t.requestedVertexPrecision;return i==="highp"&&r!=="highp"&&(i="mediump"),`precision ${i} float;
${n}`}else if(r!=="highp"&&n.substring(0,15)==="precision highp")return n.replace("precision highp","precision mediump");return n}function Di(n,t){return t?`#version 300 es
${n}`:n}const Wi={},Li={};function Hi(n,{name:t="pixi-program"},e=!0){t=t.replace(/\s+/g,"-"),t+=e?"-fragment":"-vertex";const r=e?Wi:Li;return r[t]?(r[t]++,t+=`-${r[t]}`):r[t]=1,n.indexOf("#define SHADER_NAME")!==-1?n:`${`#define SHADER_NAME ${t}`}
${n}`}function Vi(n,t){return t?n.replace("#version 300 es",""):n}const Nt={stripVersion:Vi,ensurePrecision:Ui,addProgramDefines:Gi,setProgramName:Hi,insertVersion:Di},jt=Object.create(null),Br=class fe{constructor(t){t={...fe.defaultOptions,...t};const e=t.fragment.indexOf("#version 300 es")!==-1,r={stripVersion:e,ensurePrecision:{requestedFragmentPrecision:t.preferredFragmentPrecision,requestedVertexPrecision:t.preferredVertexPrecision,maxSupportedVertexPrecision:"highp",maxSupportedFragmentPrecision:Ii()},setProgramName:{name:t.name},addProgramDefines:e,insertVersion:e};let i=t.fragment,s=t.vertex;Object.keys(Nt).forEach(o=>{const a=r[o];i=Nt[o](i,a,!0),s=Nt[o](s,a,!1)}),this.fragment=i,this.vertex=s,this.transformFeedbackVaryings=t.transformFeedbackVaryings,this._key=be(`${this.vertex}:${this.fragment}`,"gl-program")}destroy(){this.fragment=null,this.vertex=null,this._attributeData=null,this._uniformData=null,this._uniformBlockData=null,this.transformFeedbackVaryings=null}static from(t){const e=`${t.vertex}:${t.fragment}`;return jt[e]||(jt[e]=new fe(t)),jt[e]}};Br.defaultOptions={preferredVertexPrecision:"highp",preferredFragmentPrecision:"mediump"};let Se=Br;const Oe={uint8x2:{size:2,stride:2,normalised:!1},uint8x4:{size:4,stride:4,normalised:!1},sint8x2:{size:2,stride:2,normalised:!1},sint8x4:{size:4,stride:4,normalised:!1},unorm8x2:{size:2,stride:2,normalised:!0},unorm8x4:{size:4,stride:4,normalised:!0},snorm8x2:{size:2,stride:2,normalised:!0},snorm8x4:{size:4,stride:4,normalised:!0},uint16x2:{size:2,stride:4,normalised:!1},uint16x4:{size:4,stride:8,normalised:!1},sint16x2:{size:2,stride:4,normalised:!1},sint16x4:{size:4,stride:8,normalised:!1},unorm16x2:{size:2,stride:4,normalised:!0},unorm16x4:{size:4,stride:8,normalised:!0},snorm16x2:{size:2,stride:4,normalised:!0},snorm16x4:{size:4,stride:8,normalised:!0},float16x2:{size:2,stride:4,normalised:!1},float16x4:{size:4,stride:8,normalised:!1},float32:{size:1,stride:4,normalised:!1},float32x2:{size:2,stride:8,normalised:!1},float32x3:{size:3,stride:12,normalised:!1},float32x4:{size:4,stride:16,normalised:!1},uint32:{size:1,stride:4,normalised:!1},uint32x2:{size:2,stride:8,normalised:!1},uint32x3:{size:3,stride:12,normalised:!1},uint32x4:{size:4,stride:16,normalised:!1},sint32:{size:1,stride:4,normalised:!1},sint32x2:{size:2,stride:8,normalised:!1},sint32x3:{size:3,stride:12,normalised:!1},sint32x4:{size:4,stride:16,normalised:!1}};function zt(n){return Oe[n]??Oe.float32}const $i={f32:"float32","vec2<f32>":"float32x2","vec3<f32>":"float32x3","vec4<f32>":"float32x4",vec2f:"float32x2",vec3f:"float32x3",vec4f:"float32x4",i32:"sint32","vec2<i32>":"sint32x2","vec3<i32>":"sint32x3","vec4<i32>":"sint32x4",u32:"uint32","vec2<u32>":"uint32x2","vec3<u32>":"uint32x3","vec4<u32>":"uint32x4",bool:"uint32","vec2<bool>":"uint32x2","vec3<bool>":"uint32x3","vec4<bool>":"uint32x4"};function Oi({source:n,entryPoint:t}){const e={},r=n.indexOf(`fn ${t}`);if(r!==-1){const i=n.indexOf("->",r);if(i!==-1){const s=n.substring(r,i),o=/@location\((\d+)\)\s+([a-zA-Z0-9_]+)\s*:\s*([a-zA-Z0-9_<>]+)(?:,|\s|$)/g;let a;for(;(a=o.exec(s))!==null;){const l=$i[a[3]]??"float32";e[a[2]]={location:parseInt(a[1],10),format:l,stride:zt(l).stride,offset:0,instance:!1,start:0}}}}return e}function Yt(n){const t=/(^|[^/])@(group|binding)\(\d+\)[^;]+;/g,e=/@group\((\d+)\)/,r=/@binding\((\d+)\)/,i=/var(<[^>]+>)? (\w+)/,s=/:\s*(\w+)/,o=/struct\s+(\w+)\s*{([^}]+)}/g,a=/(\w+)\s*:\s*([\w\<\>]+)/g,l=/struct\s+(\w+)/,c=n.match(t)?.map(u=>({group:parseInt(u.match(e)[1],10),binding:parseInt(u.match(r)[1],10),name:u.match(i)[2],isUniform:u.match(i)[1]==="<uniform>",type:u.match(s)[1]}));if(!c)return{groups:[],structs:[]};const h=n.match(o)?.map(u=>{const p=u.match(l)[1],f=u.match(a).reduce((g,x)=>{const[m,_]=x.split(":");return g[m.trim()]=_.trim(),g},{});return f?{name:p,members:f}:null}).filter(({name:u})=>c.some(p=>p.type===u))??[];return{groups:c,structs:h}}var pt=(n=>(n[n.VERTEX=1]="VERTEX",n[n.FRAGMENT=2]="FRAGMENT",n[n.COMPUTE=4]="COMPUTE",n))(pt||{});function Ni({groups:n}){const t=[];for(let e=0;e<n.length;e++){const r=n[e];t[r.group]||(t[r.group]=[]),r.isUniform?t[r.group].push({binding:r.binding,visibility:pt.VERTEX|pt.FRAGMENT,buffer:{type:"uniform"}}):r.type==="sampler"?t[r.group].push({binding:r.binding,visibility:pt.FRAGMENT,sampler:{type:"filtering"}}):r.type==="texture_2d"&&t[r.group].push({binding:r.binding,visibility:pt.FRAGMENT,texture:{sampleType:"float",viewDimension:"2d",multisampled:!1}})}return t}function ji({groups:n}){const t=[];for(let e=0;e<n.length;e++){const r=n[e];t[r.group]||(t[r.group]={}),t[r.group][r.name]=r.binding}return t}function Yi(n,t){const e=new Set,r=new Set,i=[...n.structs,...t.structs].filter(o=>e.has(o.name)?!1:(e.add(o.name),!0)),s=[...n.groups,...t.groups].filter(o=>{const a=`${o.name}-${o.binding}`;return r.has(a)?!1:(r.add(a),!0)});return{structs:i,groups:s}}const qt=Object.create(null);class bt{constructor(t){this._layoutKey=0,this._attributeLocationsKey=0;const{fragment:e,vertex:r,layout:i,gpuLayout:s,name:o}=t;if(this.name=o,this.fragment=e,this.vertex=r,e.source===r.source){const a=Yt(e.source);this.structsAndGroups=a}else{const a=Yt(r.source),l=Yt(e.source);this.structsAndGroups=Yi(a,l)}this.layout=i??ji(this.structsAndGroups),this.gpuLayout=s??Ni(this.structsAndGroups),this.autoAssignGlobalUniforms=this.layout[0]?.globalUniforms!==void 0,this.autoAssignLocalUniforms=this.layout[1]?.localUniforms!==void 0,this._generateProgramKey()}_generateProgramKey(){const{vertex:t,fragment:e}=this,r=t.source+e.source+t.entryPoint+e.entryPoint;this._layoutKey=be(r,"program")}get attributeData(){return this._attributeData??(this._attributeData=Oi(this.vertex)),this._attributeData}destroy(){this.gpuLayout=null,this.layout=null,this.structsAndGroups=null,this.fragment=null,this.vertex=null}static from(t){const e=`${t.vertex.source}:${t.fragment.source}:${t.fragment.entryPoint}:${t.vertex.entryPoint}`;return qt[e]||(qt[e]=new bt(t)),qt[e]}}const kr=["f32","i32","vec2<f32>","vec3<f32>","vec4<f32>","mat2x2<f32>","mat3x3<f32>","mat4x4<f32>","mat3x2<f32>","mat4x2<f32>","mat2x3<f32>","mat4x3<f32>","mat2x4<f32>","mat3x4<f32>","vec2<i32>","vec3<i32>","vec4<i32>"],qi=kr.reduce((n,t)=>(n[t]=!0,n),{});function Xi(n,t){switch(n){case"f32":return 0;case"vec2<f32>":return new Float32Array(2*t);case"vec3<f32>":return new Float32Array(3*t);case"vec4<f32>":return new Float32Array(4*t);case"mat2x2<f32>":return new Float32Array([1,0,0,1]);case"mat3x3<f32>":return new Float32Array([1,0,0,0,1,0,0,0,1]);case"mat4x4<f32>":return new Float32Array([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1])}return null}const Rr=class Ar{constructor(t,e){this._touched=0,this.uid=d.uid("uniform"),this._resourceType="uniformGroup",this._resourceId=d.uid("resource"),this.isUniformGroup=!0,this._dirtyId=0,this.destroyed=!1,e={...Ar.defaultOptions,...e},this.uniformStructures=t;const r={};for(const i in t){const s=t[i];if(s.name=i,s.size=s.size??1,!qi[s.type])throw new Error(`Uniform type ${s.type} is not supported. Supported uniform types are: ${kr.join(", ")}`);s.value??(s.value=Xi(s.type,s.size)),r[i]=s.value}this.uniforms=r,this._dirtyId=1,this.ubo=e.ubo,this.isStatic=e.isStatic,this._signature=be(Object.keys(r).map(i=>`${i}-${t[i].type}`).join("-"),"uniform-group")}update(){this._dirtyId++}};Rr.defaultOptions={ubo:!1,isStatic:!1};let N=Rr;class it{constructor(t){this.resources=Object.create(null),this._dirty=!0;let e=0;for(const r in t){const i=t[r];this.setResource(i,e++)}this._updateKey()}_updateKey(){if(!this._dirty)return;this._dirty=!1;const t=[];let e=0;for(const r in this.resources)t[e++]=this.resources[r]._resourceId;this._key=t.join("|")}setResource(t,e){const r=this.resources[e];t!==r&&(r&&t.off?.("change",this.onResourceChange,this),t.on?.("change",this.onResourceChange,this),this.resources[e]=t,this._dirty=!0)}getResource(t){return this.resources[t]}_touch(t){const e=this.resources;for(const r in e)e[r]._touched=t}destroy(){const t=this.resources;for(const e in t)t[e].off?.("change",this.onResourceChange,this);this.resources=null}onResourceChange(t){if(this._dirty=!0,t.destroyed){const e=this.resources;for(const r in e)e[r]===t&&(e[r]=null)}else this._updateKey()}}var nt=(n=>(n[n.WEBGL=1]="WEBGL",n[n.WEBGPU=2]="WEBGPU",n[n.BOTH=3]="BOTH",n))(nt||{});class ot extends d.EventEmitter{constructor(t){super(),this._uniformBindMap=Object.create(null),this._ownedBindGroups=[];let{gpuProgram:e,glProgram:r,groups:i,resources:s,compatibleRenderers:o,groupMap:a}=t;this.gpuProgram=e,this.glProgram=r,o===void 0&&(o=0,e&&(o|=nt.WEBGPU),r&&(o|=nt.WEBGL)),this.compatibleRenderers=o;const l={};if(!s&&!i&&(s={}),s&&i)throw new Error("[Shader] Cannot have both resources and groups");if(!e&&i&&!a)throw new Error("[Shader] No group map or WebGPU shader provided - consider using resources instead.");if(!e&&i&&a)for(const c in a)for(const h in a[c]){const u=a[c][h];l[u]={group:c,binding:h,name:u}}else if(e&&i&&!a){const c=e.structsAndGroups.groups;a={},c.forEach(h=>{a[h.group]=a[h.group]||{},a[h.group][h.binding]=h.name,l[h.name]=h})}else if(s){i={},a={},e&&e.structsAndGroups.groups.forEach(u=>{a[u.group]=a[u.group]||{},a[u.group][u.binding]=u.name,l[u.name]=u});let c=0;for(const h in s)l[h]||(i[99]||(i[99]=new it,this._ownedBindGroups.push(i[99])),l[h]={group:99,binding:c,name:h},a[99]=a[99]||{},a[99][c]=h,c++);for(const h in s){const u=h;let p=s[h];!p.source&&!p._resourceType&&(p=new N(p));const f=l[u];f&&(i[f.group]||(i[f.group]=new it,this._ownedBindGroups.push(i[f.group])),i[f.group].setResource(p,f.binding))}}this.groups=i,this._uniformBindMap=a,this.resources=this._buildResourceAccessor(i,l)}addResource(t,e,r){var i,s;(i=this._uniformBindMap)[e]||(i[e]={}),(s=this._uniformBindMap[e])[r]||(s[r]=t),this.groups[e]||(this.groups[e]=new it,this._ownedBindGroups.push(this.groups[e]))}_buildResourceAccessor(t,e){const r={};for(const i in e){const s=e[i];Object.defineProperty(r,s.name,{get(){return t[s.group].getResource(s.binding)},set(o){t[s.group].setResource(o,s.binding)}})}return r}destroy(t=!1){this.emit("destroy",this),t&&(this.gpuProgram?.destroy(),this.glProgram?.destroy()),this.gpuProgram=null,this.glProgram=null,this.removeAllListeners(),this._uniformBindMap=null,this._ownedBindGroups.forEach(e=>{e.destroy()}),this._ownedBindGroups=null,this.resources=null,this.groups=null}static from(t){const{gpu:e,gl:r,...i}=t;let s,o;return e&&(s=bt.from(e)),r&&(o=Se.from(r)),new ot({gpuProgram:s,glProgram:o,...i})}}const Ki={normal:0,add:1,multiply:2,screen:3,overlay:4,erase:5,"normal-npm":6,"add-npm":7,"screen-npm":8,min:9,max:10},Xt=0,Kt=1,Qt=2,Zt=3,Jt=4,te=5,pe=class Fr{constructor(){this.data=0,this.blendMode="normal",this.polygonOffset=0,this.blend=!0,this.depthMask=!0}get blend(){return!!(this.data&1<<Xt)}set blend(t){!!(this.data&1<<Xt)!==t&&(this.data^=1<<Xt)}get offsets(){return!!(this.data&1<<Kt)}set offsets(t){!!(this.data&1<<Kt)!==t&&(this.data^=1<<Kt)}set cullMode(t){if(t==="none"){this.culling=!1;return}this.culling=!0,this.clockwiseFrontFace=t==="front"}get cullMode(){return this.culling?this.clockwiseFrontFace?"front":"back":"none"}get culling(){return!!(this.data&1<<Qt)}set culling(t){!!(this.data&1<<Qt)!==t&&(this.data^=1<<Qt)}get depthTest(){return!!(this.data&1<<Zt)}set depthTest(t){!!(this.data&1<<Zt)!==t&&(this.data^=1<<Zt)}get depthMask(){return!!(this.data&1<<te)}set depthMask(t){!!(this.data&1<<te)!==t&&(this.data^=1<<te)}get clockwiseFrontFace(){return!!(this.data&1<<Jt)}set clockwiseFrontFace(t){!!(this.data&1<<Jt)!==t&&(this.data^=1<<Jt)}get blendMode(){return this._blendMode}set blendMode(t){this.blend=t!=="none",this._blendMode=t,this._blendModeId=Ki[t]||0}get polygonOffset(){return this._polygonOffset}set polygonOffset(t){this.offsets=!!t,this._polygonOffset=t}toString(){return`[pixi.js/core:State blendMode=${this.blendMode} clockwiseFrontFace=${this.clockwiseFrontFace} culling=${this.culling} depthMask=${this.depthMask} polygonOffset=${this.polygonOffset}]`}static for2d(){const t=new Fr;return t.depthTest=!1,t.blend=!0,t}};pe.default2d=pe.for2d();let Et=pe;class zr{static init(t){Object.defineProperty(this,"resizeTo",{set(e){globalThis.removeEventListener("resize",this.queueResize),this._resizeTo=e,e&&(globalThis.addEventListener("resize",this.queueResize),this.resize())},get(){return this._resizeTo}}),this.queueResize=()=>{this._resizeTo&&(this._cancelResize(),this._resizeId=requestAnimationFrame(()=>this.resize()))},this._cancelResize=()=>{this._resizeId&&(cancelAnimationFrame(this._resizeId),this._resizeId=null)},this.resize=()=>{if(!this._resizeTo)return;this._cancelResize();let e,r;if(this._resizeTo===globalThis.window)e=globalThis.innerWidth,r=globalThis.innerHeight;else{const{clientWidth:i,clientHeight:s}=this._resizeTo;e=i,r=s}this.renderer.resize(e,r),this.render()},this._resizeId=null,this._resizeTo=null,this.resizeTo=t.resizeTo||null}static destroy(){globalThis.removeEventListener("resize",this.queueResize),this._cancelResize(),this._cancelResize=null,this.queueResize=null,this.resizeTo=null,this.resize=null}}zr.extension=d.ExtensionType.Application;class Er{static init(t){t=Object.assign({autoStart:!0,sharedTicker:!1},t),Object.defineProperty(this,"ticker",{set(e){this._ticker&&this._ticker.remove(this.render,this),this._ticker=e,e&&e.add(this.render,this,d.UPDATE_PRIORITY.LOW)},get(){return this._ticker}}),this.stop=()=>{this._ticker.stop()},this.start=()=>{this._ticker.start()},this._ticker=null,this.ticker=t.sharedTicker?d.Ticker.shared:new d.Ticker,t.autoStart&&this.start()}static destroy(){if(this._ticker){const t=this._ticker;this.ticker=null,t.destroy()}}}Er.extension=d.ExtensionType.Application;class Qi extends d.EventEmitter{constructor(){super(...arguments),this.chars=Object.create(null),this.lineHeight=0,this.fontFamily="",this.fontMetrics={fontSize:0,ascent:0,descent:0},this.baseLineOffset=0,this.distanceField={type:"none",range:0},this.pages=[],this.applyFillAsTint=!0,this.baseMeasurementFontSize=100,this.baseRenderedFontSize=100}get font(){return d.deprecation(d.v8_0_0,"BitmapFont.font is deprecated, please use BitmapFont.fontFamily instead."),this.fontFamily}get pageTextures(){return d.deprecation(d.v8_0_0,"BitmapFont.pageTextures is deprecated, please use BitmapFont.pages instead."),this.pages}get size(){return d.deprecation(d.v8_0_0,"BitmapFont.size is deprecated, please use BitmapFont.fontMetrics.fontSize instead."),this.fontMetrics.fontSize}get distanceFieldRange(){return d.deprecation(d.v8_0_0,"BitmapFont.distanceFieldRange is deprecated, please use BitmapFont.distanceField.range instead."),this.distanceField.range}get distanceFieldType(){return d.deprecation(d.v8_0_0,"BitmapFont.distanceFieldType is deprecated, please use BitmapFont.distanceField.type instead."),this.distanceField.type}destroy(t=!1){this.emit("destroy",this),this.removeAllListeners();for(const e in this.chars)this.chars[e].texture?.destroy();this.chars=null,t&&(this.pages.forEach(e=>e.texture.destroy(!0)),this.pages=null)}}const Ir=class ge{constructor(t,e,r,i){this.uid=d.uid("fillGradient"),this.type="linear",this.gradientStops=[],this._styleKey=null,this.x0=t,this.y0=e,this.x1=r,this.y1=i}addColorStop(t,e){return this.gradientStops.push({offset:t,color:d.Color.shared.setValue(e).toHexa()}),this._styleKey=null,this}buildLinearGradient(){if(this.texture)return;const t=ge.defaultTextureSize,{gradientStops:e}=this,r=d.DOMAdapter.get().createCanvas();r.width=t,r.height=t;const i=r.getContext("2d"),s=i.createLinearGradient(0,0,ge.defaultTextureSize,1);for(let x=0;x<e.length;x++){const m=e[x];s.addColorStop(m.offset,m.color)}i.fillStyle=s,i.fillRect(0,0,t,t),this.texture=new d.Texture({source:new d.ImageSource({resource:r,addressModeU:"clamp-to-edge",addressModeV:"repeat"})});const{x0:o,y0:a,x1:l,y1:c}=this,h=new d.Matrix,u=l-o,p=c-a,f=Math.sqrt(u*u+p*p),g=Math.atan2(p,u);h.translate(-o,-a),h.scale(1/t,1/t),h.rotate(-g),h.scale(256/f,1),this.transform=h,this._styleKey=null}get styleKey(){if(this._styleKey)return this._styleKey;const t=this.gradientStops.map(i=>`${i.offset}-${i.color}`).join("-"),e=this.texture.uid,r=this.transform.toArray().join("-");return`fill-gradient-${this.uid}-${t}-${e}-${r}-${this.x0}-${this.y0}-${this.x1}-${this.y1}`}};Ir.defaultTextureSize=256;let xt=Ir;const Ne={repeat:{addressModeU:"repeat",addressModeV:"repeat"},"repeat-x":{addressModeU:"repeat",addressModeV:"clamp-to-edge"},"repeat-y":{addressModeU:"clamp-to-edge",addressModeV:"repeat"},"no-repeat":{addressModeU:"clamp-to-edge",addressModeV:"clamp-to-edge"}};class Wt{constructor(t,e){this.uid=d.uid("fillPattern"),this.transform=new d.Matrix,this._styleKey=null,this.texture=t,this.transform.scale(1/t.frame.width,1/t.frame.height),e&&(t.source.style.addressModeU=Ne[e].addressModeU,t.source.style.addressModeV=Ne[e].addressModeV)}setTransform(t){const e=this.texture;this.transform.copyFrom(t),this.transform.invert(),this.transform.scale(1/e.frame.width,1/e.frame.height),this._styleKey=null}get styleKey(){return this._styleKey?this._styleKey:(this._styleKey=`fill-pattern-${this.uid}-${this.texture.uid}-${this.transform.toArray().join("-")}`,this._styleKey)}}var ee,je;function Zi(){if(je)return ee;je=1,ee=e;var n={a:7,c:6,h:1,l:2,m:2,q:4,s:4,t:2,v:1,z:0},t=/([astvzqmhlc])([^astvzqmhlc]*)/ig;function e(s){var o=[];return s.replace(t,function(a,l,c){var h=l.toLowerCase();for(c=i(c),h=="m"&&c.length>2&&(o.push([l].concat(c.splice(0,2))),h="l",l=l=="m"?"l":"L");;){if(c.length==n[h])return c.unshift(l),o.push(c);if(c.length<n[h])throw new Error("malformed path data");o.push([l].concat(c.splice(0,n[h])))}}),o}var r=/-?[0-9]*\.?[0-9]+(?:e[-+]?\d+)?/ig;function i(s){var o=s.match(r);return o?o.map(Number):[]}return ee}var Ji=Zi();const tn=d.getDefaultExportFromCjs(Ji);function en(n,t){const e=tn(n),r=[];let i=null,s=0,o=0;for(let a=0;a<e.length;a++){const l=e[a],c=l[0],h=l;switch(c){case"M":s=h[1],o=h[2],t.moveTo(s,o);break;case"m":s+=h[1],o+=h[2],t.moveTo(s,o);break;case"H":s=h[1],t.lineTo(s,o);break;case"h":s+=h[1],t.lineTo(s,o);break;case"V":o=h[1],t.lineTo(s,o);break;case"v":o+=h[1],t.lineTo(s,o);break;case"L":s=h[1],o=h[2],t.lineTo(s,o);break;case"l":s+=h[1],o+=h[2],t.lineTo(s,o);break;case"C":s=h[5],o=h[6],t.bezierCurveTo(h[1],h[2],h[3],h[4],s,o);break;case"c":t.bezierCurveTo(s+h[1],o+h[2],s+h[3],o+h[4],s+h[5],o+h[6]),s+=h[5],o+=h[6];break;case"S":s=h[3],o=h[4],t.bezierCurveToShort(h[1],h[2],s,o);break;case"s":t.bezierCurveToShort(s+h[1],o+h[2],s+h[3],o+h[4]),s+=h[3],o+=h[4];break;case"Q":s=h[3],o=h[4],t.quadraticCurveTo(h[1],h[2],s,o);break;case"q":t.quadraticCurveTo(s+h[1],o+h[2],s+h[3],o+h[4]),s+=h[3],o+=h[4];break;case"T":s=h[1],o=h[2],t.quadraticCurveToShort(s,o);break;case"t":s+=h[1],o+=h[2],t.quadraticCurveToShort(s,o);break;case"A":s=h[6],o=h[7],t.arcToSvg(h[1],h[2],h[3],h[4],h[5],s,o);break;case"a":s+=h[6],o+=h[7],t.arcToSvg(h[1],h[2],h[3],h[4],h[5],s,o);break;case"Z":case"z":t.closePath(),r.length>0&&(i=r.pop(),i?(s=i.startX,o=i.startY):(s=0,o=0)),i=null;break;default:d.warn(`Unknown SVG path command: ${c}`)}c!=="Z"&&c!=="z"&&i===null&&(i={startX:s,startY:o},r.push(i))}return t}class Te{constructor(t=0,e=0,r=0){this.type="circle",this.x=t,this.y=e,this.radius=r}clone(){return new Te(this.x,this.y,this.radius)}contains(t,e){if(this.radius<=0)return!1;const r=this.radius*this.radius;let i=this.x-t,s=this.y-e;return i*=i,s*=s,i+s<=r}strokeContains(t,e,r,i=.5){if(this.radius===0)return!1;const s=this.x-t,o=this.y-e,a=this.radius,l=(1-i)*r,c=Math.sqrt(s*s+o*o);return c<=a+l&&c>a-(r-l)}getBounds(t){return t||(t=new d.Rectangle),t.x=this.x-this.radius,t.y=this.y-this.radius,t.width=this.radius*2,t.height=this.radius*2,t}copyFrom(t){return this.x=t.x,this.y=t.y,this.radius=t.radius,this}copyTo(t){return t.copyFrom(this),t}toString(){return`[pixi.js/math:Circle x=${this.x} y=${this.y} radius=${this.radius}]`}}class ve{constructor(t=0,e=0,r=0,i=0){this.type="ellipse",this.x=t,this.y=e,this.halfWidth=r,this.halfHeight=i}clone(){return new ve(this.x,this.y,this.halfWidth,this.halfHeight)}contains(t,e){if(this.halfWidth<=0||this.halfHeight<=0)return!1;let r=(t-this.x)/this.halfWidth,i=(e-this.y)/this.halfHeight;return r*=r,i*=i,r+i<=1}strokeContains(t,e,r,i=.5){const{halfWidth:s,halfHeight:o}=this;if(s<=0||o<=0)return!1;const a=r*(1-i),l=r-a,c=s-l,h=o-l,u=s+a,p=o+a,f=t-this.x,g=e-this.y,x=f*f/(c*c)+g*g/(h*h),m=f*f/(u*u)+g*g/(p*p);return x>1&&m<=1}getBounds(t){return t||(t=new d.Rectangle),t.x=this.x-this.halfWidth,t.y=this.y-this.halfHeight,t.width=this.halfWidth*2,t.height=this.halfHeight*2,t}copyFrom(t){return this.x=t.x,this.y=t.y,this.halfWidth=t.halfWidth,this.halfHeight=t.halfHeight,this}copyTo(t){return t.copyFrom(this),t}toString(){return`[pixi.js/math:Ellipse x=${this.x} y=${this.y} halfWidth=${this.halfWidth} halfHeight=${this.halfHeight}]`}}function rn(n,t,e,r,i,s){const o=n-e,a=t-r,l=i-e,c=s-r,h=o*l+a*c,u=l*l+c*c;let p=-1;u!==0&&(p=h/u);let f,g;p<0?(f=e,g=r):p>1?(f=i,g=s):(f=e+p*l,g=r+p*c);const x=n-f,m=t-g;return x*x+m*m}class gt{constructor(...t){this.type="polygon";let e=Array.isArray(t[0])?t[0]:t;if(typeof e[0]!="number"){const r=[];for(let i=0,s=e.length;i<s;i++)r.push(e[i].x,e[i].y);e=r}this.points=e,this.closePath=!0}clone(){const t=this.points.slice(),e=new gt(t);return e.closePath=this.closePath,e}contains(t,e){let r=!1;const i=this.points.length/2;for(let s=0,o=i-1;s<i;o=s++){const a=this.points[s*2],l=this.points[s*2+1],c=this.points[o*2],h=this.points[o*2+1];l>e!=h>e&&t<(c-a)*((e-l)/(h-l))+a&&(r=!r)}return r}strokeContains(t,e,r,i=.5){const s=r*r,o=s*(1-i),a=s-o,{points:l}=this,c=l.length-(this.closePath?0:2);for(let h=0;h<c;h+=2){const u=l[h],p=l[h+1],f=l[(h+2)%l.length],g=l[(h+3)%l.length],x=rn(t,e,u,p,f,g),m=Math.sign((f-u)*(e-p)-(g-p)*(t-u));if(x<=(m<0?a:o))return!0}return!1}getBounds(t){t||(t=new d.Rectangle);const e=this.points;let r=1/0,i=-1/0,s=1/0,o=-1/0;for(let a=0,l=e.length;a<l;a+=2){const c=e[a],h=e[a+1];r=c<r?c:r,i=c>i?c:i,s=h<s?h:s,o=h>o?h:o}return t.x=r,t.width=i-r,t.y=s,t.height=o-s,t}copyFrom(t){return this.points=t.points.slice(),this.closePath=t.closePath,this}copyTo(t){return t.copyFrom(this),t}toString(){return`[pixi.js/math:PolygoncloseStroke=${this.closePath}points=${this.points.reduce((t,e)=>`${t}, ${e}`,"")}]`}get lastX(){return this.points[this.points.length-2]}get lastY(){return this.points[this.points.length-1]}get x(){return this.points[this.points.length-2]}get y(){return this.points[this.points.length-1]}}const Ct=(n,t,e,r,i,s,o)=>{const a=n-e,l=t-r,c=Math.sqrt(a*a+l*l);return c>=i-s&&c<=i+o};class we{constructor(t=0,e=0,r=0,i=0,s=20){this.type="roundedRectangle",this.x=t,this.y=e,this.width=r,this.height=i,this.radius=s}getBounds(t){return t||(t=new d.Rectangle),t.x=this.x,t.y=this.y,t.width=this.width,t.height=this.height,t}clone(){return new we(this.x,this.y,this.width,this.height,this.radius)}copyFrom(t){return this.x=t.x,this.y=t.y,this.width=t.width,this.height=t.height,this}copyTo(t){return t.copyFrom(this),t}contains(t,e){if(this.width<=0||this.height<=0)return!1;if(t>=this.x&&t<=this.x+this.width&&e>=this.y&&e<=this.y+this.height){const r=Math.max(0,Math.min(this.radius,Math.min(this.width,this.height)/2));if(e>=this.y+r&&e<=this.y+this.height-r||t>=this.x+r&&t<=this.x+this.width-r)return!0;let i=t-(this.x+r),s=e-(this.y+r);const o=r*r;if(i*i+s*s<=o||(i=t-(this.x+this.width-r),i*i+s*s<=o)||(s=e-(this.y+this.height-r),i*i+s*s<=o)||(i=t-(this.x+r),i*i+s*s<=o))return!0}return!1}strokeContains(t,e,r,i=.5){const{x:s,y:o,width:a,height:l,radius:c}=this,h=r*(1-i),u=r-h,p=s+c,f=o+c,g=a-c*2,x=l-c*2,m=s+a,_=o+l;return(t>=s-h&&t<=s+u||t>=m-u&&t<=m+h)&&e>=f&&e<=f+x||(e>=o-h&&e<=o+u||e>=_-u&&e<=_+h)&&t>=p&&t<=p+g?!0:t<p&&e<f&&Ct(t,e,p,f,c,u,h)||t>m-c&&e<f&&Ct(t,e,m-c,f,c,u,h)||t>m-c&&e>_-c&&Ct(t,e,m-c,_-c,c,u,h)||t<p&&e>_-c&&Ct(t,e,p,_-c,c,u,h)}toString(){return`[pixi.js/math:RoundedRectangle x=${this.x} y=${this.y}width=${this.width} height=${this.height} radius=${this.radius}]`}}const nn=["precision mediump float;","void main(void){","float test = 0.1;","%forloop%","gl_FragColor = vec4(0.0);","}"].join(`
`);function sn(n){let t="";for(let e=0;e<n;++e)e>0&&(t+=`
else `),e<n-1&&(t+=`if(test == ${e}.0){}`);return t}function on(n,t){if(n===0)throw new Error("Invalid value of `0` passed to `checkMaxIfStatementsInShader`");const e=t.createShader(t.FRAGMENT_SHADER);try{for(;;){const r=nn.replace(/%forloop%/gi,sn(n));if(t.shaderSource(e,r),t.compileShader(e),!t.getShaderParameter(e,t.COMPILE_STATUS))n=n/2|0;else break}}finally{t.deleteShader(e)}return n}let tt=null;function Pe(){if(tt)return tt;const n=Mr();return tt=n.getParameter(n.MAX_TEXTURE_IMAGE_UNITS),tt=on(tt,n),n.getExtension("WEBGL_lose_context")?.loseContext(),tt}const Gr={};function an(n,t){let e=2166136261;for(let r=0;r<t;r++)e^=n[r].uid,e=Math.imul(e,16777619),e>>>=0;return Gr[e]||ln(n,t,e)}let re=0;function ln(n,t,e){const r={};let i=0;re||(re=Pe());for(let o=0;o<re;o++){const a=o<t?n[o]:d.Texture.EMPTY.source;r[i++]=a.source,r[i++]=a.style}const s=new it(r);return Gr[e]=s,s}class rt{constructor(t){typeof t=="number"?this.rawBinaryData=new ArrayBuffer(t):t instanceof Uint8Array?this.rawBinaryData=t.buffer:this.rawBinaryData=t,this.uint32View=new Uint32Array(this.rawBinaryData),this.float32View=new Float32Array(this.rawBinaryData),this.size=this.rawBinaryData.byteLength}get int8View(){return this._int8View||(this._int8View=new Int8Array(this.rawBinaryData)),this._int8View}get uint8View(){return this._uint8View||(this._uint8View=new Uint8Array(this.rawBinaryData)),this._uint8View}get int16View(){return this._int16View||(this._int16View=new Int16Array(this.rawBinaryData)),this._int16View}get int32View(){return this._int32View||(this._int32View=new Int32Array(this.rawBinaryData)),this._int32View}get float64View(){return this._float64Array||(this._float64Array=new Float64Array(this.rawBinaryData)),this._float64Array}get bigUint64View(){return this._bigUint64Array||(this._bigUint64Array=new BigUint64Array(this.rawBinaryData)),this._bigUint64Array}view(t){return this[`${t}View`]}destroy(){this.rawBinaryData=null,this._int8View=null,this._uint8View=null,this._int16View=null,this.uint16View=null,this._int32View=null,this.uint32View=null,this.float32View=null}static sizeOf(t){switch(t){case"int8":case"uint8":return 1;case"int16":case"uint16":return 2;case"int32":case"uint32":case"float32":return 4;default:throw new Error(`${t} isn't a valid view type`)}}}function Ye(n,t){const e=n.byteLength/8|0,r=new Float64Array(n,0,e);new Float64Array(t,0,e).set(r);const s=n.byteLength-e*8;if(s>0){const o=new Uint8Array(n,e*8,s);new Uint8Array(t,e*8,s).set(o)}}const hn={normal:"normal-npm",add:"add-npm",screen:"screen-npm"};function _t(n,t){return t.alphaMode==="no-premultiply-alpha"&&hn[n]||n}class cn{constructor(){this.ids=Object.create(null),this.textures=[],this.count=0}clear(){for(let t=0;t<this.count;t++){const e=this.textures[t];this.textures[t]=null,this.ids[e.uid]=null}this.count=0}}class un{constructor(){this.renderPipeId="batch",this.action="startBatch",this.start=0,this.size=0,this.textures=new cn,this.blendMode="normal",this.topology="triangle-strip",this.canBundle=!0}destroy(){this.textures=null,this.gpuBindGroup=null,this.bindGroup=null,this.batcher=null}}const Ur=[];let me=0;function qe(){return me>0?Ur[--me]:new un}function Xe(n){Ur[me++]=n}let dt=0;const Dr=class At{constructor(t={}){this.uid=d.uid("batcher"),this.dirty=!0,this.batchIndex=0,this.batches=[],this._elements=[],At.defaultOptions.maxTextures=At.defaultOptions.maxTextures??Pe(),t={...At.defaultOptions,...t};const{maxTextures:e,attributesInitialSize:r,indicesInitialSize:i}=t;this.attributeBuffer=new rt(r*4),this.indexBuffer=new Uint16Array(i),this.maxTextures=e}begin(){this.elementSize=0,this.elementStart=0,this.indexSize=0,this.attributeSize=0;for(let t=0;t<this.batchIndex;t++)Xe(this.batches[t]);this.batchIndex=0,this._batchIndexStart=0,this._batchIndexSize=0,this.dirty=!0}add(t){this._elements[this.elementSize++]=t,t._indexStart=this.indexSize,t._attributeStart=this.attributeSize,t._batcher=this,this.indexSize+=t.indexSize,this.attributeSize+=t.attributeSize*this.vertexSize}checkAndUpdateTexture(t,e){const r=t._batch.textures.ids[e._source.uid];return!r&&r!==0?!1:(t._textureId=r,t.texture=e,!0)}updateElement(t){this.dirty=!0;const e=this.attributeBuffer;t.packAsQuad?this.packQuadAttributes(t,e.float32View,e.uint32View,t._attributeStart,t._textureId):this.packAttributes(t,e.float32View,e.uint32View,t._attributeStart,t._textureId)}break(t){const e=this._elements;if(!e[this.elementStart])return;let r=qe(),i=r.textures;i.clear();const s=e[this.elementStart];let o=_t(s.blendMode,s.texture._source),a=s.topology;this.attributeSize*4>this.attributeBuffer.size&&this._resizeAttributeBuffer(this.attributeSize*4),this.indexSize>this.indexBuffer.length&&this._resizeIndexBuffer(this.indexSize);const l=this.attributeBuffer.float32View,c=this.attributeBuffer.uint32View,h=this.indexBuffer;let u=this._batchIndexSize,p=this._batchIndexStart,f="startBatch";const g=this.maxTextures;for(let x=this.elementStart;x<this.elementSize;++x){const m=e[x];e[x]=null;const y=m.texture._source,v=_t(m.blendMode,y),b=o!==v||a!==m.topology;if(y._batchTick===dt&&!b){m._textureId=y._textureBindLocation,u+=m.indexSize,m.packAsQuad?(this.packQuadAttributes(m,l,c,m._attributeStart,m._textureId),this.packQuadIndex(h,m._indexStart,m._attributeStart/this.vertexSize)):(this.packAttributes(m,l,c,m._attributeStart,m._textureId),this.packIndex(m,h,m._indexStart,m._attributeStart/this.vertexSize)),m._batch=r;continue}y._batchTick=dt,(i.count>=g||b)&&(this._finishBatch(r,p,u-p,i,o,a,t,f),f="renderBatch",p=u,o=v,a=m.topology,r=qe(),i=r.textures,i.clear(),++dt),m._textureId=y._textureBindLocation=i.count,i.ids[y.uid]=i.count,i.textures[i.count++]=y,m._batch=r,u+=m.indexSize,m.packAsQuad?(this.packQuadAttributes(m,l,c,m._attributeStart,m._textureId),this.packQuadIndex(h,m._indexStart,m._attributeStart/this.vertexSize)):(this.packAttributes(m,l,c,m._attributeStart,m._textureId),this.packIndex(m,h,m._indexStart,m._attributeStart/this.vertexSize))}i.count>0&&(this._finishBatch(r,p,u-p,i,o,a,t,f),p=u,++dt),this.elementStart=this.elementSize,this._batchIndexStart=p,this._batchIndexSize=u}_finishBatch(t,e,r,i,s,o,a,l){t.gpuBindGroup=null,t.bindGroup=null,t.action=l,t.batcher=this,t.textures=i,t.blendMode=s,t.topology=o,t.start=e,t.size=r,++dt,this.batches[this.batchIndex++]=t,a.add(t)}finish(t){this.break(t)}ensureAttributeBuffer(t){t*4<=this.attributeBuffer.size||this._resizeAttributeBuffer(t*4)}ensureIndexBuffer(t){t<=this.indexBuffer.length||this._resizeIndexBuffer(t)}_resizeAttributeBuffer(t){const e=Math.max(t,this.attributeBuffer.size*2),r=new rt(e);Ye(this.attributeBuffer.rawBinaryData,r.rawBinaryData),this.attributeBuffer=r}_resizeIndexBuffer(t){const e=this.indexBuffer;let r=Math.max(t,e.length*1.5);r+=r%2;const i=r>65535?new Uint32Array(r):new Uint16Array(r);if(i.BYTES_PER_ELEMENT!==e.BYTES_PER_ELEMENT)for(let s=0;s<e.length;s++)i[s]=e[s];else Ye(e.buffer,i.buffer);this.indexBuffer=i}packQuadIndex(t,e,r){t[e]=r+0,t[e+1]=r+1,t[e+2]=r+2,t[e+3]=r+0,t[e+4]=r+2,t[e+5]=r+3}packIndex(t,e,r,i){const s=t.indices,o=t.indexSize,a=t.indexOffset,l=t.attributeOffset;for(let c=0;c<o;c++)e[r++]=i+s[c+a]-l}destroy(){for(let t=0;t<this.batches.length;t++)Xe(this.batches[t]);this.batches=null;for(let t=0;t<this._elements.length;t++)this._elements[t]._batch=null;this._elements=null,this.indexBuffer=null,this.attributeBuffer.destroy(),this.attributeBuffer=null}};Dr.defaultOptions={maxTextures:null,attributesInitialSize:4,indicesInitialSize:6};let dn=Dr;var E=(n=>(n[n.MAP_READ=1]="MAP_READ",n[n.MAP_WRITE=2]="MAP_WRITE",n[n.COPY_SRC=4]="COPY_SRC",n[n.COPY_DST=8]="COPY_DST",n[n.INDEX=16]="INDEX",n[n.VERTEX=32]="VERTEX",n[n.UNIFORM=64]="UNIFORM",n[n.STORAGE=128]="STORAGE",n[n.INDIRECT=256]="INDIRECT",n[n.QUERY_RESOLVE=512]="QUERY_RESOLVE",n[n.STATIC=1024]="STATIC",n))(E||{});class H extends d.EventEmitter{constructor(t){let{data:e,size:r}=t;const{usage:i,label:s,shrinkToFit:o}=t;super(),this.uid=d.uid("buffer"),this._resourceType="buffer",this._resourceId=d.uid("resource"),this._touched=0,this._updateID=1,this._dataInt32=null,this.shrinkToFit=!0,this.destroyed=!1,e instanceof Array&&(e=new Float32Array(e)),this._data=e,r??(r=e?.byteLength);const a=!!e;this.descriptor={size:r,usage:i,mappedAtCreation:a,label:s},this.shrinkToFit=o??!0}get data(){return this._data}set data(t){this.setDataWithSize(t,t.length,!0)}get dataInt32(){return this._dataInt32||(this._dataInt32=new Int32Array(this.data.buffer)),this._dataInt32}get static(){return!!(this.descriptor.usage&E.STATIC)}set static(t){t?this.descriptor.usage|=E.STATIC:this.descriptor.usage&=~E.STATIC}setDataWithSize(t,e,r){if(this._updateID++,this._updateSize=e*t.BYTES_PER_ELEMENT,this._data===t){r&&this.emit("update",this);return}const i=this._data;if(this._data=t,this._dataInt32=null,!i||i.length!==t.length){!this.shrinkToFit&&i&&t.byteLength<i.byteLength?r&&this.emit("update",this):(this.descriptor.size=t.byteLength,this._resourceId=d.uid("resource"),this.emit("change",this));return}r&&this.emit("update",this)}update(t){this._updateSize=t??this._updateSize,this._updateID++,this.emit("update",this)}destroy(){this.destroyed=!0,this.emit("destroy",this),this.emit("change",this),this._data=null,this.descriptor=null,this.removeAllListeners()}}function Wr(n,t){if(!(n instanceof H)){let e=t?E.INDEX:E.VERTEX;n instanceof Array&&(t?(n=new Uint32Array(n),e=E.INDEX|E.COPY_DST):(n=new Float32Array(n),e=E.VERTEX|E.COPY_DST)),n=new H({data:n,label:t?"index-mesh-buffer":"vertex-mesh-buffer",usage:e})}return n}function fn(n,t,e){const r=n.getAttribute(t);if(!r)return e.minX=0,e.minY=0,e.maxX=0,e.maxY=0,e;const i=r.buffer.data;let s=1/0,o=1/0,a=-1/0,l=-1/0;const c=i.BYTES_PER_ELEMENT,h=(r.offset||0)/c,u=(r.stride||2*4)/c;for(let p=h;p<i.length;p+=u){const f=i[p],g=i[p+1];f>a&&(a=f),g>l&&(l=g),f<s&&(s=f),g<o&&(o=g)}return e.minX=s,e.minY=o,e.maxX=a,e.maxY=l,e}function pn(n){return(n instanceof H||Array.isArray(n)||n.BYTES_PER_ELEMENT)&&(n={buffer:n}),n.buffer=Wr(n.buffer,!1),n}class Lt extends d.EventEmitter{constructor(t={}){super(),this.uid=d.uid("geometry"),this._layoutKey=0,this.instanceCount=1,this._bounds=new d.Bounds,this._boundsDirty=!0;const{attributes:e,indexBuffer:r,topology:i}=t;if(this.buffers=[],this.attributes={},e)for(const s in e)this.addAttribute(s,e[s]);this.instanceCount=t.instanceCount??1,r&&this.addIndex(r),this.topology=i||"triangle-list"}onBufferUpdate(){this._boundsDirty=!0,this.emit("update",this)}getAttribute(t){return this.attributes[t]}getIndex(){return this.indexBuffer}getBuffer(t){return this.getAttribute(t).buffer}getSize(){for(const t in this.attributes){const e=this.attributes[t];return e.buffer.data.length/(e.stride/4||e.size)}return 0}addAttribute(t,e){const r=pn(e);this.buffers.indexOf(r.buffer)===-1&&(this.buffers.push(r.buffer),r.buffer.on("update",this.onBufferUpdate,this),r.buffer.on("change",this.onBufferUpdate,this)),this.attributes[t]=r}addIndex(t){this.indexBuffer=Wr(t,!0),this.buffers.push(this.indexBuffer)}get bounds(){return this._boundsDirty?(this._boundsDirty=!1,fn(this,"aPosition",this._bounds)):this._bounds}destroy(t=!1){this.emit("destroy",this),this.removeAllListeners(),t&&this.buffers.forEach(e=>e.destroy()),this.attributes=null,this.buffers=null,this.indexBuffer=null,this._bounds=null}}const gn=new Float32Array(1),mn=new Uint32Array(1);class xn extends Lt{constructor(){const e=new H({data:gn,label:"attribute-batch-buffer",usage:E.VERTEX|E.COPY_DST,shrinkToFit:!1}),r=new H({data:mn,label:"index-batch-buffer",usage:E.INDEX|E.COPY_DST,shrinkToFit:!1}),i=6*4;super({attributes:{aPosition:{buffer:e,format:"float32x2",stride:i,offset:0},aUV:{buffer:e,format:"float32x2",stride:i,offset:2*4},aColor:{buffer:e,format:"unorm8x4",stride:i,offset:4*4},aTextureIdAndRound:{buffer:e,format:"uint16x2",stride:i,offset:5*4}},indexBuffer:r})}}function Ke(n,t,e){if(n)for(const r in n){const i=r.toLocaleLowerCase(),s=t[i];if(s){let o=n[r];r==="header"&&(o=o.replace(/@in\s+[^;]+;\s*/g,"").replace(/@out\s+[^;]+;\s*/g,"")),e&&s.push(`//----${e}----//`),s.push(o)}else d.warn(`${r} placement hook does not exist in shader`)}}const _n=/\{\{(.*?)\}\}/g;function Qe(n){const t={};return(n.match(_n)?.map(r=>r.replace(/[{()}]/g,""))??[]).forEach(r=>{t[r]=[]}),t}function Ze(n,t){let e;const r=/@in\s+([^;]+);/g;for(;(e=r.exec(n))!==null;)t.push(e[1])}function Je(n,t,e=!1){const r=[];Ze(t,r),n.forEach(a=>{a.header&&Ze(a.header,r)});const i=r;e&&i.sort();const s=i.map((a,l)=>`       @location(${l}) ${a},`).join(`
`);let o=t.replace(/@in\s+[^;]+;\s*/g,"");return o=o.replace("{{in}}",`
${s}
`),o}function tr(n,t){let e;const r=/@out\s+([^;]+);/g;for(;(e=r.exec(n))!==null;)t.push(e[1])}function yn(n){const e=/\b(\w+)\s*:/g.exec(n);return e?e[1]:""}function bn(n){const t=/@.*?\s+/g;return n.replace(t,"")}function Sn(n,t){const e=[];tr(t,e),n.forEach(l=>{l.header&&tr(l.header,e)});let r=0;const i=e.sort().map(l=>l.indexOf("builtin")>-1?l:`@location(${r++}) ${l}`).join(`,
`),s=e.sort().map(l=>`       var ${bn(l)};`).join(`
`),o=`return VSOutput(
            ${e.sort().map(l=>` ${yn(l)}`).join(`,
`)});`;let a=t.replace(/@out\s+[^;]+;\s*/g,"");return a=a.replace("{{struct}}",`
${i}
`),a=a.replace("{{start}}",`
${s}
`),a=a.replace("{{return}}",`
${o}
`),a}function er(n,t){let e=n;for(const r in t){const i=t[r];i.join(`
`).length?e=e.replace(`{{${r}}}`,`//-----${r} START-----//
${i.join(`
`)}
//----${r} FINISH----//`):e=e.replace(`{{${r}}}`,"")}return e}const O=Object.create(null),ie=new Map;let Tn=0;function vn({template:n,bits:t}){const e=Lr(n,t);if(O[e])return O[e];const{vertex:r,fragment:i}=Pn(n,t);return O[e]=Hr(r,i,t),O[e]}function wn({template:n,bits:t}){const e=Lr(n,t);return O[e]||(O[e]=Hr(n.vertex,n.fragment,t)),O[e]}function Pn(n,t){const e=t.map(o=>o.vertex).filter(o=>!!o),r=t.map(o=>o.fragment).filter(o=>!!o);let i=Je(e,n.vertex,!0);i=Sn(e,i);const s=Je(r,n.fragment,!0);return{vertex:i,fragment:s}}function Lr(n,t){return t.map(e=>(ie.has(e)||ie.set(e,Tn++),ie.get(e))).sort((e,r)=>e-r).join("-")+n.vertex+n.fragment}function Hr(n,t,e){const r=Qe(n),i=Qe(t);return e.forEach(s=>{Ke(s.vertex,r,s.name),Ke(s.fragment,i,s.name)}),{vertex:er(n,r),fragment:er(t,i)}}const Cn=`
    @in aPosition: vec2<f32>;
    @in aUV: vec2<f32>;

    @out @builtin(position) vPosition: vec4<f32>;
    @out vUV : vec2<f32>;
    @out vColor : vec4<f32>;

    {{header}}

    struct VSOutput {
        {{struct}}
    };

    @vertex
    fn main( {{in}} ) -> VSOutput {

        var worldTransformMatrix = globalUniforms.uWorldTransformMatrix;
        var modelMatrix = mat3x3<f32>(
            1.0, 0.0, 0.0,
            0.0, 1.0, 0.0,
            0.0, 0.0, 1.0
          );
        var position = aPosition;
        var uv = aUV;

        {{start}}
        
        vColor = vec4<f32>(1., 1., 1., 1.);

        {{main}}

        vUV = uv;

        var modelViewProjectionMatrix = globalUniforms.uProjectionMatrix * worldTransformMatrix * modelMatrix;

        vPosition =  vec4<f32>((modelViewProjectionMatrix *  vec3<f32>(position, 1.0)).xy, 0.0, 1.0);
       
        vColor *= globalUniforms.uWorldColorAlpha;

        {{end}}

        {{return}}
    };
`,Mn=`
    @in vUV : vec2<f32>;
    @in vColor : vec4<f32>;
   
    {{header}}

    @fragment
    fn main(
        {{in}}
      ) -> @location(0) vec4<f32> {
        
        {{start}}

        var outColor:vec4<f32>;
      
        {{main}}
        
        var finalColor:vec4<f32> = outColor * vColor;

        {{end}}

        return finalColor;
      };
`,Bn=`
    in vec2 aPosition;
    in vec2 aUV;

    out vec4 vColor;
    out vec2 vUV;

    {{header}}

    void main(void){

        mat3 worldTransformMatrix = uWorldTransformMatrix;
        mat3 modelMatrix = mat3(
            1.0, 0.0, 0.0,
            0.0, 1.0, 0.0,
            0.0, 0.0, 1.0
          );
        vec2 position = aPosition;
        vec2 uv = aUV;
        
        {{start}}
        
        vColor = vec4(1.);
        
        {{main}}
        
        vUV = uv;
        
        mat3 modelViewProjectionMatrix = uProjectionMatrix * worldTransformMatrix * modelMatrix;

        gl_Position = vec4((modelViewProjectionMatrix * vec3(position, 1.0)).xy, 0.0, 1.0);

        vColor *= uWorldColorAlpha;

        {{end}}
    }
`,kn=`
   
    in vec4 vColor;
    in vec2 vUV;

    out vec4 finalColor;

    {{header}}

    void main(void) {
        
        {{start}}

        vec4 outColor;
      
        {{main}}
        
        finalColor = outColor * vColor;
        
        {{end}}
    }
`,Rn={name:"global-uniforms-bit",vertex:{header:`
        struct GlobalUniforms {
            uProjectionMatrix:mat3x3<f32>,
            uWorldTransformMatrix:mat3x3<f32>,
            uWorldColorAlpha: vec4<f32>,
            uResolution: vec2<f32>,
        }

        @group(0) @binding(0) var<uniform> globalUniforms : GlobalUniforms;
        `}},An={name:"global-uniforms-bit",vertex:{header:`
          uniform mat3 uProjectionMatrix;
          uniform mat3 uWorldTransformMatrix;
          uniform vec4 uWorldColorAlpha;
          uniform vec2 uResolution;
        `}};function Ce({bits:n,name:t}){const e=vn({template:{fragment:Mn,vertex:Cn},bits:[Rn,...n]});return bt.from({name:t,vertex:{source:e.vertex,entryPoint:"main"},fragment:{source:e.fragment,entryPoint:"main"}})}function Me({bits:n,name:t}){return new Se({name:t,...wn({template:{vertex:Bn,fragment:kn},bits:[An,...n]})})}const Vr={name:"color-bit",vertex:{header:`
            @in aColor: vec4<f32>;
        `,main:`
            vColor *= vec4<f32>(aColor.rgb * aColor.a, aColor.a);
        `}},$r={name:"color-bit",vertex:{header:`
            in vec4 aColor;
        `,main:`
            vColor *= vec4(aColor.rgb * aColor.a, aColor.a);
        `}},ne={};function Fn(n){const t=[];if(n===1)t.push("@group(1) @binding(0) var textureSource1: texture_2d<f32>;"),t.push("@group(1) @binding(1) var textureSampler1: sampler;");else{let e=0;for(let r=0;r<n;r++)t.push(`@group(1) @binding(${e++}) var textureSource${r+1}: texture_2d<f32>;`),t.push(`@group(1) @binding(${e++}) var textureSampler${r+1}: sampler;`)}return t.join(`
`)}function zn(n){const t=[];if(n===1)t.push("outColor = textureSampleGrad(textureSource1, textureSampler1, vUV, uvDx, uvDy);");else{t.push("switch vTextureId {");for(let e=0;e<n;e++)e===n-1?t.push("  default:{"):t.push(`  case ${e}:{`),t.push(`      outColor = textureSampleGrad(textureSource${e+1}, textureSampler${e+1}, vUV, uvDx, uvDy);`),t.push("      break;}");t.push("}")}return t.join(`
`)}function Or(n){return ne[n]||(ne[n]={name:"texture-batch-bit",vertex:{header:`
                @in aTextureIdAndRound: vec2<u32>;
                @out @interpolate(flat) vTextureId : u32;
            `,main:`
                vTextureId = aTextureIdAndRound.y;
            `,end:`
                if(aTextureIdAndRound.x == 1)
                {
                    vPosition = vec4<f32>(roundPixels(vPosition.xy, globalUniforms.uResolution), vPosition.zw);
                }
            `},fragment:{header:`
                @in @interpolate(flat) vTextureId: u32;

                ${Fn(n)}
            `,main:`
                var uvDx = dpdx(vUV);
                var uvDy = dpdy(vUV);

                ${zn(n)}
            `}}),ne[n]}const se={};function En(n){const t=[];for(let e=0;e<n;e++)e>0&&t.push("else"),e<n-1&&t.push(`if(vTextureId < ${e}.5)`),t.push("{"),t.push(`	outColor = texture(uTextures[${e}], vUV);`),t.push("}");return t.join(`
`)}function Nr(n){return se[n]||(se[n]={name:"texture-batch-bit",vertex:{header:`
                in vec2 aTextureIdAndRound;
                out float vTextureId;

            `,main:`
                vTextureId = aTextureIdAndRound.y;
            `,end:`
                if(aTextureIdAndRound.x == 1.)
                {
                    gl_Position.xy = roundPixels(gl_Position.xy, uResolution);
                }
            `},fragment:{header:`
                in float vTextureId;

                uniform sampler2D uTextures[${n}];

            `,main:`

                ${En(n)}
            `}}),se[n]}const Be={name:"round-pixels-bit",vertex:{header:`
            fn roundPixels(position: vec2<f32>, targetSize: vec2<f32>) -> vec2<f32> 
            {
                return (floor(((position * 0.5 + 0.5) * targetSize) + 0.5) / targetSize) * 2.0 - 1.0;
            }
        `}},ke={name:"round-pixels-bit",vertex:{header:`   
            vec2 roundPixels(vec2 position, vec2 targetSize)
            {       
                return (floor(((position * 0.5 + 0.5) * targetSize) + 0.5) / targetSize) * 2.0 - 1.0;
            }
        `}},rr={};function jr(n){let t=rr[n];if(t)return t;const e=new Int32Array(n);for(let r=0;r<n;r++)e[r]=r;return t=rr[n]=new N({uTextures:{value:e,type:"i32",size:n}},{isStatic:!0}),t}class In extends ot{constructor(t){const e=Me({name:"batch",bits:[$r,Nr(t),ke]}),r=Ce({name:"batch",bits:[Vr,Or(t),Be]});super({glProgram:e,gpuProgram:r,resources:{batchSamplers:jr(t)}})}}let ir=null;const Yr=class qr extends dn{constructor(){super(...arguments),this.geometry=new xn,this.shader=ir||(ir=new In(this.maxTextures)),this.name=qr.extension.name,this.vertexSize=6}packAttributes(t,e,r,i,s){const o=s<<16|t.roundPixels&65535,a=t.transform,l=a.a,c=a.b,h=a.c,u=a.d,p=a.tx,f=a.ty,{positions:g,uvs:x}=t,m=t.color,_=t.attributeOffset,y=_+t.attributeSize;for(let v=_;v<y;v++){const b=v*2,w=g[b],S=g[b+1];e[i++]=l*w+h*S+p,e[i++]=u*S+c*w+f,e[i++]=x[b],e[i++]=x[b+1],r[i++]=m,r[i++]=o}}packQuadAttributes(t,e,r,i,s){const o=t.texture,a=t.transform,l=a.a,c=a.b,h=a.c,u=a.d,p=a.tx,f=a.ty,g=t.bounds,x=g.maxX,m=g.minX,_=g.maxY,y=g.minY,v=o.uvs,b=t.color,w=s<<16|t.roundPixels&65535;e[i+0]=l*m+h*y+p,e[i+1]=u*y+c*m+f,e[i+2]=v.x0,e[i+3]=v.y0,r[i+4]=b,r[i+5]=w,e[i+6]=l*x+h*y+p,e[i+7]=u*y+c*x+f,e[i+8]=v.x1,e[i+9]=v.y1,r[i+10]=b,r[i+11]=w,e[i+12]=l*x+h*_+p,e[i+13]=u*_+c*x+f,e[i+14]=v.x2,e[i+15]=v.y2,r[i+16]=b,r[i+17]=w,e[i+18]=l*m+h*_+p,e[i+19]=u*_+c*m+f,e[i+20]=v.x3,e[i+21]=v.y3,r[i+22]=b,r[i+23]=w}};Yr.extension={type:[d.ExtensionType.Batcher],name:"default"};let Gn=Yr;function Un(n,t,e,r,i,s,o,a=null){let l=0;e*=t,i*=s;const c=a.a,h=a.b,u=a.c,p=a.d,f=a.tx,g=a.ty;for(;l<o;){const x=n[e],m=n[e+1];r[i]=c*x+u*m+f,r[i+1]=h*x+p*m+g,i+=s,e+=t,l++}}function Dn(n,t,e,r){let i=0;for(t*=e;i<r;)n[t]=0,n[t+1]=0,t+=e,i++}function Xr(n,t,e,r,i){const s=t.a,o=t.b,a=t.c,l=t.d,c=t.tx,h=t.ty;e||(e=0),r||(r=2),i||(i=n.length/r-e);let u=e*r;for(let p=0;p<i;p++){const f=n[u],g=n[u+1];n[u]=s*f+a*g+c,n[u+1]=o*f+l*g+h,u+=r}}const Wn=new d.Matrix;class Re{constructor(){this.packAsQuad=!1,this.batcherName="default",this.topology="triangle-list",this.applyTransform=!0,this.roundPixels=0,this._batcher=null,this._batch=null}get uvs(){return this.geometryData.uvs}get positions(){return this.geometryData.vertices}get indices(){return this.geometryData.indices}get blendMode(){return this.applyTransform?this.renderable.groupBlendMode:"normal"}get color(){const t=this.baseColor,e=t>>16|t&65280|(t&255)<<16,r=this.renderable;return r?d.multiplyHexColors(e,r.groupColor)+(this.alpha*r.groupAlpha*255<<24):e+(this.alpha*255<<24)}get transform(){return this.renderable?.groupTransform||Wn}copyTo(t){t.indexOffset=this.indexOffset,t.indexSize=this.indexSize,t.attributeOffset=this.attributeOffset,t.attributeSize=this.attributeSize,t.baseColor=this.baseColor,t.alpha=this.alpha,t.texture=this.texture,t.geometryData=this.geometryData,t.topology=this.topology}reset(){this.applyTransform=!0,this.renderable=null,this.topology="triangle-list"}}const yt={extension:{type:d.ExtensionType.ShapeBuilder,name:"circle"},build(n,t){let e,r,i,s,o,a;if(n.type==="circle"){const b=n;e=b.x,r=b.y,o=a=b.radius,i=s=0}else if(n.type==="ellipse"){const b=n;e=b.x,r=b.y,o=b.halfWidth,a=b.halfHeight,i=s=0}else{const b=n,w=b.width/2,S=b.height/2;e=b.x+w,r=b.y+S,o=a=Math.max(0,Math.min(b.radius,Math.min(w,S))),i=w-o,s=S-a}if(!(o>=0&&a>=0&&i>=0&&s>=0))return t;const l=Math.ceil(2.3*Math.sqrt(o+a)),c=l*8+(i?4:0)+(s?4:0);if(c===0)return t;if(l===0)return t[0]=t[6]=e+i,t[1]=t[3]=r+s,t[2]=t[4]=e-i,t[5]=t[7]=r-s,t;let h=0,u=l*4+(i?2:0)+2,p=u,f=c,g=i+o,x=s,m=e+g,_=e-g,y=r+x;if(t[h++]=m,t[h++]=y,t[--u]=y,t[--u]=_,s){const b=r-x;t[p++]=_,t[p++]=b,t[--f]=b,t[--f]=m}for(let b=1;b<l;b++){const w=Math.PI/2*(b/l),S=i+Math.cos(w)*o,T=s+Math.sin(w)*a,P=e+S,A=e-S,C=r+T,M=r-T;t[h++]=P,t[h++]=C,t[--u]=C,t[--u]=A,t[p++]=A,t[p++]=M,t[--f]=M,t[--f]=P}g=i,x=s+a,m=e+g,_=e-g,y=r+x;const v=r-x;return t[h++]=m,t[h++]=y,t[--f]=v,t[--f]=m,i&&(t[h++]=_,t[h++]=y,t[--f]=v,t[--f]=_),t},triangulate(n,t,e,r,i,s){if(n.length===0)return;let o=0,a=0;for(let h=0;h<n.length;h+=2)o+=n[h],a+=n[h+1];o/=n.length/2,a/=n.length/2;let l=r;t[l*e]=o,t[l*e+1]=a;const c=l++;for(let h=0;h<n.length;h+=2)t[l*e]=n[h],t[l*e+1]=n[h+1],h>0&&(i[s++]=l,i[s++]=c,i[s++]=l-1),l++;i[s++]=c+1,i[s++]=c,i[s++]=l-1}},Ln={...yt,extension:{...yt.extension,name:"ellipse"}},Hn={...yt,extension:{...yt.extension,name:"roundedRectangle"}},Kr=1e-4,nr=1e-4;function Vn(n){const t=n.length;if(t<6)return 1;let e=0;for(let r=0,i=n[t-2],s=n[t-1];r<t;r+=2){const o=n[r],a=n[r+1];e+=(o-i)*(a+s),i=o,s=a}return e<0?-1:1}function sr(n,t,e,r,i,s,o,a){const l=n-e*i,c=t-r*i,h=n+e*s,u=t+r*s;let p,f;o?(p=r,f=-e):(p=-r,f=e);const g=l+p,x=c+f,m=h+p,_=u+f;return a.push(g,x),a.push(m,_),2}function Q(n,t,e,r,i,s,o,a){const l=e-n,c=r-t;let h=Math.atan2(l,c),u=Math.atan2(i-n,s-t);a&&h<u?h+=Math.PI*2:!a&&h>u&&(u+=Math.PI*2);let p=h;const f=u-h,g=Math.abs(f),x=Math.sqrt(l*l+c*c),m=(15*g*Math.sqrt(x)/Math.PI>>0)+1,_=f/m;if(p+=_,a){o.push(n,t),o.push(e,r);for(let y=1,v=p;y<m;y++,v+=_)o.push(n,t),o.push(n+Math.sin(v)*x,t+Math.cos(v)*x);o.push(n,t),o.push(i,s)}else{o.push(e,r),o.push(n,t);for(let y=1,v=p;y<m;y++,v+=_)o.push(n+Math.sin(v)*x,t+Math.cos(v)*x),o.push(n,t);o.push(i,s),o.push(n,t)}return m*2}function $n(n,t,e,r,i,s){const o=Kr;if(n.length===0)return;const a=t;let l=a.alignment;if(t.alignment!==.5){let z=Vn(n);l=(l-.5)*z+.5}const c=new d.Point(n[0],n[1]),h=new d.Point(n[n.length-2],n[n.length-1]),u=r,p=Math.abs(c.x-h.x)<o&&Math.abs(c.y-h.y)<o;if(u){n=n.slice(),p&&(n.pop(),n.pop(),h.set(n[n.length-2],n[n.length-1]));const z=(c.x+h.x)*.5,V=(h.y+c.y)*.5;n.unshift(z,V),n.push(z,V)}const f=i,g=n.length/2;let x=n.length;const m=f.length/2,_=a.width/2,y=_*_,v=a.miterLimit*a.miterLimit;let b=n[0],w=n[1],S=n[2],T=n[3],P=0,A=0,C=-(w-T),M=b-S,F=0,I=0,U=Math.sqrt(C*C+M*M);C/=U,M/=U,C*=_,M*=_;const at=l,k=(1-at)*2,R=at*2;u||(a.cap==="round"?x+=Q(b-C*(k-R)*.5,w-M*(k-R)*.5,b-C*k,w-M*k,b+C*R,w+M*R,f,!0)+2:a.cap==="square"&&(x+=sr(b,w,C,M,k,R,!0,f))),f.push(b-C*k,w-M*k),f.push(b+C*R,w+M*R);for(let z=1;z<g-1;++z){b=n[(z-1)*2],w=n[(z-1)*2+1],S=n[z*2],T=n[z*2+1],P=n[(z+1)*2],A=n[(z+1)*2+1],C=-(w-T),M=b-S,U=Math.sqrt(C*C+M*M),C/=U,M/=U,C*=_,M*=_,F=-(T-A),I=S-P,U=Math.sqrt(F*F+I*I),F/=U,I/=U,F*=_,I*=_;const V=S-b,lt=w-T,ht=S-P,ct=A-T,We=V*ht+lt*ct,St=lt*ht-ct*V,ut=St<0;if(Math.abs(St)<.001*Math.abs(We)){f.push(S-C*k,T-M*k),f.push(S+C*R,T+M*R),We>=0&&(a.join==="round"?x+=Q(S,T,S-C*k,T-M*k,S-F*k,T-I*k,f,!1)+4:x+=2,f.push(S-F*R,T-I*R),f.push(S+F*k,T+I*k));continue}const Le=(-C+b)*(-M+T)-(-C+S)*(-M+w),He=(-F+P)*(-I+T)-(-F+S)*(-I+A),Tt=(V*He-ht*Le)/St,vt=(ct*Le-lt*He)/St,$t=(Tt-S)*(Tt-S)+(vt-T)*(vt-T),Y=S+(Tt-S)*k,q=T+(vt-T)*k,X=S-(Tt-S)*R,K=T-(vt-T)*R,zi=Math.min(V*V+lt*lt,ht*ht+ct*ct),Ve=ut?k:R,Ei=zi+Ve*Ve*y;$t<=Ei?a.join==="bevel"||$t/y>v?(ut?(f.push(Y,q),f.push(S+C*R,T+M*R),f.push(Y,q),f.push(S+F*R,T+I*R)):(f.push(S-C*k,T-M*k),f.push(X,K),f.push(S-F*k,T-I*k),f.push(X,K)),x+=2):a.join==="round"?ut?(f.push(Y,q),f.push(S+C*R,T+M*R),x+=Q(S,T,S+C*R,T+M*R,S+F*R,T+I*R,f,!0)+4,f.push(Y,q),f.push(S+F*R,T+I*R)):(f.push(S-C*k,T-M*k),f.push(X,K),x+=Q(S,T,S-C*k,T-M*k,S-F*k,T-I*k,f,!1)+4,f.push(S-F*k,T-I*k),f.push(X,K)):(f.push(Y,q),f.push(X,K)):(f.push(S-C*k,T-M*k),f.push(S+C*R,T+M*R),a.join==="round"?ut?x+=Q(S,T,S+C*R,T+M*R,S+F*R,T+I*R,f,!0)+2:x+=Q(S,T,S-C*k,T-M*k,S-F*k,T-I*k,f,!1)+2:a.join==="miter"&&$t/y<=v&&(ut?(f.push(X,K),f.push(X,K)):(f.push(Y,q),f.push(Y,q)),x+=2),f.push(S-F*k,T-I*k),f.push(S+F*R,T+I*R),x+=2)}b=n[(g-2)*2],w=n[(g-2)*2+1],S=n[(g-1)*2],T=n[(g-1)*2+1],C=-(w-T),M=b-S,U=Math.sqrt(C*C+M*M),C/=U,M/=U,C*=_,M*=_,f.push(S-C*k,T-M*k),f.push(S+C*R,T+M*R),u||(a.cap==="round"?x+=Q(S-C*(k-R)*.5,T-M*(k-R)*.5,S-C*k,T-M*k,S+C*R,T+M*R,f,!1)+2:a.cap==="square"&&(x+=sr(S,T,C,M,k,R,!1,f)));const Fi=nr*nr;for(let z=m;z<x+m-2;++z)b=f[z*2],w=f[z*2+1],S=f[(z+1)*2],T=f[(z+1)*2+1],P=f[(z+2)*2],A=f[(z+2)*2+1],!(Math.abs(b*(T-A)+S*(A-w)+P*(w-T))<Fi)&&s.push(z,z+1,z+2)}function On(n,t,e,r){const i=Kr;if(n.length===0)return;const s=n[0],o=n[1],a=n[n.length-2],l=n[n.length-1],c=t||Math.abs(s-a)<i&&Math.abs(o-l)<i,h=e,u=n.length/2,p=h.length/2;for(let f=0;f<u;f++)h.push(n[f*2]),h.push(n[f*2+1]);for(let f=0;f<u-1;f++)r.push(p+f,p+f+1);c&&r.push(p+u-1,p)}function Qr(n,t,e,r,i,s,o){const a=d.earcut(n,t,2);if(!a)return;for(let c=0;c<a.length;c+=3)s[o++]=a[c]+i,s[o++]=a[c+1]+i,s[o++]=a[c+2]+i;let l=i*r;for(let c=0;c<n.length;c+=2)e[l]=n[c],e[l+1]=n[c+1],l+=r}const Nn=[],jn={extension:{type:d.ExtensionType.ShapeBuilder,name:"polygon"},build(n,t){for(let e=0;e<n.points.length;e++)t[e]=n.points[e];return t},triangulate(n,t,e,r,i,s){Qr(n,Nn,t,e,r,i,s)}},Yn={extension:{type:d.ExtensionType.ShapeBuilder,name:"rectangle"},build(n,t){const e=n,r=e.x,i=e.y,s=e.width,o=e.height;return s>=0&&o>=0&&(t[0]=r,t[1]=i,t[2]=r+s,t[3]=i,t[4]=r+s,t[5]=i+o,t[6]=r,t[7]=i+o),t},triangulate(n,t,e,r,i,s){let o=0;r*=e,t[r+o]=n[0],t[r+o+1]=n[1],o+=e,t[r+o]=n[2],t[r+o+1]=n[3],o+=e,t[r+o]=n[6],t[r+o+1]=n[7],o+=e,t[r+o]=n[4],t[r+o+1]=n[5],o+=e;const a=r/e;i[s++]=a,i[s++]=a+1,i[s++]=a+2,i[s++]=a+1,i[s++]=a+3,i[s++]=a+2}},qn={extension:{type:d.ExtensionType.ShapeBuilder,name:"triangle"},build(n,t){return t[0]=n.x,t[1]=n.y,t[2]=n.x2,t[3]=n.y2,t[4]=n.x3,t[5]=n.y3,t},triangulate(n,t,e,r,i,s){let o=0;r*=e,t[r+o]=n[0],t[r+o+1]=n[1],o+=e,t[r+o]=n[2],t[r+o+1]=n[3],o+=e,t[r+o]=n[4],t[r+o+1]=n[5];const a=r/e;i[s++]=a,i[s++]=a+1,i[s++]=a+2}},Ht={};d.extensions.handleByMap(d.ExtensionType.ShapeBuilder,Ht);d.extensions.add(Yn,jn,qn,yt,Ln,Hn);const Xn=new d.Rectangle;function Kn(n,t){const{geometryData:e,batches:r}=t;r.length=0,e.indices.length=0,e.vertices.length=0,e.uvs.length=0;for(let i=0;i<n.instructions.length;i++){const s=n.instructions[i];if(s.action==="texture")Qn(s.data,r,e);else if(s.action==="fill"||s.action==="stroke"){const o=s.action==="stroke",a=s.data.path.shapePath,l=s.data.style,c=s.data.hole;o&&c&&or(c.shapePath,l,null,!0,r,e),or(a,l,c,o,r,e)}}}function Qn(n,t,e){const{vertices:r,uvs:i,indices:s}=e,o=s.length,a=r.length/2,l=[],c=Ht.rectangle,h=Xn,u=n.image;h.x=n.dx,h.y=n.dy,h.width=n.dw,h.height=n.dh;const p=n.transform;c.build(h,l),p&&Xr(l,p),c.triangulate(l,r,2,a,s,o);const f=u.uvs;i.push(f.x0,f.y0,f.x1,f.y1,f.x3,f.y3,f.x2,f.y2);const g=d.BigPool.get(Re);g.indexOffset=o,g.indexSize=s.length-o,g.attributeOffset=a,g.attributeSize=r.length/2-a,g.baseColor=n.style,g.alpha=n.alpha,g.texture=u,g.geometryData=e,t.push(g)}function or(n,t,e,r,i,s){const{vertices:o,uvs:a,indices:l}=s,c=n.shapePrimitives.length-1;n.shapePrimitives.forEach(({shape:h,transform:u},p)=>{const f=l.length,g=o.length/2,x=[],m=Ht[h.type];let _="triangle-list";if(m.build(h,x),u&&Xr(x,u),r){const w=h.closePath??!0,S=t;S.pixelLine?(On(x,w,o,l),_="line-list"):$n(x,S,!1,w,o,l)}else if(e&&c===p){c!==0&&console.warn("[Pixi Graphics] only the last shape have be cut out");const w=[],S=x.slice();Zn(e.shapePath).forEach(P=>{w.push(S.length/2),S.push(...P)}),Qr(S,w,o,2,g,l,f)}else m.triangulate(x,o,2,g,l,f);const y=a.length/2,v=t.texture;if(v!==d.Texture.WHITE){const w=t.matrix;w&&(u&&w.append(u.clone().invert()),Un(o,2,g,a,y,2,o.length/2-g,w))}else Dn(a,y,2,o.length/2-g);const b=d.BigPool.get(Re);b.indexOffset=f,b.indexSize=l.length-f,b.attributeOffset=g,b.attributeSize=o.length/2-g,b.baseColor=t.color,b.alpha=t.alpha,b.texture=v,b.geometryData=s,b.topology=_,i.push(b)})}function Zn(n){if(!n)return[];const t=n.shapePrimitives,e=[];for(let r=0;r<t.length;r++){const i=t[r].shape,s=[];Ht[i.type].build(i,s),e.push(s)}return e}class Jn{constructor(){this.batches=[],this.geometryData={vertices:[],uvs:[],indices:[]}}}class ts{constructor(){this.batcher=new Gn,this.instructions=new d.InstructionSet}init(){this.instructions.reset()}get geometry(){return d.deprecation(d.v8_3_4,"GraphicsContextRenderData#geometry is deprecated, please use batcher.geometry instead."),this.batcher.geometry}}const Ae=class xe{constructor(t){this._gpuContextHash={},this._graphicsDataContextHash=Object.create(null),t.renderableGC.addManagedHash(this,"_gpuContextHash"),t.renderableGC.addManagedHash(this,"_graphicsDataContextHash")}init(t){xe.defaultOptions.bezierSmoothness=t?.bezierSmoothness??xe.defaultOptions.bezierSmoothness}getContextRenderData(t){return this._graphicsDataContextHash[t.uid]||this._initContextRenderData(t)}updateGpuContext(t){let e=this._gpuContextHash[t.uid]||this._initContext(t);if(t.dirty){e?this._cleanGraphicsContextData(t):e=this._initContext(t),Kn(t,e);const r=t.batchMode;t.customShader||r==="no-batch"?e.isBatchable=!1:r==="auto"&&(e.isBatchable=e.geometryData.vertices.length<400),t.dirty=!1}return e}getGpuContext(t){return this._gpuContextHash[t.uid]||this._initContext(t)}_initContextRenderData(t){const e=d.BigPool.get(ts),{batches:r,geometryData:i}=this._gpuContextHash[t.uid],s=i.vertices.length,o=i.indices.length;for(let h=0;h<r.length;h++)r[h].applyTransform=!1;const a=e.batcher;a.ensureAttributeBuffer(s),a.ensureIndexBuffer(o),a.begin();for(let h=0;h<r.length;h++){const u=r[h];a.add(u)}a.finish(e.instructions);const l=a.geometry;l.indexBuffer.setDataWithSize(a.indexBuffer,a.indexSize,!0),l.buffers[0].setDataWithSize(a.attributeBuffer.float32View,a.attributeSize,!0);const c=a.batches;for(let h=0;h<c.length;h++){const u=c[h];u.bindGroup=an(u.textures.textures,u.textures.count)}return this._graphicsDataContextHash[t.uid]=e,e}_initContext(t){const e=new Jn;return e.context=t,this._gpuContextHash[t.uid]=e,t.on("destroy",this.onGraphicsContextDestroy,this),this._gpuContextHash[t.uid]}onGraphicsContextDestroy(t){this._cleanGraphicsContextData(t),t.off("destroy",this.onGraphicsContextDestroy,this),this._gpuContextHash[t.uid]=null}_cleanGraphicsContextData(t){const e=this._gpuContextHash[t.uid];e.isBatchable||this._graphicsDataContextHash[t.uid]&&(d.BigPool.return(this.getContextRenderData(t)),this._graphicsDataContextHash[t.uid]=null),e.batches&&e.batches.forEach(r=>{d.BigPool.return(r)})}destroy(){for(const t in this._gpuContextHash)this._gpuContextHash[t]&&this.onGraphicsContextDestroy(this._gpuContextHash[t].context)}};Ae.extension={type:[d.ExtensionType.WebGLSystem,d.ExtensionType.WebGPUSystem,d.ExtensionType.CanvasSystem],name:"graphicsContext"};Ae.defaultOptions={bezierSmoothness:.5};let Fe=Ae;const es=8,Mt=11920929e-14,rs=1;function Zr(n,t,e,r,i,s,o,a,l,c){const u=Math.min(.99,Math.max(0,c??Fe.defaultOptions.bezierSmoothness));let p=(rs-u)/1;return p*=p,is(t,e,r,i,s,o,a,l,n,p),n}function is(n,t,e,r,i,s,o,a,l,c){_e(n,t,e,r,i,s,o,a,l,c,0),l.push(o,a)}function _e(n,t,e,r,i,s,o,a,l,c,h){if(h>es)return;const u=(n+e)/2,p=(t+r)/2,f=(e+i)/2,g=(r+s)/2,x=(i+o)/2,m=(s+a)/2,_=(u+f)/2,y=(p+g)/2,v=(f+x)/2,b=(g+m)/2,w=(_+v)/2,S=(y+b)/2;if(h>0){let T=o-n,P=a-t;const A=Math.abs((e-o)*P-(r-a)*T),C=Math.abs((i-o)*P-(s-a)*T);if(A>Mt&&C>Mt){if((A+C)*(A+C)<=c*(T*T+P*P)){l.push(w,S);return}}else if(A>Mt){if(A*A<=c*(T*T+P*P)){l.push(w,S);return}}else if(C>Mt){if(C*C<=c*(T*T+P*P)){l.push(w,S);return}}else if(T=w-(n+o)/2,P=S-(t+a)/2,T*T+P*P<=c){l.push(w,S);return}}_e(n,t,u,p,_,y,w,S,l,c,h+1),_e(w,S,v,b,x,m,o,a,l,c,h+1)}const ns=8,ss=11920929e-14,os=1;function as(n,t,e,r,i,s,o,a){const c=Math.min(.99,Math.max(0,a??Fe.defaultOptions.bezierSmoothness));let h=(os-c)/1;return h*=h,ls(t,e,r,i,s,o,n,h),n}function ls(n,t,e,r,i,s,o,a){ye(o,n,t,e,r,i,s,a,0),o.push(i,s)}function ye(n,t,e,r,i,s,o,a,l){if(l>ns)return;const c=(t+r)/2,h=(e+i)/2,u=(r+s)/2,p=(i+o)/2,f=(c+u)/2,g=(h+p)/2;let x=s-t,m=o-e;const _=Math.abs((r-s)*m-(i-o)*x);if(_>ss){if(_*_<=a*(x*x+m*m)){n.push(f,g);return}}else if(x=f-(t+s)/2,m=g-(e+o)/2,x*x+m*m<=a){n.push(f,g);return}ye(n,t,e,c,h,f,g,a,l+1),ye(n,f,g,u,p,s,o,a,l+1)}function Jr(n,t,e,r,i,s,o,a){let l=Math.abs(i-s);(!o&&i>s||o&&s>i)&&(l=2*Math.PI-l),a||(a=Math.max(6,Math.floor(6*Math.pow(r,1/3)*(l/Math.PI)))),a=Math.max(a,3);let c=l/a,h=i;c*=o?-1:1;for(let u=0;u<a+1;u++){const p=Math.cos(h),f=Math.sin(h),g=t+p*r,x=e+f*r;n.push(g,x),h+=c}}function hs(n,t,e,r,i,s){const o=n[n.length-2],l=n[n.length-1]-e,c=o-t,h=i-e,u=r-t,p=Math.abs(l*u-c*h);if(p<1e-8||s===0){(n[n.length-2]!==t||n[n.length-1]!==e)&&n.push(t,e);return}const f=l*l+c*c,g=h*h+u*u,x=l*h+c*u,m=s*Math.sqrt(f)/p,_=s*Math.sqrt(g)/p,y=m*x/f,v=_*x/g,b=m*u+_*c,w=m*h+_*l,S=c*(_+y),T=l*(_+y),P=u*(m+v),A=h*(m+v),C=Math.atan2(T-w,S-b),M=Math.atan2(A-w,P-b);Jr(n,b+t,w+e,s,C,M,c*h>u*l)}const mt=Math.PI*2,oe={centerX:0,centerY:0,ang1:0,ang2:0},ae=({x:n,y:t},e,r,i,s,o,a,l)=>{n*=e,t*=r;const c=i*n-s*t,h=s*n+i*t;return l.x=c+o,l.y=h+a,l};function cs(n,t){const e=t===-1.5707963267948966?-.551915024494:1.3333333333333333*Math.tan(t/4),r=t===1.5707963267948966?.551915024494:e,i=Math.cos(n),s=Math.sin(n),o=Math.cos(n+t),a=Math.sin(n+t);return[{x:i-s*r,y:s+i*r},{x:o+a*r,y:a-o*r},{x:o,y:a}]}const ar=(n,t,e,r)=>{const i=n*r-t*e<0?-1:1;let s=n*e+t*r;return s>1&&(s=1),s<-1&&(s=-1),i*Math.acos(s)},us=(n,t,e,r,i,s,o,a,l,c,h,u,p)=>{const f=Math.pow(i,2),g=Math.pow(s,2),x=Math.pow(h,2),m=Math.pow(u,2);let _=f*g-f*m-g*x;_<0&&(_=0),_/=f*m+g*x,_=Math.sqrt(_)*(o===a?-1:1);const y=_*i/s*u,v=_*-s/i*h,b=c*y-l*v+(n+e)/2,w=l*y+c*v+(t+r)/2,S=(h-y)/i,T=(u-v)/s,P=(-h-y)/i,A=(-u-v)/s,C=ar(1,0,S,T);let M=ar(S,T,P,A);a===0&&M>0&&(M-=mt),a===1&&M<0&&(M+=mt),p.centerX=b,p.centerY=w,p.ang1=C,p.ang2=M};function ds(n,t,e,r,i,s,o,a=0,l=0,c=0){if(s===0||o===0)return;const h=Math.sin(a*mt/360),u=Math.cos(a*mt/360),p=u*(t-r)/2+h*(e-i)/2,f=-h*(t-r)/2+u*(e-i)/2;if(p===0&&f===0)return;s=Math.abs(s),o=Math.abs(o);const g=Math.pow(p,2)/Math.pow(s,2)+Math.pow(f,2)/Math.pow(o,2);g>1&&(s*=Math.sqrt(g),o*=Math.sqrt(g)),us(t,e,r,i,s,o,l,c,h,u,p,f,oe);let{ang1:x,ang2:m}=oe;const{centerX:_,centerY:y}=oe;let v=Math.abs(m)/(mt/4);Math.abs(1-v)<1e-7&&(v=1);const b=Math.max(Math.ceil(v),1);m/=b;let w=n[n.length-2],S=n[n.length-1];const T={x:0,y:0};for(let P=0;P<b;P++){const A=cs(x,m),{x:C,y:M}=ae(A[0],s,o,u,h,_,y,T),{x:F,y:I}=ae(A[1],s,o,u,h,_,y,T),{x:U,y:at}=ae(A[2],s,o,u,h,_,y,T);Zr(n,w,S,C,M,F,I,U,at),w=U,S=at,x+=m}}function fs(n,t,e){const r=(o,a)=>{const l=a.x-o.x,c=a.y-o.y,h=Math.sqrt(l*l+c*c),u=l/h,p=c/h;return{len:h,nx:u,ny:p}},i=(o,a)=>{o===0?n.moveTo(a.x,a.y):n.lineTo(a.x,a.y)};let s=t[t.length-1];for(let o=0;o<t.length;o++){const a=t[o%t.length],l=a.radius??e;if(l<=0){i(o,a),s=a;continue}const c=t[(o+1)%t.length],h=r(a,s),u=r(a,c);if(h.len<1e-4||u.len<1e-4){i(o,a),s=a;continue}let p=Math.asin(h.nx*u.ny-h.ny*u.nx),f=1,g=!1;h.nx*u.nx-h.ny*-u.ny<0?p<0?p=Math.PI+p:(p=Math.PI-p,f=-1,g=!0):p>0&&(f=-1,g=!0);const x=p/2;let m,_=Math.abs(Math.cos(x)*l/Math.sin(x));_>Math.min(h.len/2,u.len/2)?(_=Math.min(h.len/2,u.len/2),m=Math.abs(_*Math.sin(x)/Math.cos(x))):m=l;const y=a.x+u.nx*_+-u.ny*m*f,v=a.y+u.ny*_+u.nx*m*f,b=Math.atan2(h.ny,h.nx)+Math.PI/2*f,w=Math.atan2(u.ny,u.nx)-Math.PI/2*f;o===0&&n.moveTo(y+Math.cos(b)*m,v+Math.sin(b)*m),n.arc(y,v,m,b,w,g),s=a}}function ps(n,t,e,r){const i=(a,l)=>Math.sqrt((a.x-l.x)**2+(a.y-l.y)**2),s=(a,l,c)=>({x:a.x+(l.x-a.x)*c,y:a.y+(l.y-a.y)*c}),o=t.length;for(let a=0;a<o;a++){const l=t[(a+1)%o],c=l.radius??e;if(c<=0){a===0?n.moveTo(l.x,l.y):n.lineTo(l.x,l.y);continue}const h=t[a],u=t[(a+2)%o],p=i(h,l);let f;if(p<1e-4)f=l;else{const m=Math.min(p/2,c);f=s(l,h,m/p)}const g=i(u,l);let x;if(g<1e-4)x=l;else{const m=Math.min(g/2,c);x=s(l,u,m/g)}a===0?n.moveTo(f.x,f.y):n.lineTo(f.x,f.y),n.quadraticCurveTo(l.x,l.y,x.x,x.y,r)}}const gs=new d.Rectangle;class ms{constructor(t){this.shapePrimitives=[],this._currentPoly=null,this._bounds=new d.Bounds,this._graphicsPath2D=t}moveTo(t,e){return this.startPoly(t,e),this}lineTo(t,e){this._ensurePoly();const r=this._currentPoly.points,i=r[r.length-2],s=r[r.length-1];return(i!==t||s!==e)&&r.push(t,e),this}arc(t,e,r,i,s,o){this._ensurePoly(!1);const a=this._currentPoly.points;return Jr(a,t,e,r,i,s,o),this}arcTo(t,e,r,i,s){this._ensurePoly();const o=this._currentPoly.points;return hs(o,t,e,r,i,s),this}arcToSvg(t,e,r,i,s,o,a){const l=this._currentPoly.points;return ds(l,this._currentPoly.lastX,this._currentPoly.lastY,o,a,t,e,r,i,s),this}bezierCurveTo(t,e,r,i,s,o,a){this._ensurePoly();const l=this._currentPoly;return Zr(this._currentPoly.points,l.lastX,l.lastY,t,e,r,i,s,o,a),this}quadraticCurveTo(t,e,r,i,s){this._ensurePoly();const o=this._currentPoly;return as(this._currentPoly.points,o.lastX,o.lastY,t,e,r,i,s),this}closePath(){return this.endPoly(!0),this}addPath(t,e){this.endPoly(),e&&!e.isIdentity()&&(t=t.clone(!0),t.transform(e));for(let r=0;r<t.instructions.length;r++){const i=t.instructions[r];this[i.action](...i.data)}return this}finish(t=!1){this.endPoly(t)}rect(t,e,r,i,s){return this.drawShape(new d.Rectangle(t,e,r,i),s),this}circle(t,e,r,i){return this.drawShape(new Te(t,e,r),i),this}poly(t,e,r){const i=new gt(t);return i.closePath=e,this.drawShape(i,r),this}regularPoly(t,e,r,i,s=0,o){i=Math.max(i|0,3);const a=-1*Math.PI/2+s,l=Math.PI*2/i,c=[];for(let h=0;h<i;h++){const u=a-h*l;c.push(t+r*Math.cos(u),e+r*Math.sin(u))}return this.poly(c,!0,o),this}roundPoly(t,e,r,i,s,o=0,a){if(i=Math.max(i|0,3),s<=0)return this.regularPoly(t,e,r,i,o);const l=r*Math.sin(Math.PI/i)-.001;s=Math.min(s,l);const c=-1*Math.PI/2+o,h=Math.PI*2/i,u=(i-2)*Math.PI/i/2;for(let p=0;p<i;p++){const f=p*h+c,g=t+r*Math.cos(f),x=e+r*Math.sin(f),m=f+Math.PI+u,_=f-Math.PI-u,y=g+s*Math.cos(m),v=x+s*Math.sin(m),b=g+s*Math.cos(_),w=x+s*Math.sin(_);p===0?this.moveTo(y,v):this.lineTo(y,v),this.quadraticCurveTo(g,x,b,w,a)}return this.closePath()}roundShape(t,e,r=!1,i){return t.length<3?this:(r?ps(this,t,e,i):fs(this,t,e),this.closePath())}filletRect(t,e,r,i,s){if(s===0)return this.rect(t,e,r,i);const o=Math.min(r,i)/2,a=Math.min(o,Math.max(-o,s)),l=t+r,c=e+i,h=a<0?-a:0,u=Math.abs(a);return this.moveTo(t,e+u).arcTo(t+h,e+h,t+u,e,u).lineTo(l-u,e).arcTo(l-h,e+h,l,e+u,u).lineTo(l,c-u).arcTo(l-h,c-h,t+r-u,c,u).lineTo(t+u,c).arcTo(t+h,c-h,t,c-u,u).closePath()}chamferRect(t,e,r,i,s,o){if(s<=0)return this.rect(t,e,r,i);const a=Math.min(s,Math.min(r,i)/2),l=t+r,c=e+i,h=[t+a,e,l-a,e,l,e+a,l,c-a,l-a,c,t+a,c,t,c-a,t,e+a];for(let u=h.length-1;u>=2;u-=2)h[u]===h[u-2]&&h[u-1]===h[u-3]&&h.splice(u-1,2);return this.poly(h,!0,o)}ellipse(t,e,r,i,s){return this.drawShape(new ve(t,e,r,i),s),this}roundRect(t,e,r,i,s,o){return this.drawShape(new we(t,e,r,i,s),o),this}drawShape(t,e){return this.endPoly(),this.shapePrimitives.push({shape:t,transform:e}),this}startPoly(t,e){let r=this._currentPoly;return r&&this.endPoly(),r=new gt,r.points.push(t,e),this._currentPoly=r,this}endPoly(t=!1){const e=this._currentPoly;return e&&e.points.length>2&&(e.closePath=t,this.shapePrimitives.push({shape:e})),this._currentPoly=null,this}_ensurePoly(t=!0){if(!this._currentPoly&&(this._currentPoly=new gt,t)){const e=this.shapePrimitives[this.shapePrimitives.length-1];if(e){let r=e.shape.x,i=e.shape.y;if(e.transform&&!e.transform.isIdentity()){const s=e.transform,o=r;r=s.a*r+s.c*i+s.tx,i=s.b*o+s.d*i+s.ty}this._currentPoly.points.push(r,i)}else this._currentPoly.points.push(0,0)}}buildPath(){const t=this._graphicsPath2D;this.shapePrimitives.length=0,this._currentPoly=null;for(let e=0;e<t.instructions.length;e++){const r=t.instructions[e];this[r.action](...r.data)}this.finish()}get bounds(){const t=this._bounds;t.clear();const e=this.shapePrimitives;for(let r=0;r<e.length;r++){const i=e[r],s=i.shape.getBounds(gs);i.transform?t.addRect(s,i.transform):t.addRect(s)}return t}}class st{constructor(t){this.instructions=[],this.uid=d.uid("graphicsPath"),this._dirty=!0,typeof t=="string"?en(t,this):this.instructions=t?.slice()??[]}get shapePath(){return this._shapePath||(this._shapePath=new ms(this)),this._dirty&&(this._dirty=!1,this._shapePath.buildPath()),this._shapePath}addPath(t,e){return t=t.clone(),this.instructions.push({action:"addPath",data:[t,e]}),this._dirty=!0,this}arc(...t){return this.instructions.push({action:"arc",data:t}),this._dirty=!0,this}arcTo(...t){return this.instructions.push({action:"arcTo",data:t}),this._dirty=!0,this}arcToSvg(...t){return this.instructions.push({action:"arcToSvg",data:t}),this._dirty=!0,this}bezierCurveTo(...t){return this.instructions.push({action:"bezierCurveTo",data:t}),this._dirty=!0,this}bezierCurveToShort(t,e,r,i,s){const o=this.instructions[this.instructions.length-1],a=this.getLastPoint(d.Point.shared);let l=0,c=0;if(!o||o.action!=="bezierCurveTo")l=a.x,c=a.y;else{l=o.data[2],c=o.data[3];const h=a.x,u=a.y;l=h+(h-l),c=u+(u-c)}return this.instructions.push({action:"bezierCurveTo",data:[l,c,t,e,r,i,s]}),this._dirty=!0,this}closePath(){return this.instructions.push({action:"closePath",data:[]}),this._dirty=!0,this}ellipse(...t){return this.instructions.push({action:"ellipse",data:t}),this._dirty=!0,this}lineTo(...t){return this.instructions.push({action:"lineTo",data:t}),this._dirty=!0,this}moveTo(...t){return this.instructions.push({action:"moveTo",data:t}),this}quadraticCurveTo(...t){return this.instructions.push({action:"quadraticCurveTo",data:t}),this._dirty=!0,this}quadraticCurveToShort(t,e,r){const i=this.instructions[this.instructions.length-1],s=this.getLastPoint(d.Point.shared);let o=0,a=0;if(!i||i.action!=="quadraticCurveTo")o=s.x,a=s.y;else{o=i.data[0],a=i.data[1];const l=s.x,c=s.y;o=l+(l-o),a=c+(c-a)}return this.instructions.push({action:"quadraticCurveTo",data:[o,a,t,e,r]}),this._dirty=!0,this}rect(t,e,r,i,s){return this.instructions.push({action:"rect",data:[t,e,r,i,s]}),this._dirty=!0,this}circle(t,e,r,i){return this.instructions.push({action:"circle",data:[t,e,r,i]}),this._dirty=!0,this}roundRect(...t){return this.instructions.push({action:"roundRect",data:t}),this._dirty=!0,this}poly(...t){return this.instructions.push({action:"poly",data:t}),this._dirty=!0,this}regularPoly(...t){return this.instructions.push({action:"regularPoly",data:t}),this._dirty=!0,this}roundPoly(...t){return this.instructions.push({action:"roundPoly",data:t}),this._dirty=!0,this}roundShape(...t){return this.instructions.push({action:"roundShape",data:t}),this._dirty=!0,this}filletRect(...t){return this.instructions.push({action:"filletRect",data:t}),this._dirty=!0,this}chamferRect(...t){return this.instructions.push({action:"chamferRect",data:t}),this._dirty=!0,this}star(t,e,r,i,s,o,a){s||(s=i/2);const l=-1*Math.PI/2+o,c=r*2,h=Math.PI*2/c,u=[];for(let p=0;p<c;p++){const f=p%2?s:i,g=p*h+l;u.push(t+f*Math.cos(g),e+f*Math.sin(g))}return this.poly(u,!0,a),this}clone(t=!1){const e=new st;if(!t)e.instructions=this.instructions.slice();else for(let r=0;r<this.instructions.length;r++){const i=this.instructions[r];e.instructions.push({action:i.action,data:i.data.slice()})}return e}clear(){return this.instructions.length=0,this._dirty=!0,this}transform(t){if(t.isIdentity())return this;const e=t.a,r=t.b,i=t.c,s=t.d,o=t.tx,a=t.ty;let l=0,c=0,h=0,u=0,p=0,f=0,g=0,x=0;for(let m=0;m<this.instructions.length;m++){const _=this.instructions[m],y=_.data;switch(_.action){case"moveTo":case"lineTo":l=y[0],c=y[1],y[0]=e*l+i*c+o,y[1]=r*l+s*c+a;break;case"bezierCurveTo":h=y[0],u=y[1],p=y[2],f=y[3],l=y[4],c=y[5],y[0]=e*h+i*u+o,y[1]=r*h+s*u+a,y[2]=e*p+i*f+o,y[3]=r*p+s*f+a,y[4]=e*l+i*c+o,y[5]=r*l+s*c+a;break;case"quadraticCurveTo":h=y[0],u=y[1],l=y[2],c=y[3],y[0]=e*h+i*u+o,y[1]=r*h+s*u+a,y[2]=e*l+i*c+o,y[3]=r*l+s*c+a;break;case"arcToSvg":l=y[5],c=y[6],g=y[0],x=y[1],y[0]=e*g+i*x,y[1]=r*g+s*x,y[5]=e*l+i*c+o,y[6]=r*l+s*c+a;break;case"circle":y[4]=ft(y[3],t);break;case"rect":y[4]=ft(y[4],t);break;case"ellipse":y[8]=ft(y[8],t);break;case"roundRect":y[5]=ft(y[5],t);break;case"addPath":y[0].transform(t);break;case"poly":y[2]=ft(y[2],t);break;default:d.warn("unknown transform action",_.action);break}}return this._dirty=!0,this}get bounds(){return this.shapePath.bounds}getLastPoint(t){let e=this.instructions.length-1,r=this.instructions[e];if(!r)return t.x=0,t.y=0,t;for(;r.action==="closePath";){if(e--,e<0)return t.x=0,t.y=0,t;r=this.instructions[e]}switch(r.action){case"moveTo":case"lineTo":t.x=r.data[0],t.y=r.data[1];break;case"quadraticCurveTo":t.x=r.data[2],t.y=r.data[3];break;case"bezierCurveTo":t.x=r.data[4],t.y=r.data[5];break;case"arc":case"arcToSvg":t.x=r.data[5],t.y=r.data[6];break;case"addPath":r.data[0].getLastPoint(t);break}return t}}function ft(n,t){return n?n.prepend(t):t.clone()}function xs(n,t){if(typeof n=="string"){const r=document.createElement("div");r.innerHTML=n.trim(),n=r.querySelector("svg")}const e={context:t,path:new st};return ti(n,e,null,null),t}function ti(n,t,e,r){const i=n.children,{fillStyle:s,strokeStyle:o}=_s(n);s&&e?e={...e,...s}:s&&(e=s),o&&r?r={...r,...o}:o&&(r=o),t.context.fillStyle=e,t.context.strokeStyle=r;let a,l,c,h,u,p,f,g,x,m,_,y,v,b,w,S,T;switch(n.nodeName.toLowerCase()){case"path":b=n.getAttribute("d"),w=new st(b),t.context.path(w),e&&t.context.fill(),r&&t.context.stroke();break;case"circle":f=G(n,"cx",0),g=G(n,"cy",0),x=G(n,"r",0),t.context.ellipse(f,g,x,x),e&&t.context.fill(),r&&t.context.stroke();break;case"rect":a=G(n,"x",0),l=G(n,"y",0),S=G(n,"width",0),T=G(n,"height",0),m=G(n,"rx",0),_=G(n,"ry",0),m||_?t.context.roundRect(a,l,S,T,m||_):t.context.rect(a,l,S,T),e&&t.context.fill(),r&&t.context.stroke();break;case"ellipse":f=G(n,"cx",0),g=G(n,"cy",0),m=G(n,"rx",0),_=G(n,"ry",0),t.context.beginPath(),t.context.ellipse(f,g,m,_),e&&t.context.fill(),r&&t.context.stroke();break;case"line":c=G(n,"x1",0),h=G(n,"y1",0),u=G(n,"x2",0),p=G(n,"y2",0),t.context.beginPath(),t.context.moveTo(c,h),t.context.lineTo(u,p),r&&t.context.stroke();break;case"polygon":v=n.getAttribute("points"),y=v.match(/\d+/g).map(P=>parseInt(P,10)),t.context.poly(y,!0),e&&t.context.fill(),r&&t.context.stroke();break;case"polyline":v=n.getAttribute("points"),y=v.match(/\d+/g).map(P=>parseInt(P,10)),t.context.poly(y,!1),r&&t.context.stroke();break;case"g":case"svg":break;default:{console.info(`[SVG parser] <${n.nodeName}> elements unsupported`);break}}for(let P=0;P<i.length;P++)ti(i[P],t,e,r)}function G(n,t,e){const r=n.getAttribute(t);return r?Number(r):e}function _s(n){const t=n.getAttribute("style"),e={},r={};let i=!1,s=!1;if(t){const o=t.split(";");for(let a=0;a<o.length;a++){const l=o[a],[c,h]=l.split(":");switch(c){case"stroke":h!=="none"&&(e.color=d.Color.shared.setValue(h).toNumber(),s=!0);break;case"stroke-width":e.width=Number(h);break;case"fill":h!=="none"&&(i=!0,r.color=d.Color.shared.setValue(h).toNumber());break;case"fill-opacity":r.alpha=Number(h);break;case"stroke-opacity":e.alpha=Number(h);break;case"opacity":r.alpha=Number(h),e.alpha=Number(h);break}}}else{const o=n.getAttribute("stroke");o&&o!=="none"&&(s=!0,e.color=d.Color.shared.setValue(o).toNumber(),e.width=G(n,"stroke-width",1));const a=n.getAttribute("fill");a&&a!=="none"&&(i=!0,r.color=d.Color.shared.setValue(a).toNumber())}return{strokeStyle:s?e:null,fillStyle:i?r:null}}function ys(n){return d.Color.isColorLike(n)}function lr(n){return n instanceof Wt}function hr(n){return n instanceof xt}function bs(n,t,e){const r=d.Color.shared.setValue(t??0);return n.color=r.toNumber(),n.alpha=r.alpha===1?e.alpha:r.alpha,n.texture=d.Texture.WHITE,{...e,...n}}function cr(n,t,e){return n.fill=t,n.color=16777215,n.texture=t.texture,n.matrix=t.transform,{...e,...n}}function ur(n,t,e){return t.buildLinearGradient(),n.fill=t,n.color=16777215,n.texture=t.texture,n.matrix=t.transform,{...e,...n}}function Ss(n,t){const e={...t,...n};if(e.texture){if(e.texture!==d.Texture.WHITE){const s=e.matrix?.clone().invert()||new d.Matrix;s.translate(e.texture.frame.x,e.texture.frame.y),s.scale(1/e.texture.source.width,1/e.texture.source.height),e.matrix=s}const i=e.texture.source.style;i.addressMode==="clamp-to-edge"&&(i.addressMode="repeat",i.update())}const r=d.Color.shared.setValue(e.color);return e.alpha*=r.alpha,e.color=r.toNumber(),e.matrix=e.matrix?e.matrix.clone():null,e}function Z(n,t){if(n==null)return null;const e={},r=n;return ys(n)?bs(e,n,t):lr(n)?cr(e,n,t):hr(n)?ur(e,n,t):r.fill&&lr(r.fill)?cr(r,r.fill,t):r.fill&&hr(r.fill)?ur(r,r.fill,t):Ss(r,t)}function It(n,t){const{width:e,alignment:r,miterLimit:i,cap:s,join:o,pixelLine:a,...l}=t,c=Z(n,l);return c?{width:e,alignment:r,miterLimit:i,cap:s,join:o,pixelLine:a,...c}:null}const Ts=new d.Point,dr=new d.Matrix,ze=class L extends d.EventEmitter{constructor(){super(...arguments),this.uid=d.uid("graphicsContext"),this.dirty=!0,this.batchMode="auto",this.instructions=[],this._activePath=new st,this._transform=new d.Matrix,this._fillStyle={...L.defaultFillStyle},this._strokeStyle={...L.defaultStrokeStyle},this._stateStack=[],this._tick=0,this._bounds=new d.Bounds,this._boundsDirty=!0}clone(){const t=new L;return t.batchMode=this.batchMode,t.instructions=this.instructions.slice(),t._activePath=this._activePath.clone(),t._transform=this._transform.clone(),t._fillStyle={...this._fillStyle},t._strokeStyle={...this._strokeStyle},t._stateStack=this._stateStack.slice(),t._bounds=this._bounds.clone(),t._boundsDirty=!0,t}get fillStyle(){return this._fillStyle}set fillStyle(t){this._fillStyle=Z(t,L.defaultFillStyle)}get strokeStyle(){return this._strokeStyle}set strokeStyle(t){this._strokeStyle=It(t,L.defaultStrokeStyle)}setFillStyle(t){return this._fillStyle=Z(t,L.defaultFillStyle),this}setStrokeStyle(t){return this._strokeStyle=Z(t,L.defaultStrokeStyle),this}texture(t,e,r,i,s,o){return this.instructions.push({action:"texture",data:{image:t,dx:r||0,dy:i||0,dw:s||t.frame.width,dh:o||t.frame.height,transform:this._transform.clone(),alpha:this._fillStyle.alpha,style:e?d.Color.shared.setValue(e).toNumber():16777215}}),this.onUpdate(),this}beginPath(){return this._activePath=new st,this}fill(t,e){let r;const i=this.instructions[this.instructions.length-1];return this._tick===0&&i&&i.action==="stroke"?r=i.data.path:r=this._activePath.clone(),r?(t!=null&&(e!==void 0&&typeof t=="number"&&(d.deprecation(d.v8_0_0,"GraphicsContext.fill(color, alpha) is deprecated, use GraphicsContext.fill({ color, alpha }) instead"),t={color:t,alpha:e}),this._fillStyle=Z(t,L.defaultFillStyle)),this.instructions.push({action:"fill",data:{style:this.fillStyle,path:r}}),this.onUpdate(),this._initNextPathLocation(),this._tick=0,this):this}_initNextPathLocation(){const{x:t,y:e}=this._activePath.getLastPoint(d.Point.shared);this._activePath.clear(),this._activePath.moveTo(t,e)}stroke(t){let e;const r=this.instructions[this.instructions.length-1];return this._tick===0&&r&&r.action==="fill"?e=r.data.path:e=this._activePath.clone(),e?(t!=null&&(this._strokeStyle=It(t,L.defaultStrokeStyle)),this.instructions.push({action:"stroke",data:{style:this.strokeStyle,path:e}}),this.onUpdate(),this._initNextPathLocation(),this._tick=0,this):this}cut(){for(let t=0;t<2;t++){const e=this.instructions[this.instructions.length-1-t],r=this._activePath.clone();if(e&&(e.action==="stroke"||e.action==="fill"))if(e.data.hole)e.data.hole.addPath(r);else{e.data.hole=r;break}}return this._initNextPathLocation(),this}arc(t,e,r,i,s,o){this._tick++;const a=this._transform;return this._activePath.arc(a.a*t+a.c*e+a.tx,a.b*t+a.d*e+a.ty,r,i,s,o),this}arcTo(t,e,r,i,s){this._tick++;const o=this._transform;return this._activePath.arcTo(o.a*t+o.c*e+o.tx,o.b*t+o.d*e+o.ty,o.a*r+o.c*i+o.tx,o.b*r+o.d*i+o.ty,s),this}arcToSvg(t,e,r,i,s,o,a){this._tick++;const l=this._transform;return this._activePath.arcToSvg(t,e,r,i,s,l.a*o+l.c*a+l.tx,l.b*o+l.d*a+l.ty),this}bezierCurveTo(t,e,r,i,s,o,a){this._tick++;const l=this._transform;return this._activePath.bezierCurveTo(l.a*t+l.c*e+l.tx,l.b*t+l.d*e+l.ty,l.a*r+l.c*i+l.tx,l.b*r+l.d*i+l.ty,l.a*s+l.c*o+l.tx,l.b*s+l.d*o+l.ty,a),this}closePath(){return this._tick++,this._activePath?.closePath(),this}ellipse(t,e,r,i){return this._tick++,this._activePath.ellipse(t,e,r,i,this._transform.clone()),this}circle(t,e,r){return this._tick++,this._activePath.circle(t,e,r,this._transform.clone()),this}path(t){return this._tick++,this._activePath.addPath(t,this._transform.clone()),this}lineTo(t,e){this._tick++;const r=this._transform;return this._activePath.lineTo(r.a*t+r.c*e+r.tx,r.b*t+r.d*e+r.ty),this}moveTo(t,e){this._tick++;const r=this._transform,i=this._activePath.instructions,s=r.a*t+r.c*e+r.tx,o=r.b*t+r.d*e+r.ty;return i.length===1&&i[0].action==="moveTo"?(i[0].data[0]=s,i[0].data[1]=o,this):(this._activePath.moveTo(s,o),this)}quadraticCurveTo(t,e,r,i,s){this._tick++;const o=this._transform;return this._activePath.quadraticCurveTo(o.a*t+o.c*e+o.tx,o.b*t+o.d*e+o.ty,o.a*r+o.c*i+o.tx,o.b*r+o.d*i+o.ty,s),this}rect(t,e,r,i){return this._tick++,this._activePath.rect(t,e,r,i,this._transform.clone()),this}roundRect(t,e,r,i,s){return this._tick++,this._activePath.roundRect(t,e,r,i,s,this._transform.clone()),this}poly(t,e){return this._tick++,this._activePath.poly(t,e,this._transform.clone()),this}regularPoly(t,e,r,i,s=0,o){return this._tick++,this._activePath.regularPoly(t,e,r,i,s,o),this}roundPoly(t,e,r,i,s,o){return this._tick++,this._activePath.roundPoly(t,e,r,i,s,o),this}roundShape(t,e,r,i){return this._tick++,this._activePath.roundShape(t,e,r,i),this}filletRect(t,e,r,i,s){return this._tick++,this._activePath.filletRect(t,e,r,i,s),this}chamferRect(t,e,r,i,s,o){return this._tick++,this._activePath.chamferRect(t,e,r,i,s,o),this}star(t,e,r,i,s=0,o=0){return this._tick++,this._activePath.star(t,e,r,i,s,o,this._transform.clone()),this}svg(t){return this._tick++,xs(t,this),this}restore(){const t=this._stateStack.pop();return t&&(this._transform=t.transform,this._fillStyle=t.fillStyle,this._strokeStyle=t.strokeStyle),this}save(){return this._stateStack.push({transform:this._transform.clone(),fillStyle:{...this._fillStyle},strokeStyle:{...this._strokeStyle}}),this}getTransform(){return this._transform}resetTransform(){return this._transform.identity(),this}rotate(t){return this._transform.rotate(t),this}scale(t,e=t){return this._transform.scale(t,e),this}setTransform(t,e,r,i,s,o){return t instanceof d.Matrix?(this._transform.set(t.a,t.b,t.c,t.d,t.tx,t.ty),this):(this._transform.set(t,e,r,i,s,o),this)}transform(t,e,r,i,s,o){return t instanceof d.Matrix?(this._transform.append(t),this):(dr.set(t,e,r,i,s,o),this._transform.append(dr),this)}translate(t,e=t){return this._transform.translate(t,e),this}clear(){return this._activePath.clear(),this.instructions.length=0,this.resetTransform(),this.onUpdate(),this}onUpdate(){this.dirty||(this.emit("update",this,16),this.dirty=!0,this._boundsDirty=!0)}get bounds(){if(!this._boundsDirty)return this._bounds;const t=this._bounds;t.clear();for(let e=0;e<this.instructions.length;e++){const r=this.instructions[e],i=r.action;if(i==="fill"){const s=r.data;t.addBounds(s.path.bounds)}else if(i==="texture"){const s=r.data;t.addFrame(s.dx,s.dy,s.dx+s.dw,s.dy+s.dh,s.transform)}if(i==="stroke"){const s=r.data,o=s.style.alignment,a=s.style.width*(1-o),l=s.path.bounds;t.addFrame(l.minX-a,l.minY-a,l.maxX+a,l.maxY+a)}}return t}containsPoint(t){if(!this.bounds.containsPoint(t.x,t.y))return!1;const e=this.instructions;let r=!1;for(let i=0;i<e.length;i++){const s=e[i],o=s.data,a=o.path;if(!s.action||!a)continue;const l=o.style,c=a.shapePath.shapePrimitives;for(let h=0;h<c.length;h++){const u=c[h].shape;if(!l||!u)continue;const p=c[h].transform,f=p?p.applyInverse(t,Ts):t;if(s.action==="fill")r=u.contains(f.x,f.y);else{const x=l;r=u.strokeContains(f.x,f.y,x.width,x.alignment)}const g=o.hole;if(g){const x=g.shapePath?.shapePrimitives;if(x)for(let m=0;m<x.length;m++)x[m].shape.contains(f.x,f.y)&&(r=!1)}if(r)return!0}}return r}destroy(t=!1){if(this._stateStack.length=0,this._transform=null,this.emit("destroy",this),this.removeAllListeners(),typeof t=="boolean"?t:t?.texture){const r=typeof t=="boolean"?t:t?.textureSource;this._fillStyle.texture&&this._fillStyle.texture.destroy(r),this._strokeStyle.texture&&this._strokeStyle.texture.destroy(r)}this._fillStyle=null,this._strokeStyle=null,this.instructions=null,this._activePath=null,this._bounds=null,this._stateStack=null,this.customShader=null,this._transform=null}};ze.defaultFillStyle={color:16777215,alpha:1,texture:d.Texture.WHITE,matrix:null,fill:null};ze.defaultStrokeStyle={width:1,color:16777215,alpha:1,alignment:.5,miterLimit:10,cap:"butt",join:"miter",texture:d.Texture.WHITE,matrix:null,fill:null,pixelLine:!1};let D=ze;const fr=["align","breakWords","cssOverrides","fontVariant","fontWeight","leading","letterSpacing","lineHeight","padding","textBaseline","trim","whiteSpace","wordWrap","wordWrapWidth","fontFamily","fontStyle","fontSize"];function ei(n){const t=[];let e=0;for(let r=0;r<fr.length;r++){const i=`_${fr[r]}`;t[e++]=n[i]}return e=ri(n._fill,t,e),e=vs(n._stroke,t,e),e=ws(n.dropShadow,t,e),t.join("-")}function ri(n,t,e){return n&&(t[e++]=n.color,t[e++]=n.alpha,t[e++]=n.fill?.styleKey),e}function vs(n,t,e){return n&&(e=ri(n,t,e),t[e++]=n.width,t[e++]=n.alignment,t[e++]=n.cap,t[e++]=n.join,t[e++]=n.miterLimit),e}function ws(n,t,e){return n&&(t[e++]=n.alpha,t[e++]=n.angle,t[e++]=n.blur,t[e++]=n.distance,t[e++]=d.Color.shared.setValue(n.color).toNumber()),e}const Ee=class et extends d.EventEmitter{constructor(t={}){super(),Ps(t);const e={...et.defaultTextStyle,...t};for(const r in e){const i=r;this[i]=e[r]}this.update()}get align(){return this._align}set align(t){this._align=t,this.update()}get breakWords(){return this._breakWords}set breakWords(t){this._breakWords=t,this.update()}get dropShadow(){return this._dropShadow}set dropShadow(t){t!==null&&typeof t=="object"?this._dropShadow=this._createProxy({...et.defaultDropShadow,...t}):this._dropShadow=t?this._createProxy({...et.defaultDropShadow}):null,this.update()}get fontFamily(){return this._fontFamily}set fontFamily(t){this._fontFamily=t,this.update()}get fontSize(){return this._fontSize}set fontSize(t){typeof t=="string"?this._fontSize=parseInt(t,10):this._fontSize=t,this.update()}get fontStyle(){return this._fontStyle}set fontStyle(t){this._fontStyle=t.toLowerCase(),this.update()}get fontVariant(){return this._fontVariant}set fontVariant(t){this._fontVariant=t,this.update()}get fontWeight(){return this._fontWeight}set fontWeight(t){this._fontWeight=t,this.update()}get leading(){return this._leading}set leading(t){this._leading=t,this.update()}get letterSpacing(){return this._letterSpacing}set letterSpacing(t){this._letterSpacing=t,this.update()}get lineHeight(){return this._lineHeight}set lineHeight(t){this._lineHeight=t,this.update()}get padding(){return this._padding}set padding(t){this._padding=t,this.update()}get trim(){return this._trim}set trim(t){this._trim=t,this.update()}get textBaseline(){return this._textBaseline}set textBaseline(t){this._textBaseline=t,this.update()}get whiteSpace(){return this._whiteSpace}set whiteSpace(t){this._whiteSpace=t,this.update()}get wordWrap(){return this._wordWrap}set wordWrap(t){this._wordWrap=t,this.update()}get wordWrapWidth(){return this._wordWrapWidth}set wordWrapWidth(t){this._wordWrapWidth=t,this.update()}get fill(){return this._originalFill}set fill(t){t!==this._originalFill&&(this._originalFill=t,this._isFillStyle(t)&&(this._originalFill=this._createProxy({...D.defaultFillStyle,...t},()=>{this._fill=Z({...this._originalFill},D.defaultFillStyle)})),this._fill=Z(t===0?"black":t,D.defaultFillStyle),this.update())}get stroke(){return this._originalStroke}set stroke(t){t!==this._originalStroke&&(this._originalStroke=t,this._isFillStyle(t)&&(this._originalStroke=this._createProxy({...D.defaultStrokeStyle,...t},()=>{this._stroke=It({...this._originalStroke},D.defaultStrokeStyle)})),this._stroke=It(t,D.defaultStrokeStyle),this.update())}_generateKey(){return this._styleKey=ei(this),this._styleKey}update(){this._styleKey=null,this.emit("update",this)}reset(){const t=et.defaultTextStyle;for(const e in t)this[e]=t[e]}get styleKey(){return this._styleKey||this._generateKey()}clone(){return new et({align:this.align,breakWords:this.breakWords,dropShadow:this._dropShadow?{...this._dropShadow}:null,fill:this._fill,fontFamily:this.fontFamily,fontSize:this.fontSize,fontStyle:this.fontStyle,fontVariant:this.fontVariant,fontWeight:this.fontWeight,leading:this.leading,letterSpacing:this.letterSpacing,lineHeight:this.lineHeight,padding:this.padding,stroke:this._stroke,textBaseline:this.textBaseline,whiteSpace:this.whiteSpace,wordWrap:this.wordWrap,wordWrapWidth:this.wordWrapWidth})}destroy(t=!1){if(this.removeAllListeners(),typeof t=="boolean"?t:t?.texture){const r=typeof t=="boolean"?t:t?.textureSource;this._fill?.texture&&this._fill.texture.destroy(r),this._originalFill?.texture&&this._originalFill.texture.destroy(r),this._stroke?.texture&&this._stroke.texture.destroy(r),this._originalStroke?.texture&&this._originalStroke.texture.destroy(r)}this._fill=null,this._stroke=null,this.dropShadow=null,this._originalStroke=null,this._originalFill=null}_createProxy(t,e){return new Proxy(t,{set:(r,i,s)=>(r[i]=s,e?.(i,s),this.update(),!0)})}_isFillStyle(t){return(t??null)!==null&&!(d.Color.isColorLike(t)||t instanceof xt||t instanceof Wt)}};Ee.defaultDropShadow={alpha:1,angle:Math.PI/6,blur:0,color:"black",distance:5};Ee.defaultTextStyle={align:"left",breakWords:!1,dropShadow:null,fill:"black",fontFamily:"Arial",fontSize:26,fontStyle:"normal",fontVariant:"normal",fontWeight:"normal",leading:0,letterSpacing:0,lineHeight:0,padding:0,stroke:null,textBaseline:"alphabetic",trim:!1,whiteSpace:"pre",wordWrap:!1,wordWrapWidth:100};let j=Ee;function Ps(n){const t=n;if(typeof t.dropShadow=="boolean"&&t.dropShadow){const e=j.defaultDropShadow;n.dropShadow={alpha:t.dropShadowAlpha??e.alpha,angle:t.dropShadowAngle??e.angle,blur:t.dropShadowBlur??e.blur,color:t.dropShadowColor??e.color,distance:t.dropShadowDistance??e.distance}}if(t.strokeThickness!==void 0){d.deprecation(d.v8_0_0,"strokeThickness is now a part of stroke");const e=t.stroke;let r={};if(d.Color.isColorLike(e))r.color=e;else if(e instanceof xt||e instanceof Wt)r.fill=e;else if(Object.hasOwnProperty.call(e,"color")||Object.hasOwnProperty.call(e,"fill"))r=e;else throw new Error("Invalid stroke value.");n.stroke={...r,width:t.strokeThickness}}if(Array.isArray(t.fillGradientStops)){d.deprecation(d.v8_0_0,"gradient fill is now a fill pattern: `new FillGradient(...)`");let e;n.fontSize==null?n.fontSize=j.defaultTextStyle.fontSize:typeof n.fontSize=="string"?e=parseInt(n.fontSize,10):e=n.fontSize;const r=new xt(0,0,0,e*1.7),i=t.fillGradientStops.map(s=>d.Color.shared.setValue(s).toNumber());i.forEach((s,o)=>{const a=o/(i.length-1);r.addColorStop(a,s)}),n.fill={fill:r}}}class Cs{constructor(t){this._canvasPool=Object.create(null),this.canvasOptions=t||{},this.enableFullScreen=!1}_createCanvasAndContext(t,e){const r=d.DOMAdapter.get().createCanvas();r.width=t,r.height=e;const i=r.getContext("2d");return{canvas:r,context:i}}getOptimalCanvasAndContext(t,e,r=1){t=Math.ceil(t*r-1e-6),e=Math.ceil(e*r-1e-6),t=d.nextPow2(t),e=d.nextPow2(e);const i=(t<<17)+(e<<1);this._canvasPool[i]||(this._canvasPool[i]=[]);let s=this._canvasPool[i].pop();return s||(s=this._createCanvasAndContext(t,e)),s}returnCanvasAndContext(t){const e=t.canvas,{width:r,height:i}=e,s=(r<<17)+(i<<1);t.context.clearRect(0,0,r,i),this._canvasPool[s].push(t)}clear(){this._canvasPool={}}}const J=new Cs,Ms=["serif","sans-serif","monospace","cursive","fantasy","system-ui"];function Gt(n){const t=typeof n.fontSize=="number"?`${n.fontSize}px`:n.fontSize;let e=n.fontFamily;Array.isArray(n.fontFamily)||(e=n.fontFamily.split(","));for(let r=e.length-1;r>=0;r--){let i=e[r].trim();!/([\"\'])[^\'\"]+\1/.test(i)&&!Ms.includes(i)&&(i=`"${i}"`),e[r]=i}return`${n.fontStyle} ${n.fontVariant} ${n.fontWeight} ${t} ${e.join(",")}`}const le={willReadFrequently:!0},W=class B{static get experimentalLetterSpacingSupported(){let t=B._experimentalLetterSpacingSupported;if(t!==void 0){const e=d.DOMAdapter.get().getCanvasRenderingContext2D().prototype;t=B._experimentalLetterSpacingSupported="letterSpacing"in e||"textLetterSpacing"in e}return t}constructor(t,e,r,i,s,o,a,l,c){this.text=t,this.style=e,this.width=r,this.height=i,this.lines=s,this.lineWidths=o,this.lineHeight=a,this.maxLineWidth=l,this.fontProperties=c}static measureText(t=" ",e,r=B._canvas,i=e.wordWrap){const s=`${t}:${e.styleKey}`;if(B._measurementCache[s])return B._measurementCache[s];const o=Gt(e),a=B.measureFont(o);a.fontSize===0&&(a.fontSize=e.fontSize,a.ascent=e.fontSize);const l=B.__context;l.font=o;const h=(i?B._wordWrap(t,e,r):t).split(/(?:\r\n|\r|\n)/),u=new Array(h.length);let p=0;for(let y=0;y<h.length;y++){const v=B._measureText(h[y],e.letterSpacing,l);u[y]=v,p=Math.max(p,v)}const f=e._stroke?.width||0;let g=p+f;e.dropShadow&&(g+=e.dropShadow.distance);const x=e.lineHeight||a.fontSize;let m=Math.max(x,a.fontSize+f)+(h.length-1)*(x+e.leading);return e.dropShadow&&(m+=e.dropShadow.distance),new B(t,e,g,m,h,u,x+e.leading,p,a)}static _measureText(t,e,r){let i=!1;B.experimentalLetterSpacingSupported&&(B.experimentalLetterSpacing?(r.letterSpacing=`${e}px`,r.textLetterSpacing=`${e}px`,i=!0):(r.letterSpacing="0px",r.textLetterSpacing="0px"));const s=r.measureText(t);let o=s.width;const a=-s.actualBoundingBoxLeft;let c=s.actualBoundingBoxRight-a;if(o>0)if(i)o-=e,c-=e;else{const h=(B.graphemeSegmenter(t).length-1)*e;o+=h,c+=h}return Math.max(o,c)}static _wordWrap(t,e,r=B._canvas){const i=r.getContext("2d",le);let s=0,o="",a="";const l=Object.create(null),{letterSpacing:c,whiteSpace:h}=e,u=B._collapseSpaces(h),p=B._collapseNewlines(h);let f=!u;const g=e.wordWrapWidth+c,x=B._tokenize(t);for(let m=0;m<x.length;m++){let _=x[m];if(B._isNewline(_)){if(!p){a+=B._addLine(o),f=!u,o="",s=0;continue}_=" "}if(u){const v=B.isBreakingSpace(_),b=B.isBreakingSpace(o[o.length-1]);if(v&&b)continue}const y=B._getFromCache(_,c,l,i);if(y>g)if(o!==""&&(a+=B._addLine(o),o="",s=0),B.canBreakWords(_,e.breakWords)){const v=B.wordWrapSplit(_);for(let b=0;b<v.length;b++){let w=v[b],S=w,T=1;for(;v[b+T];){const A=v[b+T];if(!B.canBreakChars(S,A,_,b,e.breakWords))w+=A;else break;S=A,T++}b+=T-1;const P=B._getFromCache(w,c,l,i);P+s>g&&(a+=B._addLine(o),f=!1,o="",s=0),o+=w,s+=P}}else{o.length>0&&(a+=B._addLine(o),o="",s=0);const v=m===x.length-1;a+=B._addLine(_,!v),f=!1,o="",s=0}else y+s>g&&(f=!1,a+=B._addLine(o),o="",s=0),(o.length>0||!B.isBreakingSpace(_)||f)&&(o+=_,s+=y)}return a+=B._addLine(o,!1),a}static _addLine(t,e=!0){return t=B._trimRight(t),t=e?`${t}
`:t,t}static _getFromCache(t,e,r,i){let s=r[t];return typeof s!="number"&&(s=B._measureText(t,e,i)+e,r[t]=s),s}static _collapseSpaces(t){return t==="normal"||t==="pre-line"}static _collapseNewlines(t){return t==="normal"}static _trimRight(t){if(typeof t!="string")return"";for(let e=t.length-1;e>=0;e--){const r=t[e];if(!B.isBreakingSpace(r))break;t=t.slice(0,-1)}return t}static _isNewline(t){return typeof t!="string"?!1:B._newlines.includes(t.charCodeAt(0))}static isBreakingSpace(t,e){return typeof t!="string"?!1:B._breakingSpaces.includes(t.charCodeAt(0))}static _tokenize(t){const e=[];let r="";if(typeof t!="string")return e;for(let i=0;i<t.length;i++){const s=t[i],o=t[i+1];if(B.isBreakingSpace(s,o)||B._isNewline(s)){r!==""&&(e.push(r),r=""),e.push(s);continue}r+=s}return r!==""&&e.push(r),e}static canBreakWords(t,e){return e}static canBreakChars(t,e,r,i,s){return!0}static wordWrapSplit(t){return B.graphemeSegmenter(t)}static measureFont(t){if(B._fonts[t])return B._fonts[t];const e=B._context;e.font=t;const r=e.measureText(B.METRICS_STRING+B.BASELINE_SYMBOL),i={ascent:r.actualBoundingBoxAscent,descent:r.actualBoundingBoxDescent,fontSize:r.actualBoundingBoxAscent+r.actualBoundingBoxDescent};return B._fonts[t]=i,i}static clearMetrics(t=""){t?delete B._fonts[t]:B._fonts={}}static get _canvas(){if(!B.__canvas){let t;try{const e=new OffscreenCanvas(0,0);if(e.getContext("2d",le)?.measureText)return B.__canvas=e,e;t=d.DOMAdapter.get().createCanvas()}catch{t=d.DOMAdapter.get().createCanvas()}t.width=t.height=10,B.__canvas=t}return B.__canvas}static get _context(){return B.__context||(B.__context=B._canvas.getContext("2d",le)),B.__context}};W.METRICS_STRING="|ÉqÅ";W.BASELINE_SYMBOL="M";W.BASELINE_MULTIPLIER=1.4;W.HEIGHT_MULTIPLIER=2;W.graphemeSegmenter=(()=>{if(typeof Intl?.Segmenter=="function"){const n=new Intl.Segmenter;return t=>[...n.segment(t)].map(e=>e.segment)}return n=>[...n]})();W.experimentalLetterSpacing=!1;W._fonts={};W._newlines=[10,13];W._breakingSpaces=[9,32,8192,8193,8194,8195,8196,8197,8198,8200,8201,8202,8287,12288];W._measurementCache={};let $=W;function Ut(n,t){if(n.texture===d.Texture.WHITE&&!n.fill)return d.Color.shared.setValue(n.color).setAlpha(n.alpha??1).toHexa();if(n.fill){if(n.fill instanceof Wt){const e=n.fill,r=t.createPattern(e.texture.source.resource,"repeat"),i=e.transform.copyTo(d.Matrix.shared);return i.scale(e.texture.frame.width,e.texture.frame.height),r.setTransform(i),r}else if(n.fill instanceof xt){const e=n.fill;if(e.type==="linear"){const r=t.createLinearGradient(e.x0,e.y0,e.x1,e.y1);return e.gradientStops.forEach(i=>{r.addColorStop(i.offset,d.Color.shared.setValue(i.color).toHex())}),r}}}else{const e=t.createPattern(n.texture.source.resource,"repeat"),r=n.matrix.copyTo(d.Matrix.shared);return r.scale(n.texture.frame.width,n.texture.frame.height),e.setTransform(r),e}return d.warn("FillStyle not recognised",n),"red"}function ii(n){if(n==="")return[];typeof n=="string"&&(n=[n]);const t=[];for(let e=0,r=n.length;e<r;e++){const i=n[e];if(Array.isArray(i)){if(i.length!==2)throw new Error(`[BitmapFont]: Invalid character range length, expecting 2 got ${i.length}.`);if(i[0].length===0||i[1].length===0)throw new Error("[BitmapFont]: Invalid character delimiter.");const s=i[0].charCodeAt(0),o=i[1].charCodeAt(0);if(o<s)throw new Error("[BitmapFont]: Invalid character range.");for(let a=s,l=o;a<=l;a++)t.push(String.fromCharCode(a))}else t.push(...Array.from(i))}if(t.length===0)throw new Error("[BitmapFont]: Empty set when resolving characters.");return t}const ni=class si extends Qi{constructor(t){super(),this.resolution=1,this.pages=[],this._padding=0,this._measureCache=Object.create(null),this._currentChars=[],this._currentX=0,this._currentY=0,this._currentPageIndex=-1,this._skipKerning=!1;const e={...si.defaultOptions,...t};this._textureSize=e.textureSize,this._mipmap=e.mipmap;const r=e.style.clone();e.overrideFill&&(r._fill.color=16777215,r._fill.alpha=1,r._fill.texture=d.Texture.WHITE,r._fill.fill=null),this.applyFillAsTint=e.overrideFill;const i=r.fontSize;r.fontSize=this.baseMeasurementFontSize;const s=Gt(r);e.overrideSize?r._stroke&&(r._stroke.width*=this.baseRenderedFontSize/i):r.fontSize=this.baseRenderedFontSize=i,this._style=r,this._skipKerning=e.skipKerning??!1,this.resolution=e.resolution??1,this._padding=e.padding??4,this.fontMetrics=$.measureFont(s),this.lineHeight=r.lineHeight||this.fontMetrics.fontSize||r.fontSize}ensureCharacters(t){const e=ii(t).filter(m=>!this._currentChars.includes(m)).filter((m,_,y)=>y.indexOf(m)===_);if(!e.length)return;this._currentChars=[...this._currentChars,...e];let r;this._currentPageIndex===-1?r=this._nextPage():r=this.pages[this._currentPageIndex];let{canvas:i,context:s}=r.canvasAndContext,o=r.texture.source;const a=this._style;let l=this._currentX,c=this._currentY;const h=this.baseRenderedFontSize/this.baseMeasurementFontSize,u=this._padding*h;let p=0,f=!1;const g=i.width/this.resolution,x=i.height/this.resolution;for(let m=0;m<e.length;m++){const _=e[m],y=$.measureText(_,a,i,!1);y.lineHeight=y.height;const v=y.width*h,b=Math.ceil((a.fontStyle==="italic"?2:1)*v),w=y.height*h,S=b+u*2,T=w+u*2;if(f=!1,_!==`
`&&_!=="\r"&&_!=="	"&&_!==" "&&(f=!0,p=Math.ceil(Math.max(T,p))),l+S>g&&(c+=p,p=T,l=0,c+p>x)){o.update();const A=this._nextPage();i=A.canvasAndContext.canvas,s=A.canvasAndContext.context,o=A.texture.source,c=0}const P=v/h-(a.dropShadow?.distance??0)-(a._stroke?.width??0);if(this.chars[_]={id:_.codePointAt(0),xOffset:-this._padding,yOffset:-this._padding,xAdvance:P,kerning:{}},f){this._drawGlyph(s,y,l+u,c+u,h,a);const A=o.width*h,C=o.height*h,M=new d.Rectangle(l/A*o.width,c/C*o.height,S/A*o.width,T/C*o.height);this.chars[_].texture=new d.Texture({source:o,frame:M}),l+=Math.ceil(S)}}o.update(),this._currentX=l,this._currentY=c,this._skipKerning&&this._applyKerning(e,s)}get pageTextures(){return d.deprecation(d.v8_0_0,"BitmapFont.pageTextures is deprecated, please use BitmapFont.pages instead."),this.pages}_applyKerning(t,e){const r=this._measureCache;for(let i=0;i<t.length;i++){const s=t[i];for(let o=0;o<this._currentChars.length;o++){const a=this._currentChars[o];let l=r[s];l||(l=r[s]=e.measureText(s).width);let c=r[a];c||(c=r[a]=e.measureText(a).width);let h=e.measureText(s+a).width,u=h-(l+c);u&&(this.chars[s].kerning[a]=u),h=e.measureText(s+a).width,u=h-(l+c),u&&(this.chars[a].kerning[s]=u)}}}_nextPage(){this._currentPageIndex++;const t=this.resolution,e=J.getOptimalCanvasAndContext(this._textureSize,this._textureSize,t);this._setupContext(e.context,this._style,t);const r=t*(this.baseRenderedFontSize/this.baseMeasurementFontSize),i=new d.Texture({source:new d.ImageSource({resource:e.canvas,resolution:r,alphaMode:"premultiply-alpha-on-upload",autoGenerateMipmaps:this._mipmap})}),s={canvasAndContext:e,texture:i};return this.pages[this._currentPageIndex]=s,s}_setupContext(t,e,r){e.fontSize=this.baseRenderedFontSize,t.scale(r,r),t.font=Gt(e),e.fontSize=this.baseMeasurementFontSize,t.textBaseline=e.textBaseline;const i=e._stroke,s=i?.width??0;if(i&&(t.lineWidth=s,t.lineJoin=i.join,t.miterLimit=i.miterLimit,t.strokeStyle=Ut(i,t)),e._fill&&(t.fillStyle=Ut(e._fill,t)),e.dropShadow){const o=e.dropShadow,a=d.Color.shared.setValue(o.color).toArray(),l=o.blur*r,c=o.distance*r;t.shadowColor=`rgba(${a[0]*255},${a[1]*255},${a[2]*255},${o.alpha})`,t.shadowBlur=l,t.shadowOffsetX=Math.cos(o.angle)*c,t.shadowOffsetY=Math.sin(o.angle)*c}else t.shadowColor="black",t.shadowBlur=0,t.shadowOffsetX=0,t.shadowOffsetY=0}_drawGlyph(t,e,r,i,s,o){const a=e.text,l=e.fontProperties,h=(o._stroke?.width??0)*s,u=r+h/2,p=i-h/2,f=l.descent*s,g=e.lineHeight*s;o.stroke&&h&&t.strokeText(a,u,p+g-f),o._fill&&t.fillText(a,u,p+g-f)}destroy(){super.destroy();for(let t=0;t<this.pages.length;t++){const{canvasAndContext:e,texture:r}=this.pages[t];J.returnCanvasAndContext(e),r.destroy(!0)}this.pages=null}};ni.defaultOptions={textureSize:512,style:new j,mipmap:!0};let pr=ni;function oi(n,t,e,r){const i={width:0,height:0,offsetY:0,scale:t.fontSize/e.baseMeasurementFontSize,lines:[{width:0,charPositions:[],spaceWidth:0,spacesIndex:[],chars:[]}]};i.offsetY=e.baseLineOffset;let s=i.lines[0],o=null,a=!0;const l={spaceWord:!1,width:0,start:0,index:0,positions:[],chars:[]},c=g=>{const x=s.width;for(let m=0;m<l.index;m++){const _=g.positions[m];s.chars.push(g.chars[m]),s.charPositions.push(_+x)}s.width+=g.width,a=!1,l.width=0,l.index=0,l.chars.length=0},h=()=>{let g=s.chars.length-1;if(r){let x=s.chars[g];for(;x===" ";)s.width-=e.chars[x].xAdvance,x=s.chars[--g]}i.width=Math.max(i.width,s.width),s={width:0,charPositions:[],chars:[],spaceWidth:0,spacesIndex:[]},a=!0,i.lines.push(s),i.height+=e.lineHeight},u=e.baseMeasurementFontSize/t.fontSize,p=t.letterSpacing*u,f=t.wordWrapWidth*u;for(let g=0;g<n.length+1;g++){let x;const m=g===n.length;m||(x=n[g]);const _=e.chars[x]||e.chars[" "];if(/(?:\s)/.test(x)||x==="\r"||x===`
`||m){if(!a&&t.wordWrap&&s.width+l.width-p>f?(h(),c(l),m||s.charPositions.push(0)):(l.start=s.width,c(l),m||s.charPositions.push(0)),x==="\r"||x===`
`)s.width!==0&&h();else if(!m){const w=_.xAdvance+(_.kerning[o]||0)+p;s.width+=w,s.spaceWidth=w,s.spacesIndex.push(s.charPositions.length),s.chars.push(x)}}else{const b=_.kerning[o]||0,w=_.xAdvance+b+p;l.positions[l.index++]=l.width+b,l.chars.push(x),l.width+=w}o=x}return h(),t.align==="center"?Bs(i):t.align==="right"?ks(i):t.align==="justify"&&Rs(i),i}function Bs(n){for(let t=0;t<n.lines.length;t++){const e=n.lines[t],r=n.width/2-e.width/2;for(let i=0;i<e.charPositions.length;i++)e.charPositions[i]+=r}}function ks(n){for(let t=0;t<n.lines.length;t++){const e=n.lines[t],r=n.width-e.width;for(let i=0;i<e.charPositions.length;i++)e.charPositions[i]+=r}}function Rs(n){const t=n.width;for(let e=0;e<n.lines.length;e++){const r=n.lines[e];let i=0,s=r.spacesIndex[i++],o=0;const a=r.spacesIndex.length,c=(t-r.width)/a;for(let h=0;h<r.charPositions.length;h++)h===s&&(s=r.spacesIndex[i++],o+=c),r.charPositions[h]+=o}}let Bt=0;class As{constructor(){this.ALPHA=[["a","z"],["A","Z"]," "],this.NUMERIC=[["0","9"]],this.ALPHANUMERIC=[["a","z"],["A","Z"],["0","9"]," "],this.ASCII=[[" ","~"]],this.defaultOptions={chars:this.ALPHANUMERIC,resolution:1,padding:4,skipKerning:!1}}getFont(t,e){let r=`${e.fontFamily}-bitmap`,i=!0;if(e._fill.fill&&!e._stroke)r+=e._fill.fill.styleKey,i=!1;else if(e._stroke||e.dropShadow){let o=e.styleKey;o=o.substring(0,o.lastIndexOf("-")),r=`${o}-bitmap`,i=!1}if(!d.Cache.has(r)){const o=new pr({style:e,overrideFill:i,overrideSize:!0,...this.defaultOptions});Bt++,Bt>50&&d.warn("BitmapText",`You have dynamically created ${Bt} bitmap fonts, this can be inefficient. Try pre installing your font styles using \`BitmapFont.install({name:"style1", style})\``),o.once("destroy",()=>{Bt--,d.Cache.remove(r)}),d.Cache.set(r,o)}const s=d.Cache.get(r);return s.ensureCharacters?.(t),s}getLayout(t,e,r=!0){const i=this.getFont(t,e);return oi([...t],e,i,r)}measureText(t,e,r=!0){return this.getLayout(t,e,r)}install(...t){let e=t[0];typeof e=="string"&&(e={name:e,style:t[1],chars:t[2]?.chars,resolution:t[2]?.resolution,padding:t[2]?.padding,skipKerning:t[2]?.skipKerning},d.deprecation(d.v8_0_0,"BitmapFontManager.install(name, style, options) is deprecated, use BitmapFontManager.install({name, style, ...options})"));const r=e?.name;if(!r)throw new Error("[BitmapFontManager] Property `name` is required.");e={...this.defaultOptions,...e};const i=e.style,s=i instanceof j?i:new j(i),o=s._fill.fill!==null&&s._fill.fill!==void 0,a=new pr({style:s,overrideFill:o,skipKerning:e.skipKerning,padding:e.padding,resolution:e.resolution,overrideSize:!1}),l=ii(e.chars);return a.ensureCharacters(l.join("")),d.Cache.set(`${r}-bitmap`,a),a.once("destroy",()=>d.Cache.remove(`${r}-bitmap`)),a}uninstall(t){const e=`${t}-bitmap`,r=d.Cache.get(e);r&&r.destroy()}}const Fs=new As;class ai{constructor(t){this._renderer=t}push(t,e,r){this._renderer.renderPipes.batch.break(r),r.add({renderPipeId:"filter",canBundle:!1,action:"pushFilter",container:e,filterEffect:t})}pop(t,e,r){this._renderer.renderPipes.batch.break(r),r.add({renderPipeId:"filter",action:"popFilter",canBundle:!1})}execute(t){t.action==="pushFilter"?this._renderer.filter.push(t):t.action==="popFilter"&&this._renderer.filter.pop()}destroy(){this._renderer=null}}ai.extension={type:[d.ExtensionType.WebGLPipes,d.ExtensionType.WebGPUPipes,d.ExtensionType.CanvasPipes],name:"filter"};const zs=new d.Matrix;function Es(n,t){t.clear(),li(n,t),t.isValid||t.set(0,0,0,0);const e=n.renderGroup||n.parentRenderGroup;return t.applyMatrix(e.worldTransform),t}function li(n,t){if(n.localDisplayStatus!==7||!n.measurable)return;const e=!!n.effects.length;let r=t;if((n.renderGroup||e)&&(r=d.boundsPool.get().clear()),n.boundsArea)t.addRect(n.boundsArea,n.worldTransform);else{if(n.renderPipeId){const s=n.bounds;r.addFrame(s.minX,s.minY,s.maxX,s.maxY,n.groupTransform)}const i=n.children;for(let s=0;s<i.length;s++)li(i[s],r)}if(e){let i=!1;const s=n.renderGroup||n.parentRenderGroup;for(let o=0;o<n.effects.length;o++)n.effects[o].addBounds&&(i||(i=!0,r.applyMatrix(s.worldTransform)),n.effects[o].addBounds(r,!0));i&&(r.applyMatrix(s.worldTransform.copyTo(zs).invert()),t.addBounds(r,n.relativeGroupTransform)),t.addBounds(r),d.boundsPool.return(r)}else n.renderGroup&&(t.addBounds(r,n.relativeGroupTransform),d.boundsPool.return(r))}function Is(n,t){t.clear();const e=t.matrix;for(let r=0;r<n.length;r++){const i=n[r];i.globalDisplayStatus<7||(t.matrix=i.worldTransform,t.addBounds(i.bounds))}return t.matrix=e,t}const Gs=new Lt({attributes:{aPosition:{buffer:new Float32Array([0,0,1,0,1,1,0,1]),format:"float32x2",stride:2*4,offset:0}},indexBuffer:new Uint32Array([0,1,2,0,2,3])});class hi{constructor(t){this._filterStackIndex=0,this._filterStack=[],this._filterGlobalUniforms=new N({uInputSize:{value:new Float32Array(4),type:"vec4<f32>"},uInputPixel:{value:new Float32Array(4),type:"vec4<f32>"},uInputClamp:{value:new Float32Array(4),type:"vec4<f32>"},uOutputFrame:{value:new Float32Array(4),type:"vec4<f32>"},uGlobalFrame:{value:new Float32Array(4),type:"vec4<f32>"},uOutputTexture:{value:new Float32Array(4),type:"vec4<f32>"}}),this._globalFilterBindGroup=new it({}),this.renderer=t}get activeBackTexture(){return this._activeFilterData?.backTexture}push(t){const e=this.renderer,r=t.filterEffect.filters;this._filterStack[this._filterStackIndex]||(this._filterStack[this._filterStackIndex]=this._getFilterData());const i=this._filterStack[this._filterStackIndex];if(this._filterStackIndex++,r.length===0){i.skip=!0;return}const s=i.bounds;if(t.renderables?Is(t.renderables,s):t.filterEffect.filterArea?(s.clear(),s.addRect(t.filterEffect.filterArea),s.applyMatrix(t.container.worldTransform)):Es(t.container,s),t.container){const g=(t.container.renderGroup||t.container.parentRenderGroup).cacheToLocalTransform;g&&s.applyMatrix(g)}const o=e.renderTarget.renderTarget.colorTexture.source;let a=1/0,l=0,c=!0,h=!1,u=!1,p=!0;for(let f=0;f<r.length;f++){const g=r[f];if(a=Math.min(a,g.resolution==="inherit"?o._resolution:g.resolution),l+=g.padding,g.antialias==="off"?c=!1:g.antialias==="inherit"&&c&&(c=o.antialias),g.clipToViewport||(p=!1),!!!(g.compatibleRenderers&e.type)){u=!1;break}if(g.blendRequired&&!(e.backBuffer?.useBackBuffer??!0)){d.warn("Blend filter requires backBuffer on WebGL renderer to be enabled. Set `useBackBuffer: true` in the renderer options."),u=!1;break}u=g.enabled||u,h||(h=g.blendRequired)}if(!u){i.skip=!0;return}if(p){const f=e.renderTarget.rootViewPort,g=e.renderTarget.renderTarget.resolution;s.fitBounds(0,f.width/g,0,f.height/g)}if(s.scale(a).ceil().scale(1/a).pad(l|0),!s.isPositive){i.skip=!0;return}i.skip=!1,i.bounds=s,i.blendRequired=h,i.container=t.container,i.filterEffect=t.filterEffect,i.previousRenderSurface=e.renderTarget.renderSurface,i.inputTexture=d.TexturePool.getOptimalTexture(s.width,s.height,a,c),e.renderTarget.bind(i.inputTexture,!0),e.globalUniforms.push({offset:s})}pop(){const t=this.renderer;this._filterStackIndex--;const e=this._filterStack[this._filterStackIndex];if(e.skip)return;this._activeFilterData=e;const r=e.inputTexture,i=e.bounds;let s=d.Texture.EMPTY;if(t.renderTarget.finishRenderPass(),e.blendRequired){const a=this._filterStackIndex>0?this._filterStack[this._filterStackIndex-1].bounds:null,l=t.renderTarget.getRenderTarget(e.previousRenderSurface);s=this.getBackTexture(l,i,a)}e.backTexture=s;const o=e.filterEffect.filters;if(this._globalFilterBindGroup.setResource(r.source.style,2),this._globalFilterBindGroup.setResource(s.source,3),t.globalUniforms.pop(),o.length===1)o[0].apply(this,r,e.previousRenderSurface,!1),d.TexturePool.returnTexture(r);else{let a=e.inputTexture,l=d.TexturePool.getOptimalTexture(i.width,i.height,a.source._resolution,!1),c=0;for(c=0;c<o.length-1;++c){o[c].apply(this,a,l,!0);const u=a;a=l,l=u}o[c].apply(this,a,e.previousRenderSurface,!1),d.TexturePool.returnTexture(a),d.TexturePool.returnTexture(l)}e.blendRequired&&d.TexturePool.returnTexture(s)}getBackTexture(t,e,r){const i=t.colorTexture.source._resolution,s=d.TexturePool.getOptimalTexture(e.width,e.height,i,!1);let o=e.minX,a=e.minY;r&&(o-=r.minX,a-=r.minY),o=Math.floor(o*i),a=Math.floor(a*i);const l=Math.ceil(e.width*i),c=Math.ceil(e.height*i);return this.renderer.renderTarget.copyToTexture(t,s,{x:o,y:a},{width:l,height:c},{x:0,y:0}),s}applyFilter(t,e,r,i){const s=this.renderer,o=this._filterStack[this._filterStackIndex],a=o.bounds,l=d.Point.shared,h=o.previousRenderSurface===r;let u=this.renderer.renderTarget.rootRenderTarget.colorTexture.source._resolution,p=this._filterStackIndex-1;for(;p>0&&this._filterStack[p].skip;)--p;p>0&&(u=this._filterStack[p].inputTexture.source._resolution);const f=this._filterGlobalUniforms,g=f.uniforms,x=g.uOutputFrame,m=g.uInputSize,_=g.uInputPixel,y=g.uInputClamp,v=g.uGlobalFrame,b=g.uOutputTexture;if(h){let T=this._filterStackIndex;for(;T>0;){T--;const P=this._filterStack[this._filterStackIndex-1];if(!P.skip){l.x=P.bounds.minX,l.y=P.bounds.minY;break}}x[0]=a.minX-l.x,x[1]=a.minY-l.y}else x[0]=0,x[1]=0;x[2]=e.frame.width,x[3]=e.frame.height,m[0]=e.source.width,m[1]=e.source.height,m[2]=1/m[0],m[3]=1/m[1],_[0]=e.source.pixelWidth,_[1]=e.source.pixelHeight,_[2]=1/_[0],_[3]=1/_[1],y[0]=.5*_[2],y[1]=.5*_[3],y[2]=e.frame.width*m[2]-.5*_[2],y[3]=e.frame.height*m[3]-.5*_[3];const w=this.renderer.renderTarget.rootRenderTarget.colorTexture;v[0]=l.x*u,v[1]=l.y*u,v[2]=w.source.width*u,v[3]=w.source.height*u;const S=this.renderer.renderTarget.getRenderTarget(r);if(s.renderTarget.bind(r,!!i),r instanceof d.Texture?(b[0]=r.frame.width,b[1]=r.frame.height):(b[0]=S.width,b[1]=S.height),b[2]=S.isRoot?-1:1,f.update(),s.renderPipes.uniformBatch){const T=s.renderPipes.uniformBatch.getUboResource(f);this._globalFilterBindGroup.setResource(T,0)}else this._globalFilterBindGroup.setResource(f,0);this._globalFilterBindGroup.setResource(e.source,1),this._globalFilterBindGroup.setResource(e.source.style,2),t.groups[0]=this._globalFilterBindGroup,s.encoder.draw({geometry:Gs,shader:t,state:t._state,topology:"triangle-list"}),s.type===nt.WEBGL&&s.renderTarget.finishRenderPass()}_getFilterData(){return{skip:!1,inputTexture:null,bounds:new d.Bounds,container:null,filterEffect:null,blendRequired:!1,previousRenderSurface:null}}calculateSpriteMatrix(t,e){const r=this._activeFilterData,i=t.set(r.inputTexture._source.width,0,0,r.inputTexture._source.height,r.bounds.minX,r.bounds.minY),s=e.worldTransform.copyTo(d.Matrix.shared),o=e.renderGroup||e.parentRenderGroup;return o&&o.cacheToLocalTransform&&s.prepend(o.cacheToLocalTransform),s.invert(),i.prepend(s),i.scale(1/e.texture.frame.width,1/e.texture.frame.height),i.translate(e.anchor.x,e.anchor.y),i}}hi.extension={type:[d.ExtensionType.WebGLSystem,d.ExtensionType.WebGPUSystem],name:"filter"};class Dt extends d.ViewContainer{constructor(t){t instanceof D&&(t={context:t});const{context:e,roundPixels:r,...i}=t||{};super({label:"Graphics",...i}),this.renderPipeId="graphics",e?this._context=e:this._context=this._ownedContext=new D,this._context.on("update",this.onViewUpdate,this),this.allowChildren=!1,this.roundPixels=r??!1}set context(t){t!==this._context&&(this._context.off("update",this.onViewUpdate,this),this._context=t,this._context.on("update",this.onViewUpdate,this),this.onViewUpdate())}get context(){return this._context}get bounds(){return this._context.bounds}updateBounds(){}containsPoint(t){return this._context.containsPoint(t)}destroy(t){this._ownedContext&&!t?this._ownedContext.destroy(t):(t===!0||t?.context===!0)&&this._context.destroy(t),this._ownedContext=null,this._context=null,super.destroy(t)}_callContextMethod(t,e){return this.context[t](...e),this}setFillStyle(...t){return this._callContextMethod("setFillStyle",t)}setStrokeStyle(...t){return this._callContextMethod("setStrokeStyle",t)}fill(...t){return this._callContextMethod("fill",t)}stroke(...t){return this._callContextMethod("stroke",t)}texture(...t){return this._callContextMethod("texture",t)}beginPath(){return this._callContextMethod("beginPath",[])}cut(){return this._callContextMethod("cut",[])}arc(...t){return this._callContextMethod("arc",t)}arcTo(...t){return this._callContextMethod("arcTo",t)}arcToSvg(...t){return this._callContextMethod("arcToSvg",t)}bezierCurveTo(...t){return this._callContextMethod("bezierCurveTo",t)}closePath(){return this._callContextMethod("closePath",[])}ellipse(...t){return this._callContextMethod("ellipse",t)}circle(...t){return this._callContextMethod("circle",t)}path(...t){return this._callContextMethod("path",t)}lineTo(...t){return this._callContextMethod("lineTo",t)}moveTo(...t){return this._callContextMethod("moveTo",t)}quadraticCurveTo(...t){return this._callContextMethod("quadraticCurveTo",t)}rect(...t){return this._callContextMethod("rect",t)}roundRect(...t){return this._callContextMethod("roundRect",t)}poly(...t){return this._callContextMethod("poly",t)}regularPoly(...t){return this._callContextMethod("regularPoly",t)}roundPoly(...t){return this._callContextMethod("roundPoly",t)}roundShape(...t){return this._callContextMethod("roundShape",t)}filletRect(...t){return this._callContextMethod("filletRect",t)}chamferRect(...t){return this._callContextMethod("chamferRect",t)}star(...t){return this._callContextMethod("star",t)}svg(...t){return this._callContextMethod("svg",t)}restore(...t){return this._callContextMethod("restore",t)}save(){return this._callContextMethod("save",[])}getTransform(){return this.context.getTransform()}resetTransform(){return this._callContextMethod("resetTransform",[])}rotateTransform(...t){return this._callContextMethod("rotate",t)}scaleTransform(...t){return this._callContextMethod("scale",t)}setTransform(...t){return this._callContextMethod("setTransform",t)}transform(...t){return this._callContextMethod("transform",t)}translateTransform(...t){return this._callContextMethod("translate",t)}clear(){return this._callContextMethod("clear",[])}get fillStyle(){return this._context.fillStyle}set fillStyle(t){this._context.fillStyle=t}get strokeStyle(){return this._context.strokeStyle}set strokeStyle(t){this._context.strokeStyle=t}clone(t=!1){return t?new Dt(this._context.clone()):(this._ownedContext=null,new Dt(this._context))}lineStyle(t,e,r){d.deprecation(d.v8_0_0,"Graphics#lineStyle is no longer needed. Use Graphics#setStrokeStyle to set the stroke style.");const i={};return t&&(i.width=t),e&&(i.color=e),r&&(i.alpha=r),this.context.strokeStyle=i,this}beginFill(t,e){d.deprecation(d.v8_0_0,"Graphics#beginFill is no longer needed. Use Graphics#fill to fill the shape with the desired style.");const r={};return t!==void 0&&(r.color=t),e!==void 0&&(r.alpha=e),this.context.fillStyle=r,this}endFill(){d.deprecation(d.v8_0_0,"Graphics#endFill is no longer needed. Use Graphics#fill to fill the shape with the desired style."),this.context.fill();const t=this.context.strokeStyle;return(t.width!==D.defaultStrokeStyle.width||t.color!==D.defaultStrokeStyle.color||t.alpha!==D.defaultStrokeStyle.alpha)&&this.context.stroke(),this}drawCircle(...t){return d.deprecation(d.v8_0_0,"Graphics#drawCircle has been renamed to Graphics#circle"),this._callContextMethod("circle",t)}drawEllipse(...t){return d.deprecation(d.v8_0_0,"Graphics#drawEllipse has been renamed to Graphics#ellipse"),this._callContextMethod("ellipse",t)}drawPolygon(...t){return d.deprecation(d.v8_0_0,"Graphics#drawPolygon has been renamed to Graphics#poly"),this._callContextMethod("poly",t)}drawRect(...t){return d.deprecation(d.v8_0_0,"Graphics#drawRect has been renamed to Graphics#rect"),this._callContextMethod("rect",t)}drawRoundedRect(...t){return d.deprecation(d.v8_0_0,"Graphics#drawRoundedRect has been renamed to Graphics#roundRect"),this._callContextMethod("roundRect",t)}drawStar(...t){return d.deprecation(d.v8_0_0,"Graphics#drawStar has been renamed to Graphics#star"),this._callContextMethod("star",t)}}const ci=class ui extends Lt{constructor(...t){let e=t[0]??{};e instanceof Float32Array&&(d.deprecation(d.v8_0_0,"use new MeshGeometry({ positions, uvs, indices }) instead"),e={positions:e,uvs:t[1],indices:t[2]}),e={...ui.defaultOptions,...e};const r=e.positions||new Float32Array([0,0,1,0,1,1,0,1]),i=e.uvs||new Float32Array([0,0,1,0,1,1,0,1]),s=e.indices||new Uint32Array([0,1,2,0,2,3]),o=e.shrinkBuffersToFit,a=new H({data:r,label:"attribute-mesh-positions",shrinkToFit:o,usage:E.VERTEX|E.COPY_DST}),l=new H({data:i,label:"attribute-mesh-uvs",shrinkToFit:o,usage:E.VERTEX|E.COPY_DST}),c=new H({data:s,label:"index-mesh-buffer",shrinkToFit:o,usage:E.INDEX|E.COPY_DST});super({attributes:{aPosition:{buffer:a,format:"float32x2",stride:2*4,offset:0},aUV:{buffer:l,format:"float32x2",stride:2*4,offset:0}},indexBuffer:c,topology:e.topology}),this.batchMode="auto"}get positions(){return this.attributes.aPosition.buffer.data}set positions(t){this.attributes.aPosition.buffer.data=t}get uvs(){return this.attributes.aUV.buffer.data}set uvs(t){this.attributes.aUV.buffer.data=t}get indices(){return this.indexBuffer.data}set indices(t){this.indexBuffer.data=t}};ci.defaultOptions={topology:"triangle-list",shrinkBuffersToFit:!1};let Ie=ci;function Us(n){const t=n._stroke,e=n._fill,i=[`div { ${[`color: ${d.Color.shared.setValue(e.color).toHex()}`,`font-size: ${n.fontSize}px`,`font-family: ${n.fontFamily}`,`font-weight: ${n.fontWeight}`,`font-style: ${n.fontStyle}`,`font-variant: ${n.fontVariant}`,`letter-spacing: ${n.letterSpacing}px`,`text-align: ${n.align}`,`padding: ${n.padding}px`,`white-space: ${n.whiteSpace==="pre"&&n.wordWrap?"pre-wrap":n.whiteSpace}`,...n.lineHeight?[`line-height: ${n.lineHeight}px`]:[],...n.wordWrap?[`word-wrap: ${n.breakWords?"break-all":"break-word"}`,`max-width: ${n.wordWrapWidth}px`]:[],...t?[fi(t)]:[],...n.dropShadow?[di(n.dropShadow)]:[],...n.cssOverrides].join(";")} }`];return Ds(n.tagStyles,i),i.join(" ")}function di(n){const t=d.Color.shared.setValue(n.color).setAlpha(n.alpha).toHexa(),e=Math.round(Math.cos(n.angle)*n.distance),r=Math.round(Math.sin(n.angle)*n.distance),i=`${e}px ${r}px`;return n.blur>0?`text-shadow: ${i} ${n.blur}px ${t}`:`text-shadow: ${i} ${t}`}function fi(n){return[`-webkit-text-stroke-width: ${n.width}px`,`-webkit-text-stroke-color: ${d.Color.shared.setValue(n.color).toHex()}`,`text-stroke-width: ${n.width}px`,`text-stroke-color: ${d.Color.shared.setValue(n.color).toHex()}`,"paint-order: stroke"].join(";")}const gr={fontSize:"font-size: {{VALUE}}px",fontFamily:"font-family: {{VALUE}}",fontWeight:"font-weight: {{VALUE}}",fontStyle:"font-style: {{VALUE}}",fontVariant:"font-variant: {{VALUE}}",letterSpacing:"letter-spacing: {{VALUE}}px",align:"text-align: {{VALUE}}",padding:"padding: {{VALUE}}px",whiteSpace:"white-space: {{VALUE}}",lineHeight:"line-height: {{VALUE}}px",wordWrapWidth:"max-width: {{VALUE}}px"},mr={fill:n=>`color: ${d.Color.shared.setValue(n).toHex()}`,breakWords:n=>`word-wrap: ${n?"break-all":"break-word"}`,stroke:fi,dropShadow:di};function Ds(n,t){for(const e in n){const r=n[e],i=[];for(const s in r)mr[s]?i.push(mr[s](r[s])):gr[s]&&i.push(gr[s].replace("{{VALUE}}",r[s]));t.push(`${e} { ${i.join(";")} }`)}}class Ge extends j{constructor(t={}){super(t),this._cssOverrides=[],this.cssOverrides??(this.cssOverrides=t.cssOverrides),this.tagStyles=t.tagStyles??{}}set cssOverrides(t){this._cssOverrides=t instanceof Array?t:[t],this.update()}get cssOverrides(){return this._cssOverrides}_generateKey(){return this._styleKey=ei(this)+this._cssOverrides.join("-"),this._styleKey}update(){this._cssStyle=null,super.update()}clone(){return new Ge({align:this.align,breakWords:this.breakWords,dropShadow:this.dropShadow?{...this.dropShadow}:null,fill:this._fill,fontFamily:this.fontFamily,fontSize:this.fontSize,fontStyle:this.fontStyle,fontVariant:this.fontVariant,fontWeight:this.fontWeight,letterSpacing:this.letterSpacing,lineHeight:this.lineHeight,padding:this.padding,stroke:this._stroke,whiteSpace:this.whiteSpace,wordWrap:this.wordWrap,wordWrapWidth:this.wordWrapWidth,cssOverrides:this.cssOverrides})}get cssStyle(){return this._cssStyle||(this._cssStyle=Us(this)),this._cssStyle}addOverride(...t){const e=t.filter(r=>!this.cssOverrides.includes(r));e.length>0&&(this.cssOverrides.push(...e),this.update())}removeOverride(...t){const e=t.filter(r=>this.cssOverrides.includes(r));e.length>0&&(this.cssOverrides=this.cssOverrides.filter(r=>!e.includes(r)),this.update())}set fill(t){typeof t!="string"&&typeof t!="number"&&d.warn("[HTMLTextStyle] only color fill is not supported by HTMLText"),super.fill=t}set stroke(t){t&&typeof t!="string"&&typeof t!="number"&&d.warn("[HTMLTextStyle] only color stroke is not supported by HTMLText"),super.stroke=t}}const xr="http://www.w3.org/2000/svg",_r="http://www.w3.org/1999/xhtml";class pi{constructor(){this.svgRoot=document.createElementNS(xr,"svg"),this.foreignObject=document.createElementNS(xr,"foreignObject"),this.domElement=document.createElementNS(_r,"div"),this.styleElement=document.createElementNS(_r,"style"),this.image=new Image;const{foreignObject:t,svgRoot:e,styleElement:r,domElement:i}=this;t.setAttribute("width","10000"),t.setAttribute("height","10000"),t.style.overflow="hidden",e.appendChild(t),t.appendChild(r),t.appendChild(i)}}let yr;function Ws(n,t,e,r){r||(r=yr||(yr=new pi));const{domElement:i,styleElement:s,svgRoot:o}=r;i.innerHTML=`<style>${t.cssStyle};</style><div style='padding:0'>${n}</div>`,i.setAttribute("style","transform-origin: top left; display: inline-block"),e&&(s.textContent=e),document.body.appendChild(o);const a=i.getBoundingClientRect();o.remove();const l=t.padding*2;return{width:a.width-l,height:a.height-l}}const Ft={name:"local-uniform-bit",vertex:{header:`

            struct LocalUniforms {
                uTransformMatrix:mat3x3<f32>,
                uColor:vec4<f32>,
                uRound:f32,
            }

            @group(1) @binding(0) var<uniform> localUniforms : LocalUniforms;
        `,main:`
            vColor *= localUniforms.uColor;
            modelMatrix *= localUniforms.uTransformMatrix;
        `,end:`
            if(localUniforms.uRound == 1)
            {
                vPosition = vec4(roundPixels(vPosition.xy, globalUniforms.uResolution), vPosition.zw);
            }
        `}};({...Ft,vertex:{...Ft.vertex,header:Ft.vertex.header.replace("group(1)","group(2)")}});const Ls={name:"local-uniform-bit",vertex:{header:`

            uniform mat3 uTransformMatrix;
            uniform vec4 uColor;
            uniform float uRound;
        `,main:`
            vColor *= uColor;
            modelMatrix = uTransformMatrix;
        `,end:`
            if(uRound == 1.)
            {
                gl_Position.xy = roundPixels(gl_Position.xy, uResolution);
            }
        `}};class gi{constructor(){this.batcherName="default",this.topology="triangle-list",this.attributeSize=4,this.indexSize=6,this.packAsQuad=!0,this.roundPixels=0,this._attributeStart=0,this._batcher=null,this._batch=null}get blendMode(){return this.renderable.groupBlendMode}get color(){return this.renderable.groupColorAlpha}reset(){this.renderable=null,this.texture=null,this._batcher=null,this._batch=null,this.bounds=null}}function Vt(n,t,e){const r=(n>>24&255)/255;t[e++]=(n&255)/255*r,t[e++]=(n>>8&255)/255*r,t[e++]=(n>>16&255)/255*r,t[e++]=r}class mi{constructor(t,e){this.state=Et.for2d(),this._graphicsBatchesHash=Object.create(null),this._destroyRenderableBound=this.destroyRenderable.bind(this),this.renderer=t,this._adaptor=e,this._adaptor.init(),this.renderer.renderableGC.addManagedHash(this,"_graphicsBatchesHash")}validateRenderable(t){const e=t.context,r=!!this._graphicsBatchesHash[t.uid],i=this.renderer.graphicsContext.updateGpuContext(e);return!!(i.isBatchable||r!==i.isBatchable)}addRenderable(t,e){const r=this.renderer.graphicsContext.updateGpuContext(t.context);t.didViewUpdate&&this._rebuild(t),r.isBatchable?this._addToBatcher(t,e):(this.renderer.renderPipes.batch.break(e),e.add(t))}updateRenderable(t){const e=this._graphicsBatchesHash[t.uid];if(e)for(let r=0;r<e.length;r++){const i=e[r];i._batcher.updateElement(i)}}destroyRenderable(t){this._graphicsBatchesHash[t.uid]&&this._removeBatchForRenderable(t.uid),t.off("destroyed",this._destroyRenderableBound)}execute(t){if(!t.isRenderable)return;const e=this.renderer,r=t.context;if(!e.graphicsContext.getGpuContext(r).batches.length)return;const s=r.customShader||this._adaptor.shader;this.state.blendMode=t.groupBlendMode;const o=s.resources.localUniforms.uniforms;o.uTransformMatrix=t.groupTransform,o.uRound=e._roundPixels|t._roundPixels,Vt(t.groupColorAlpha,o.uColor,0),this._adaptor.execute(this,t)}_rebuild(t){const e=!!this._graphicsBatchesHash[t.uid],r=this.renderer.graphicsContext.updateGpuContext(t.context);e&&this._removeBatchForRenderable(t.uid),r.isBatchable&&this._initBatchesForRenderable(t),t.batched=r.isBatchable}_addToBatcher(t,e){const r=this.renderer.renderPipes.batch,i=this._getBatchesForRenderable(t);for(let s=0;s<i.length;s++){const o=i[s];r.addToBatch(o,e)}}_getBatchesForRenderable(t){return this._graphicsBatchesHash[t.uid]||this._initBatchesForRenderable(t)}_initBatchesForRenderable(t){const e=t.context,r=this.renderer.graphicsContext.getGpuContext(e),i=this.renderer._roundPixels|t._roundPixels,s=r.batches.map(o=>{const a=d.BigPool.get(Re);return o.copyTo(a),a.renderable=t,a.roundPixels=i,a});return this._graphicsBatchesHash[t.uid]===void 0&&t.on("destroyed",this._destroyRenderableBound),this._graphicsBatchesHash[t.uid]=s,s}_removeBatchForRenderable(t){this._graphicsBatchesHash[t].forEach(e=>{d.BigPool.return(e)}),this._graphicsBatchesHash[t]=null}destroy(){this.renderer=null,this._adaptor.destroy(),this._adaptor=null,this.state=null;for(const t in this._graphicsBatchesHash)this._removeBatchForRenderable(t);this._graphicsBatchesHash=null}}mi.extension={type:[d.ExtensionType.WebGLPipes,d.ExtensionType.WebGPUPipes,d.ExtensionType.CanvasPipes],name:"graphics"};const xi=class _i extends Ie{constructor(...t){super({});let e=t[0]??{};typeof e=="number"&&(d.deprecation(d.v8_0_0,"PlaneGeometry constructor changed please use { width, height, verticesX, verticesY } instead"),e={width:e,height:t[1],verticesX:t[2],verticesY:t[3]}),this.build(e)}build(t){t={..._i.defaultOptions,...t},this.verticesX=this.verticesX??t.verticesX,this.verticesY=this.verticesY??t.verticesY,this.width=this.width??t.width,this.height=this.height??t.height;const e=this.verticesX*this.verticesY,r=[],i=[],s=[],o=this.verticesX-1,a=this.verticesY-1,l=this.width/o,c=this.height/a;for(let u=0;u<e;u++){const p=u%this.verticesX,f=u/this.verticesX|0;r.push(p*l,f*c),i.push(p/o,f/a)}const h=o*a;for(let u=0;u<h;u++){const p=u%o,f=u/o|0,g=f*this.verticesX+p,x=f*this.verticesX+p+1,m=(f+1)*this.verticesX+p,_=(f+1)*this.verticesX+p+1;s.push(g,x,m,x,_,m)}this.buffers[0].data=new Float32Array(r),this.buffers[1].data=new Float32Array(i),this.indexBuffer.data=new Uint32Array(s),this.buffers[0].update(),this.buffers[1].update(),this.indexBuffer.update()}};xi.defaultOptions={width:100,height:100,verticesX:10,verticesY:10};let Hs=xi;class Ue{constructor(){this.batcherName="default",this.packAsQuad=!1,this.indexOffset=0,this.attributeOffset=0,this.roundPixels=0,this._batcher=null,this._batch=null,this._uvUpdateId=-1,this._textureMatrixUpdateId=-1}get blendMode(){return this.renderable.groupBlendMode}get topology(){return this._topology||this.geometry.topology}set topology(t){this._topology=t}reset(){this.renderable=null,this.texture=null,this._batcher=null,this._batch=null,this.geometry=null,this._uvUpdateId=-1,this._textureMatrixUpdateId=-1}get uvs(){const e=this.geometry.getBuffer("aUV"),r=e.data;let i=r;const s=this.texture.textureMatrix;return s.isSimple||(i=this._transformedUvs,(this._textureMatrixUpdateId!==s._updateID||this._uvUpdateId!==e._updateID)&&((!i||i.length<r.length)&&(i=this._transformedUvs=new Float32Array(r.length)),this._textureMatrixUpdateId=s._updateID,this._uvUpdateId=e._updateID,s.multiplyUvs(r,i))),i}get positions(){return this.geometry.positions}get indices(){return this.geometry.indices}get color(){return this.renderable.groupColorAlpha}get groupTransform(){return this.renderable.groupTransform}get attributeSize(){return this.geometry.positions.length/2}get indexSize(){return this.geometry.indices.length}}class yi{constructor(t,e){this.localUniforms=new N({uTransformMatrix:{value:new d.Matrix,type:"mat3x3<f32>"},uColor:{value:new Float32Array([1,1,1,1]),type:"vec4<f32>"},uRound:{value:0,type:"f32"}}),this.localUniformsBindGroup=new it({0:this.localUniforms}),this._meshDataHash=Object.create(null),this._gpuBatchableMeshHash=Object.create(null),this._destroyRenderableBound=this.destroyRenderable.bind(this),this.renderer=t,this._adaptor=e,this._adaptor.init(),t.renderableGC.addManagedHash(this,"_gpuBatchableMeshHash"),t.renderableGC.addManagedHash(this,"_meshDataHash")}validateRenderable(t){const e=this._getMeshData(t),r=e.batched,i=t.batched;if(e.batched=i,r!==i)return!0;if(i){const s=t._geometry;if(s.indices.length!==e.indexSize||s.positions.length!==e.vertexSize)return e.indexSize=s.indices.length,e.vertexSize=s.positions.length,!0;const o=this._getBatchableMesh(t);return!o._batcher.checkAndUpdateTexture(o,t.texture)}return!1}addRenderable(t,e){const r=this.renderer.renderPipes.batch,{batched:i}=this._getMeshData(t);if(i){const s=this._getBatchableMesh(t);s.texture=t._texture,s.geometry=t._geometry,r.addToBatch(s,e)}else r.break(e),e.add(t)}updateRenderable(t){if(t.batched){const e=this._gpuBatchableMeshHash[t.uid];e.texture=t._texture,e.geometry=t._geometry,e._batcher.updateElement(e)}}destroyRenderable(t){this._meshDataHash[t.uid]=null;const e=this._gpuBatchableMeshHash[t.uid];e&&(d.BigPool.return(e),this._gpuBatchableMeshHash[t.uid]=null),t.off("destroyed",this._destroyRenderableBound)}execute(t){if(!t.isRenderable)return;t.state.blendMode=_t(t.groupBlendMode,t.texture._source);const e=this.localUniforms;e.uniforms.uTransformMatrix=t.groupTransform,e.uniforms.uRound=this.renderer._roundPixels|t._roundPixels,e.update(),Vt(t.groupColorAlpha,e.uniforms.uColor,0),this._adaptor.execute(this,t)}_getMeshData(t){return this._meshDataHash[t.uid]||this._initMeshData(t)}_initMeshData(t){return this._meshDataHash[t.uid]={batched:t.batched,indexSize:t._geometry.indices?.length,vertexSize:t._geometry.positions?.length},t.on("destroyed",this._destroyRenderableBound),this._meshDataHash[t.uid]}_getBatchableMesh(t){return this._gpuBatchableMeshHash[t.uid]||this._initBatchableMesh(t)}_initBatchableMesh(t){const e=d.BigPool.get(Ue);return e.renderable=t,e.texture=t._texture,e.transform=t.groupTransform,e.roundPixels=this.renderer._roundPixels|t._roundPixels,this._gpuBatchableMeshHash[t.uid]=e,e}destroy(){for(const t in this._gpuBatchableMeshHash)this._gpuBatchableMeshHash[t]&&d.BigPool.return(this._gpuBatchableMeshHash[t]);this._gpuBatchableMeshHash=null,this._meshDataHash=null,this.localUniforms=null,this.localUniformsBindGroup=null,this._adaptor.destroy(),this._adaptor=null,this.renderer=null}}yi.extension={type:[d.ExtensionType.WebGLPipes,d.ExtensionType.WebGPUPipes,d.ExtensionType.CanvasPipes],name:"mesh"};class Vs{execute(t,e){const r=t.state,i=t.renderer,s=e.shader||t.defaultShader;s.resources.uTexture=e.texture._source,s.resources.uniforms=t.localUniforms;const o=i.gl,a=t.getBuffers(e);i.shader.bind(s),i.state.set(r),i.geometry.bind(a.geometry,s.glProgram);const c=a.geometry.indexBuffer.data.BYTES_PER_ELEMENT===2?o.UNSIGNED_SHORT:o.UNSIGNED_INT;o.drawElements(o.TRIANGLES,e.particleChildren.length*6,c,0)}}class $s{execute(t,e){const r=t.renderer,i=e.shader||t.defaultShader;i.groups[0]=r.renderPipes.uniformBatch.getUniformBindGroup(t.localUniforms,!0),i.groups[1]=r.texture.getTextureBindGroup(e.texture);const s=t.state,o=t.getBuffers(e);r.encoder.draw({geometry:o.geometry,shader:e.shader||t.defaultShader,state:s,size:e.particleChildren.length*6})}}function br(n,t=null){const e=n*6;if(e>65535?t||(t=new Uint32Array(e)):t||(t=new Uint16Array(e)),t.length!==e)throw new Error(`Out buffer length is incorrect, got ${t.length} and expected ${e}`);for(let r=0,i=0;r<e;r+=6,i+=4)t[r+0]=i+0,t[r+1]=i+1,t[r+2]=i+2,t[r+3]=i+0,t[r+4]=i+2,t[r+5]=i+3;return t}function Os(n){return{dynamicUpdate:Sr(n,!0),staticUpdate:Sr(n,!1)}}function Sr(n,t){const e=[];e.push(`
      
        var index = 0;

        for (let i = 0; i < ps.length; ++i)
        {
            const p = ps[i];

            `);let r=0;for(const s in n){const o=n[s];if(t!==o.dynamic)continue;e.push(`offset = index + ${r}`),e.push(o.code);const a=zt(o.format);r+=a.stride/4}e.push(`
            index += stride * 4;
        }
    `),e.unshift(`
        var stride = ${r};
    `);const i=e.join(`
`);return new Function("ps","f32v","u32v",i)}class Ns{constructor(t){this._size=0,this._generateParticleUpdateCache={};const e=this._size=t.size??1e3,r=t.properties;let i=0,s=0;for(const h in r){const u=r[h],p=zt(u.format);u.dynamic?s+=p.stride:i+=p.stride}this._dynamicStride=s/4,this._staticStride=i/4,this.staticAttributeBuffer=new rt(e*4*i),this.dynamicAttributeBuffer=new rt(e*4*s),this.indexBuffer=br(e);const o=new Lt;let a=0,l=0;this._staticBuffer=new H({data:new Float32Array(1),label:"static-particle-buffer",shrinkToFit:!1,usage:E.VERTEX|E.COPY_DST}),this._dynamicBuffer=new H({data:new Float32Array(1),label:"dynamic-particle-buffer",shrinkToFit:!1,usage:E.VERTEX|E.COPY_DST});for(const h in r){const u=r[h],p=zt(u.format);u.dynamic?(o.addAttribute(u.attributeName,{buffer:this._dynamicBuffer,stride:this._dynamicStride*4,offset:a*4,format:u.format}),a+=p.size):(o.addAttribute(u.attributeName,{buffer:this._staticBuffer,stride:this._staticStride*4,offset:l*4,format:u.format}),l+=p.size)}o.addIndex(this.indexBuffer);const c=this.getParticleUpdate(r);this._dynamicUpload=c.dynamicUpdate,this._staticUpload=c.staticUpdate,this.geometry=o}getParticleUpdate(t){const e=js(t);return this._generateParticleUpdateCache[e]?this._generateParticleUpdateCache[e]:(this._generateParticleUpdateCache[e]=this.generateParticleUpdate(t),this._generateParticleUpdateCache[e])}generateParticleUpdate(t){return Os(t)}update(t,e){t.length>this._size&&(e=!0,this._size=Math.max(t.length,this._size*1.5|0),this.staticAttributeBuffer=new rt(this._size*this._staticStride*4*4),this.dynamicAttributeBuffer=new rt(this._size*this._dynamicStride*4*4),this.indexBuffer=br(this._size),this.geometry.indexBuffer.setDataWithSize(this.indexBuffer,this.indexBuffer.byteLength,!0));const r=this.dynamicAttributeBuffer;if(this._dynamicUpload(t,r.float32View,r.uint32View),this._dynamicBuffer.setDataWithSize(this.dynamicAttributeBuffer.float32View,t.length*this._dynamicStride*4,!0),e){const i=this.staticAttributeBuffer;this._staticUpload(t,i.float32View,i.uint32View),this._staticBuffer.setDataWithSize(i.float32View,t.length*this._staticStride*4,!0)}}destroy(){this._staticBuffer.destroy(),this._dynamicBuffer.destroy(),this.geometry.destroy()}}function js(n){const t=[];for(const e in n){const r=n[e];t.push(e,r.code,r.dynamic?"d":"s")}return t.join("_")}var Ys=`varying vec2 vUV;
varying vec4 vColor;

uniform sampler2D uTexture;

void main(void){
    vec4 color = texture2D(uTexture, vUV) * vColor;
    gl_FragColor = color;
}`,qs=`attribute vec2 aVertex;
attribute vec2 aUV;
attribute vec4 aColor;

attribute vec2 aPosition;
attribute float aRotation;

uniform mat3 uTranslationMatrix;
uniform float uRound;
uniform vec2 uResolution;
uniform vec4 uColor;

varying vec2 vUV;
varying vec4 vColor;

vec2 roundPixels(vec2 position, vec2 targetSize)
{       
    return (floor(((position * 0.5 + 0.5) * targetSize) + 0.5) / targetSize) * 2.0 - 1.0;
}

void main(void){
    float cosRotation = cos(aRotation);
    float sinRotation = sin(aRotation);
    float x = aVertex.x * cosRotation - aVertex.y * sinRotation;
    float y = aVertex.x * sinRotation + aVertex.y * cosRotation;

    vec2 v = vec2(x, y);
    v = v + aPosition;

    gl_Position = vec4((uTranslationMatrix * vec3(v, 1.0)).xy, 0.0, 1.0);

    if(uRound == 1.0)
    {
        gl_Position.xy = roundPixels(gl_Position.xy, uResolution);
    }

    vUV = aUV;
    vColor = vec4(aColor.rgb * aColor.a, aColor.a) * uColor;
}
`,Tr=`
struct ParticleUniforms {
  uProjectionMatrix:mat3x3<f32>,
  uColor:vec4<f32>,
  uResolution:vec2<f32>,
  uRoundPixels:f32,
};

@group(0) @binding(0) var<uniform> uniforms: ParticleUniforms;

@group(1) @binding(0) var uTexture: texture_2d<f32>;
@group(1) @binding(1) var uSampler : sampler;

struct VSOutput {
    @builtin(position) position: vec4<f32>,
    @location(0) uv : vec2<f32>,
    @location(1) color : vec4<f32>,
  };
@vertex
fn mainVertex(
  @location(0) aVertex: vec2<f32>,
  @location(1) aPosition: vec2<f32>,
  @location(2) aUV: vec2<f32>,
  @location(3) aColor: vec4<f32>,
  @location(4) aRotation: f32,
) -> VSOutput {
  
   let v = vec2(
       aVertex.x * cos(aRotation) - aVertex.y * sin(aRotation),
       aVertex.x * sin(aRotation) + aVertex.y * cos(aRotation)
   ) + aPosition;

   let position = vec4((uniforms.uProjectionMatrix * vec3(v, 1.0)).xy, 0.0, 1.0);

    let vColor = vec4(aColor.rgb * aColor.a, aColor.a) * uniforms.uColor;

  return VSOutput(
   position,
   aUV,
   vColor,
  );
}

@fragment
fn mainFragment(
  @location(0) uv: vec2<f32>,
  @location(1) color: vec4<f32>,
  @builtin(position) position: vec4<f32>,
) -> @location(0) vec4<f32> {

    var sample = textureSample(uTexture, uSampler, uv) * color;
   
    return sample;
}`;class Xs extends ot{constructor(){const t=Se.from({vertex:qs,fragment:Ys}),e=bt.from({fragment:{source:Tr,entryPoint:"mainFragment"},vertex:{source:Tr,entryPoint:"mainVertex"}});super({glProgram:t,gpuProgram:e,resources:{uTexture:d.Texture.WHITE.source,uSampler:new d.TextureStyle({}),uniforms:{uTranslationMatrix:{value:new d.Matrix,type:"mat3x3<f32>"},uColor:{value:new d.Color(16777215),type:"vec4<f32>"},uRound:{value:1,type:"f32"},uResolution:{value:[0,0],type:"vec2<f32>"}}}})}}class bi{constructor(t,e){this.state=Et.for2d(),this._gpuBufferHash=Object.create(null),this._destroyRenderableBound=this.destroyRenderable.bind(this),this.localUniforms=new N({uTranslationMatrix:{value:new d.Matrix,type:"mat3x3<f32>"},uColor:{value:new Float32Array(4),type:"vec4<f32>"},uRound:{value:1,type:"f32"},uResolution:{value:[0,0],type:"vec2<f32>"}}),this.renderer=t,this.adaptor=e,this.defaultShader=new Xs,this.state=Et.for2d()}validateRenderable(t){return!1}addRenderable(t,e){this.renderer.renderPipes.batch.break(e),e.add(t)}getBuffers(t){return this._gpuBufferHash[t.uid]||this._initBuffer(t)}_initBuffer(t){return this._gpuBufferHash[t.uid]=new Ns({size:t.particleChildren.length,properties:t._properties}),t.on("destroyed",this._destroyRenderableBound),this._gpuBufferHash[t.uid]}updateRenderable(t){}destroyRenderable(t){this._gpuBufferHash[t.uid].destroy(),this._gpuBufferHash[t.uid]=null,t.off("destroyed",this._destroyRenderableBound)}execute(t){const e=t.particleChildren;if(e.length===0)return;const r=this.renderer,i=this.getBuffers(t);t.texture||(t.texture=e[0].texture);const s=this.state;i.update(e,t._childrenDirty),t._childrenDirty=!1,s.blendMode=_t(t.blendMode,t.texture._source);const o=this.localUniforms.uniforms,a=o.uTranslationMatrix;t.worldTransform.copyTo(a),a.prepend(r.globalUniforms.globalUniformData.projectionMatrix),o.uResolution=r.globalUniforms.globalUniformData.resolution,o.uRound=r._roundPixels|t._roundPixels,Vt(t.groupColorAlpha,o.uColor,0),this.adaptor.execute(this,t)}destroy(){this.defaultShader&&(this.defaultShader.destroy(),this.defaultShader=null)}}class Si extends bi{constructor(t){super(t,new Vs)}}Si.extension={type:[d.ExtensionType.WebGLPipes],name:"particle"};class Ti extends bi{constructor(t){super(t,new $s)}}Ti.extension={type:[d.ExtensionType.WebGPUPipes],name:"particle"};const vi=class wi extends Hs{constructor(t={}){t={...wi.defaultOptions,...t},super({width:t.width,height:t.height,verticesX:4,verticesY:4}),this.update(t)}update(t){this.width=t.width??this.width,this.height=t.height??this.height,this._originalWidth=t.originalWidth??this._originalWidth,this._originalHeight=t.originalHeight??this._originalHeight,this._leftWidth=t.leftWidth??this._leftWidth,this._rightWidth=t.rightWidth??this._rightWidth,this._topHeight=t.topHeight??this._topHeight,this._bottomHeight=t.bottomHeight??this._bottomHeight,this.updateUvs(),this.updatePositions()}updatePositions(){const t=this.positions,e=this._leftWidth+this._rightWidth,r=this.width>e?1:this.width/e,i=this._topHeight+this._bottomHeight,s=this.height>i?1:this.height/i,o=Math.min(r,s);t[9]=t[11]=t[13]=t[15]=this._topHeight*o,t[17]=t[19]=t[21]=t[23]=this.height-this._bottomHeight*o,t[25]=t[27]=t[29]=t[31]=this.height,t[2]=t[10]=t[18]=t[26]=this._leftWidth*o,t[4]=t[12]=t[20]=t[28]=this.width-this._rightWidth*o,t[6]=t[14]=t[22]=t[30]=this.width,this.getBuffer("aPosition").update()}updateUvs(){const t=this.uvs;t[0]=t[8]=t[16]=t[24]=0,t[1]=t[3]=t[5]=t[7]=0,t[6]=t[14]=t[22]=t[30]=1,t[25]=t[27]=t[29]=t[31]=1;const e=1/this._originalWidth,r=1/this._originalHeight;t[2]=t[10]=t[18]=t[26]=e*this._leftWidth,t[9]=t[11]=t[13]=t[15]=r*this._topHeight,t[4]=t[12]=t[20]=t[28]=1-e*this._rightWidth,t[17]=t[19]=t[21]=t[23]=1-r*this._bottomHeight,this.getBuffer("aUV").update()}};vi.defaultOptions={width:100,height:100,leftWidth:10,topHeight:10,rightWidth:10,bottomHeight:10,originalWidth:100,originalHeight:100};let Ks=vi;class Pi{constructor(t){this._gpuSpriteHash=Object.create(null),this._destroyRenderableBound=this.destroyRenderable.bind(this),this._renderer=t,this._renderer.renderableGC.addManagedHash(this,"_gpuSpriteHash")}addRenderable(t,e){const r=this._getGpuSprite(t);t.didViewUpdate&&this._updateBatchableSprite(t,r),this._renderer.renderPipes.batch.addToBatch(r,e)}updateRenderable(t){const e=this._gpuSpriteHash[t.uid];t.didViewUpdate&&this._updateBatchableSprite(t,e),e._batcher.updateElement(e)}validateRenderable(t){const e=this._getGpuSprite(t);return!e._batcher.checkAndUpdateTexture(e,t._texture)}destroyRenderable(t){const e=this._gpuSpriteHash[t.uid];d.BigPool.return(e.geometry),d.BigPool.return(e),this._gpuSpriteHash[t.uid]=null,t.off("destroyed",this._destroyRenderableBound)}_updateBatchableSprite(t,e){e.geometry.update(t),e.texture=t._texture}_getGpuSprite(t){return this._gpuSpriteHash[t.uid]||this._initGPUSprite(t)}_initGPUSprite(t){const e=d.BigPool.get(Ue);return e.geometry=d.BigPool.get(Ks),e.renderable=t,e.transform=t.groupTransform,e.texture=t._texture,e.roundPixels=this._renderer._roundPixels|t._roundPixels,this._gpuSpriteHash[t.uid]=e,t.didViewUpdate||this._updateBatchableSprite(t,e),t.on("destroyed",this._destroyRenderableBound),e}destroy(){for(const t in this._gpuSpriteHash)this._gpuSpriteHash[t].geometry.destroy();this._gpuSpriteHash=null,this._renderer=null}}Pi.extension={type:[d.ExtensionType.WebGLPipes,d.ExtensionType.WebGPUPipes,d.ExtensionType.CanvasPipes],name:"nineSliceSprite"};const Qs={name:"tiling-bit",vertex:{header:`
            struct TilingUniforms {
                uMapCoord:mat3x3<f32>,
                uClampFrame:vec4<f32>,
                uClampOffset:vec2<f32>,
                uTextureTransform:mat3x3<f32>,
                uSizeAnchor:vec4<f32>
            };

            @group(2) @binding(0) var<uniform> tilingUniforms: TilingUniforms;
            @group(2) @binding(1) var uTexture: texture_2d<f32>;
            @group(2) @binding(2) var uSampler: sampler;
        `,main:`
            uv = (tilingUniforms.uTextureTransform * vec3(uv, 1.0)).xy;

            position = (position - tilingUniforms.uSizeAnchor.zw) * tilingUniforms.uSizeAnchor.xy;
        `},fragment:{header:`
            struct TilingUniforms {
                uMapCoord:mat3x3<f32>,
                uClampFrame:vec4<f32>,
                uClampOffset:vec2<f32>,
                uTextureTransform:mat3x3<f32>,
                uSizeAnchor:vec4<f32>
            };

            @group(2) @binding(0) var<uniform> tilingUniforms: TilingUniforms;
            @group(2) @binding(1) var uTexture: texture_2d<f32>;
            @group(2) @binding(2) var uSampler: sampler;
        `,main:`

            var coord = vUV + ceil(tilingUniforms.uClampOffset - vUV);
            coord = (tilingUniforms.uMapCoord * vec3(coord, 1.0)).xy;
            var unclamped = coord;
            coord = clamp(coord, tilingUniforms.uClampFrame.xy, tilingUniforms.uClampFrame.zw);

            var bias = 0.;

            if(unclamped.x == coord.x && unclamped.y == coord.y)
            {
                bias = -32.;
            } 

            outColor = textureSampleBias(uTexture, uSampler, coord, bias);
        `}},Zs={name:"tiling-bit",vertex:{header:`
            uniform mat3 uTextureTransform;
            uniform vec4 uSizeAnchor;
        
        `,main:`
            uv = (uTextureTransform * vec3(aUV, 1.0)).xy;

            position = (position - uSizeAnchor.zw) * uSizeAnchor.xy;
        `},fragment:{header:`
            uniform sampler2D uTexture;
            uniform mat3 uMapCoord;
            uniform vec4 uClampFrame;
            uniform vec2 uClampOffset;
        `,main:`

        vec2 coord = vUV + ceil(uClampOffset - vUV);
        coord = (uMapCoord * vec3(coord, 1.0)).xy;
        vec2 unclamped = coord;
        coord = clamp(coord, uClampFrame.xy, uClampFrame.zw);
        
        outColor = texture(uTexture, coord, unclamped == coord ? 0.0 : -32.0);// lod-bias very negative to force lod 0
    
        `}};let he,ce;class Js extends ot{constructor(){he??(he=Ce({name:"tiling-sprite-shader",bits:[Ft,Qs,Be]})),ce??(ce=Me({name:"tiling-sprite-shader",bits:[Ls,Zs,ke]}));const t=new N({uMapCoord:{value:new d.Matrix,type:"mat3x3<f32>"},uClampFrame:{value:new Float32Array([0,0,1,1]),type:"vec4<f32>"},uClampOffset:{value:new Float32Array([0,0]),type:"vec2<f32>"},uTextureTransform:{value:new d.Matrix,type:"mat3x3<f32>"},uSizeAnchor:{value:new Float32Array([100,100,.5,.5]),type:"vec4<f32>"}});super({glProgram:ce,gpuProgram:he,resources:{localUniforms:new N({uTransformMatrix:{value:new d.Matrix,type:"mat3x3<f32>"},uColor:{value:new Float32Array([1,1,1,1]),type:"vec4<f32>"},uRound:{value:0,type:"f32"}}),tilingUniforms:t,uTexture:d.Texture.EMPTY.source,uSampler:d.Texture.EMPTY.source.style}})}updateUniforms(t,e,r,i,s,o){const a=this.resources.tilingUniforms,l=o.width,c=o.height,h=o.textureMatrix,u=a.uniforms.uTextureTransform;u.set(r.a*l/t,r.b*l/e,r.c*c/t,r.d*c/e,r.tx/t,r.ty/e),u.invert(),a.uniforms.uMapCoord=h.mapCoord,a.uniforms.uClampFrame=h.uClampFrame,a.uniforms.uClampOffset=h.uClampOffset,a.uniforms.uTextureTransform=u,a.uniforms.uSizeAnchor[0]=t,a.uniforms.uSizeAnchor[1]=e,a.uniforms.uSizeAnchor[2]=i,a.uniforms.uSizeAnchor[3]=s,o&&(this.resources.uTexture=o.source,this.resources.uSampler=o.source.style)}}class to extends Ie{constructor(){super({positions:new Float32Array([0,0,1,0,1,1,0,1]),uvs:new Float32Array([0,0,1,0,1,1,0,1]),indices:new Uint32Array([0,1,2,0,2,3])})}}function eo(n,t){const e=n.anchor.x,r=n.anchor.y;t[0]=-e*n.width,t[1]=-r*n.height,t[2]=(1-e)*n.width,t[3]=-r*n.height,t[4]=(1-e)*n.width,t[5]=(1-r)*n.height,t[6]=-e*n.width,t[7]=(1-r)*n.height}function ro(n,t,e,r){let i=0;const s=n.length/t,o=r.a,a=r.b,l=r.c,c=r.d,h=r.tx,u=r.ty;for(e*=t;i<s;){const p=n[e],f=n[e+1];n[e]=o*p+l*f+h,n[e+1]=a*p+c*f+u,e+=t,i++}}function io(n,t){const e=n.texture,r=e.frame.width,i=e.frame.height;let s=0,o=0;n.applyAnchorToTexture&&(s=n.anchor.x,o=n.anchor.y),t[0]=t[6]=-s,t[2]=t[4]=1-s,t[1]=t[3]=-o,t[5]=t[7]=1-o;const a=d.Matrix.shared;a.copyFrom(n._tileTransform.matrix),a.tx/=n.width,a.ty/=n.height,a.invert(),a.scale(n.width/r,n.height/i),ro(t,2,0,a)}const kt=new to;class Ci{constructor(t){this._state=Et.default2d,this._tilingSpriteDataHash=Object.create(null),this._destroyRenderableBound=this.destroyRenderable.bind(this),this._renderer=t,this._renderer.renderableGC.addManagedHash(this,"_tilingSpriteDataHash")}validateRenderable(t){const e=this._getTilingSpriteData(t),r=e.canBatch;this._updateCanBatch(t);const i=e.canBatch;if(i&&i===r){const{batchableMesh:s}=e;return!s._batcher.checkAndUpdateTexture(s,t.texture)}return r!==i}addRenderable(t,e){const r=this._renderer.renderPipes.batch;this._updateCanBatch(t);const i=this._getTilingSpriteData(t),{geometry:s,canBatch:o}=i;if(o){i.batchableMesh||(i.batchableMesh=new Ue);const a=i.batchableMesh;t.didViewUpdate&&(this._updateBatchableMesh(t),a.geometry=s,a.renderable=t,a.transform=t.groupTransform,a.texture=t._texture),a.roundPixels=this._renderer._roundPixels|t._roundPixels,r.addToBatch(a,e)}else r.break(e),i.shader||(i.shader=new Js),this.updateRenderable(t),e.add(t)}execute(t){const{shader:e}=this._tilingSpriteDataHash[t.uid];e.groups[0]=this._renderer.globalUniforms.bindGroup;const r=e.resources.localUniforms.uniforms;r.uTransformMatrix=t.groupTransform,r.uRound=this._renderer._roundPixels|t._roundPixels,Vt(t.groupColorAlpha,r.uColor,0),this._state.blendMode=_t(t.groupBlendMode,t.texture._source),this._renderer.encoder.draw({geometry:kt,shader:e,state:this._state})}updateRenderable(t){const e=this._getTilingSpriteData(t),{canBatch:r}=e;if(r){const{batchableMesh:i}=e;t.didViewUpdate&&this._updateBatchableMesh(t),i._batcher.updateElement(i)}else if(t.didViewUpdate){const{shader:i}=e;i.updateUniforms(t.width,t.height,t._tileTransform.matrix,t.anchor.x,t.anchor.y,t.texture)}}destroyRenderable(t){const e=this._getTilingSpriteData(t);e.batchableMesh=null,e.shader?.destroy(),this._tilingSpriteDataHash[t.uid]=null,t.off("destroyed",this._destroyRenderableBound)}_getTilingSpriteData(t){return this._tilingSpriteDataHash[t.uid]||this._initTilingSpriteData(t)}_initTilingSpriteData(t){const e=new Ie({indices:kt.indices,positions:kt.positions.slice(),uvs:kt.uvs.slice()});return this._tilingSpriteDataHash[t.uid]={canBatch:!0,renderable:t,geometry:e},t.on("destroyed",this._destroyRenderableBound),this._tilingSpriteDataHash[t.uid]}_updateBatchableMesh(t){const e=this._getTilingSpriteData(t),{geometry:r}=e,i=t.texture.source.style;i.addressMode!=="repeat"&&(i.addressMode="repeat",i.update()),io(t,r.uvs),eo(t,r.positions)}destroy(){for(const t in this._tilingSpriteDataHash)this.destroyRenderable(this._tilingSpriteDataHash[t].renderable);this._tilingSpriteDataHash=null,this._renderer=null}_updateCanBatch(t){const e=this._getTilingSpriteData(t),r=t.texture;let i=!0;return this._renderer.type===nt.WEBGL&&(i=this._renderer.context.supports.nonPowOf2wrapping),e.canBatch=r.textureMatrix.isSimple&&(i||r.source.isPowerOfTwo),e.canBatch}}Ci.extension={type:[d.ExtensionType.WebGLPipes,d.ExtensionType.WebGPUPipes,d.ExtensionType.CanvasPipes],name:"tilingSprite"};const no={name:"local-uniform-msdf-bit",vertex:{header:`
            struct LocalUniforms {
                uColor:vec4<f32>,
                uTransformMatrix:mat3x3<f32>,
                uDistance: f32,
                uRound:f32,
            }

            @group(2) @binding(0) var<uniform> localUniforms : LocalUniforms;
        `,main:`
            vColor *= localUniforms.uColor;
            modelMatrix *= localUniforms.uTransformMatrix;
        `,end:`
            if(localUniforms.uRound == 1)
            {
                vPosition = vec4(roundPixels(vPosition.xy, globalUniforms.uResolution), vPosition.zw);
            }
        `},fragment:{header:`
            struct LocalUniforms {
                uColor:vec4<f32>,
                uTransformMatrix:mat3x3<f32>,
                uDistance: f32
            }

            @group(2) @binding(0) var<uniform> localUniforms : LocalUniforms;
         `,main:` 
            outColor = vec4<f32>(calculateMSDFAlpha(outColor, localUniforms.uColor, localUniforms.uDistance));
        `}},so={name:"local-uniform-msdf-bit",vertex:{header:`
            uniform mat3 uTransformMatrix;
            uniform vec4 uColor;
            uniform float uRound;
        `,main:`
            vColor *= uColor;
            modelMatrix *= uTransformMatrix;
        `,end:`
            if(uRound == 1.)
            {
                gl_Position.xy = roundPixels(gl_Position.xy, uResolution);
            }
        `},fragment:{header:`
            uniform float uDistance;
         `,main:` 
            outColor = vec4(calculateMSDFAlpha(outColor, vColor, uDistance));
        `}},oo={name:"msdf-bit",fragment:{header:`
            fn calculateMSDFAlpha(msdfColor:vec4<f32>, shapeColor:vec4<f32>, distance:f32) -> f32 {
                
                // MSDF
                var median = msdfColor.r + msdfColor.g + msdfColor.b -
                    min(msdfColor.r, min(msdfColor.g, msdfColor.b)) -
                    max(msdfColor.r, max(msdfColor.g, msdfColor.b));
            
                // SDF
                median = min(median, msdfColor.a);

                var screenPxDistance = distance * (median - 0.5);
                var alpha = clamp(screenPxDistance + 0.5, 0.0, 1.0);
                if (median < 0.01) {
                    alpha = 0.0;
                } else if (median > 0.99) {
                    alpha = 1.0;
                }

                // Gamma correction for coverage-like alpha
                var luma: f32 = dot(shapeColor.rgb, vec3<f32>(0.299, 0.587, 0.114));
                var gamma: f32 = mix(1.0, 1.0 / 2.2, luma);
                var coverage: f32 = pow(shapeColor.a * alpha, gamma);

                return coverage;
             
            }
        `}},ao={name:"msdf-bit",fragment:{header:`
            float calculateMSDFAlpha(vec4 msdfColor, vec4 shapeColor, float distance) {
                
                // MSDF
                float median = msdfColor.r + msdfColor.g + msdfColor.b -
                                min(msdfColor.r, min(msdfColor.g, msdfColor.b)) -
                                max(msdfColor.r, max(msdfColor.g, msdfColor.b));
               
                // SDF
                median = min(median, msdfColor.a);
            
                float screenPxDistance = distance * (median - 0.5);
                float alpha = clamp(screenPxDistance + 0.5, 0.0, 1.0);
           
                if (median < 0.01) {
                    alpha = 0.0;
                } else if (median > 0.99) {
                    alpha = 1.0;
                }

                // Gamma correction for coverage-like alpha
                float luma = dot(shapeColor.rgb, vec3(0.299, 0.587, 0.114));
                float gamma = mix(1.0, 1.0 / 2.2, luma);
                float coverage = pow(shapeColor.a * alpha, gamma);  
              
                return coverage;
            }
        `}};let ue,de;class lo extends ot{constructor(){const t=new N({uColor:{value:new Float32Array([1,1,1,1]),type:"vec4<f32>"},uTransformMatrix:{value:new d.Matrix,type:"mat3x3<f32>"},uDistance:{value:4,type:"f32"},uRound:{value:0,type:"f32"}}),e=Pe();ue??(ue=Ce({name:"sdf-shader",bits:[Vr,Or(e),no,oo,Be]})),de??(de=Me({name:"sdf-shader",bits:[$r,Nr(e),so,ao,ke]})),super({glProgram:de,gpuProgram:ue,resources:{localUniforms:t,batchSamplers:jr(e)}})}}class Mi{constructor(t){this._gpuBitmapText={},this._destroyRenderableBound=this.destroyRenderable.bind(this),this._renderer=t,this._renderer.renderableGC.addManagedHash(this,"_gpuBitmapText")}validateRenderable(t){const e=this._getGpuBitmapText(t);return t._didTextUpdate&&(t._didTextUpdate=!1,this._updateContext(t,e)),this._renderer.renderPipes.graphics.validateRenderable(e)}addRenderable(t,e){const r=this._getGpuBitmapText(t);vr(t,r),t._didTextUpdate&&(t._didTextUpdate=!1,this._updateContext(t,r)),this._renderer.renderPipes.graphics.addRenderable(r,e),r.context.customShader&&this._updateDistanceField(t)}destroyRenderable(t){t.off("destroyed",this._destroyRenderableBound),this._destroyRenderableByUid(t.uid)}_destroyRenderableByUid(t){const e=this._gpuBitmapText[t].context;e.customShader&&(d.BigPool.return(e.customShader),e.customShader=null),d.BigPool.return(this._gpuBitmapText[t]),this._gpuBitmapText[t]=null}updateRenderable(t){const e=this._getGpuBitmapText(t);vr(t,e),this._renderer.renderPipes.graphics.updateRenderable(e),e.context.customShader&&this._updateDistanceField(t)}_updateContext(t,e){const{context:r}=e,i=Fs.getFont(t.text,t._style);r.clear(),i.distanceField.type!=="none"&&(r.customShader||(r.customShader=d.BigPool.get(lo)));const s=Array.from(t.text),o=t._style;let a=i.baseLineOffset;const l=oi(s,o,i,!0);let c=0;const h=o.padding,u=l.scale;let p=l.width,f=l.height+l.offsetY;o._stroke&&(p+=o._stroke.width/u,f+=o._stroke.width/u),r.translate(-t._anchor._x*p-h,-t._anchor._y*f-h).scale(u,u);const g=i.applyFillAsTint?o._fill.color:16777215;for(let x=0;x<l.lines.length;x++){const m=l.lines[x];for(let _=0;_<m.charPositions.length;_++){const y=s[c++],v=i.chars[y];v?.texture&&r.texture(v.texture,g||"black",Math.round(m.charPositions[_]+v.xOffset),Math.round(a+v.yOffset))}a+=i.lineHeight}}_getGpuBitmapText(t){return this._gpuBitmapText[t.uid]||this.initGpuText(t)}initGpuText(t){const e=d.BigPool.get(Dt);return this._gpuBitmapText[t.uid]=e,this._updateContext(t,e),t.on("destroyed",this._destroyRenderableBound),this._gpuBitmapText[t.uid]}_updateDistanceField(t){const e=this._getGpuBitmapText(t).context,r=t._style.fontFamily,i=d.Cache.get(`${r}-bitmap`),{a:s,b:o,c:a,d:l}=t.groupTransform,c=Math.sqrt(s*s+o*o),h=Math.sqrt(a*a+l*l),u=(Math.abs(c)+Math.abs(h))/2,p=i.baseRenderedFontSize/t._style.fontSize,f=u*i.distanceField.range*(1/p);e.customShader.resources.localUniforms.uniforms.uDistance=f}destroy(){for(const t in this._gpuBitmapText)this._destroyRenderableByUid(t);this._gpuBitmapText=null,this._renderer=null}}Mi.extension={type:[d.ExtensionType.WebGLPipes,d.ExtensionType.WebGPUPipes,d.ExtensionType.CanvasPipes],name:"bitmapText"};function vr(n,t){t.groupTransform=n.groupTransform,t.groupColorAlpha=n.groupColorAlpha,t.groupColor=n.groupColor,t.groupBlendMode=n.groupBlendMode,t.globalDisplayStatus=n.globalDisplayStatus,t.groupTransform=n.groupTransform,t.localDisplayStatus=n.localDisplayStatus,t.groupAlpha=n.groupAlpha,t._roundPixels=n._roundPixels}class Bi{constructor(t){this._gpuText=Object.create(null),this._destroyRenderableBound=this.destroyRenderable.bind(this),this._renderer=t,this._renderer.runners.resolutionChange.add(this),this._renderer.renderableGC.addManagedHash(this,"_gpuText")}resolutionChange(){for(const t in this._gpuText){const e=this._gpuText[t];if(!e)continue;const r=e.batchableSprite.renderable;r._autoResolution&&(r._resolution=this._renderer.resolution,r.onViewUpdate())}}validateRenderable(t){const e=this._getGpuText(t),r=t._getKey();return e.textureNeedsUploading?(e.textureNeedsUploading=!1,!0):e.currentKey!==r}addRenderable(t,e){const i=this._getGpuText(t).batchableSprite;t._didTextUpdate&&this._updateText(t),this._renderer.renderPipes.batch.addToBatch(i,e)}updateRenderable(t){const r=this._getGpuText(t).batchableSprite;t._didTextUpdate&&this._updateText(t),r._batcher.updateElement(r)}destroyRenderable(t){t.off("destroyed",this._destroyRenderableBound),this._destroyRenderableById(t.uid)}_destroyRenderableById(t){const e=this._gpuText[t];this._renderer.htmlText.decreaseReferenceCount(e.currentKey),d.BigPool.return(e.batchableSprite),this._gpuText[t]=null}_updateText(t){const e=t._getKey(),r=this._getGpuText(t),i=r.batchableSprite;r.currentKey!==e&&this._updateGpuText(t).catch(o=>{console.error(o)}),t._didTextUpdate=!1;const s=t._style.padding;d.updateQuadBounds(i.bounds,t._anchor,i.texture,s)}async _updateGpuText(t){t._didTextUpdate=!1;const e=this._getGpuText(t);if(e.generatingTexture)return;const r=t._getKey();this._renderer.htmlText.decreaseReferenceCount(e.currentKey),e.generatingTexture=!0,e.currentKey=r;const i=t.resolution??this._renderer.resolution,s=await this._renderer.htmlText.getManagedTexture(t.text,i,t._style,t._getKey()),o=e.batchableSprite;o.texture=e.texture=s,e.generatingTexture=!1,e.textureNeedsUploading=!0,t.onViewUpdate();const a=t._style.padding;d.updateQuadBounds(o.bounds,t._anchor,o.texture,a)}_getGpuText(t){return this._gpuText[t.uid]||this.initGpuText(t)}initGpuText(t){const e={texture:d.Texture.EMPTY,currentKey:"--",batchableSprite:d.BigPool.get(gi),textureNeedsUploading:!1,generatingTexture:!1},r=e.batchableSprite;return r.renderable=t,r.transform=t.groupTransform,r.texture=d.Texture.EMPTY,r.bounds={minX:0,maxX:1,minY:0,maxY:0},r.roundPixels=this._renderer._roundPixels|t._roundPixels,t._resolution=t._autoResolution?this._renderer.resolution:t.resolution,this._gpuText[t.uid]=e,t.on("destroyed",this._destroyRenderableBound),e}destroy(){for(const t in this._gpuText)this._destroyRenderableById(t);this._gpuText=null,this._renderer=null}}Bi.extension={type:[d.ExtensionType.WebGLPipes,d.ExtensionType.WebGPUPipes,d.ExtensionType.CanvasPipes],name:"htmlText"};function ho(){const{userAgent:n}=d.DOMAdapter.get().getNavigator();return/^((?!chrome|android).)*safari/i.test(n)}const co=new d.Bounds;function ki(n,t,e,r){const i=co;i.minX=0,i.minY=0,i.maxX=n.width/r|0,i.maxY=n.height/r|0;const s=d.TexturePool.getOptimalTexture(i.width,i.height,r,!1);return s.source.uploadMethodId="image",s.source.resource=n,s.source.alphaMode="premultiply-alpha-on-upload",s.frame.width=t/r,s.frame.height=e/r,s.source.emit("update",s.source),s.updateUvs(),s}function uo(n,t){const e=t.fontFamily,r=[],i={},s=/font-family:([^;"\s]+)/g,o=n.match(s);function a(l){i[l]||(r.push(l),i[l]=!0)}if(Array.isArray(e))for(let l=0;l<e.length;l++)a(e[l]);else a(e);o&&o.forEach(l=>{const c=l.split(":")[1].trim();a(c)});for(const l in t.tagStyles){const c=t.tagStyles[l].fontFamily;a(c)}return r}async function fo(n){const e=await(await d.DOMAdapter.get().fetch(n)).blob(),r=new FileReader;return await new Promise((s,o)=>{r.onloadend=()=>s(r.result),r.onerror=o,r.readAsDataURL(e)})}async function wr(n,t){const e=await fo(t);return`@font-face {
        font-family: "${n.fontFamily}";
        src: url('${e}');
        font-weight: ${n.fontWeight};
        font-style: ${n.fontStyle};
    }`}const Rt=new Map;async function po(n,t,e){const r=n.filter(i=>d.Cache.has(`${i}-and-url`)).map((i,s)=>{if(!Rt.has(i)){const{url:o}=d.Cache.get(`${i}-and-url`);s===0?Rt.set(i,wr({fontWeight:t.fontWeight,fontStyle:t.fontStyle,fontFamily:i},o)):Rt.set(i,wr({fontWeight:e.fontWeight,fontStyle:e.fontStyle,fontFamily:i},o))}return Rt.get(i)});return(await Promise.all(r)).join(`
`)}function go(n,t,e,r,i){const{domElement:s,styleElement:o,svgRoot:a}=i;s.innerHTML=`<style>${t.cssStyle}</style><div style='padding:0;'>${n}</div>`,s.setAttribute("style",`transform: scale(${e});transform-origin: top left; display: inline-block`),o.textContent=r;const{width:l,height:c}=i.image;return a.setAttribute("width",l.toString()),a.setAttribute("height",c.toString()),new XMLSerializer().serializeToString(a)}function mo(n,t){const e=J.getOptimalCanvasAndContext(n.width,n.height,t),{context:r}=e;return r.clearRect(0,0,n.width,n.height),r.drawImage(n,0,0),e}function xo(n,t,e){return new Promise(async r=>{e&&await new Promise(i=>setTimeout(i,100)),n.onload=()=>{r()},n.src=`data:image/svg+xml;charset=utf8,${encodeURIComponent(t)}`,n.crossOrigin="anonymous"})}class De{constructor(t){this._activeTextures={},this._renderer=t,this._createCanvas=t.type===nt.WEBGPU}getTexture(t){return this._buildTexturePromise(t.text,t.resolution,t.style)}getManagedTexture(t,e,r,i){if(this._activeTextures[i])return this._increaseReferenceCount(i),this._activeTextures[i].promise;const s=this._buildTexturePromise(t,e,r).then(o=>(this._activeTextures[i].texture=o,o));return this._activeTextures[i]={texture:null,promise:s,usageCount:1},s}async _buildTexturePromise(t,e,r){const i=d.BigPool.get(pi),s=uo(t,r),o=await po(s,r,Ge.defaultTextStyle),a=Ws(t,r,o,i),l=Math.ceil(Math.ceil(Math.max(1,a.width)+r.padding*2)*e),c=Math.ceil(Math.ceil(Math.max(1,a.height)+r.padding*2)*e),h=i.image,u=2;h.width=(l|0)+u,h.height=(c|0)+u;const p=go(t,r,e,o,i);await xo(h,p,ho()&&s.length>0);const f=h;let g;this._createCanvas&&(g=mo(h,e));const x=ki(g?g.canvas:f,h.width-u,h.height-u,e);return this._createCanvas&&(this._renderer.texture.initSource(x.source),J.returnCanvasAndContext(g)),d.BigPool.return(i),x}_increaseReferenceCount(t){this._activeTextures[t].usageCount++}decreaseReferenceCount(t){const e=this._activeTextures[t];e&&(e.usageCount--,e.usageCount===0&&(e.texture?this._cleanUp(e):e.promise.then(r=>{e.texture=r,this._cleanUp(e)}).catch(()=>{d.warn("HTMLTextSystem: Failed to clean texture")}),this._activeTextures[t]=null))}_cleanUp(t){d.TexturePool.returnTexture(t.texture),t.texture.source.resource=null,t.texture.source.uploadMethodId="unknown"}getReferenceCount(t){return this._activeTextures[t].usageCount}destroy(){this._activeTextures=null}}De.extension={type:[d.ExtensionType.WebGLSystem,d.ExtensionType.WebGPUSystem,d.ExtensionType.CanvasSystem],name:"htmlText"};De.defaultFontOptions={fontFamily:"Arial",fontStyle:"normal",fontWeight:"normal"};class Ri{constructor(t){this._gpuText=Object.create(null),this._destroyRenderableBound=this.destroyRenderable.bind(this),this._renderer=t,this._renderer.runners.resolutionChange.add(this),this._renderer.renderableGC.addManagedHash(this,"_gpuText")}resolutionChange(){for(const t in this._gpuText){const e=this._gpuText[t];if(!e)continue;const r=e.batchableSprite.renderable;r._autoResolution&&(r._resolution=this._renderer.resolution,r.onViewUpdate())}}validateRenderable(t){const e=this._getGpuText(t),r=t._getKey();return e.currentKey!==r}addRenderable(t,e){const i=this._getGpuText(t).batchableSprite;t._didTextUpdate&&this._updateText(t),this._renderer.renderPipes.batch.addToBatch(i,e)}updateRenderable(t){const r=this._getGpuText(t).batchableSprite;t._didTextUpdate&&this._updateText(t),r._batcher.updateElement(r)}destroyRenderable(t){t.off("destroyed",this._destroyRenderableBound),this._destroyRenderableById(t.uid)}_destroyRenderableById(t){const e=this._gpuText[t];this._renderer.canvasText.decreaseReferenceCount(e.currentKey),d.BigPool.return(e.batchableSprite),this._gpuText[t]=null}_updateText(t){const e=t._getKey(),r=this._getGpuText(t),i=r.batchableSprite;r.currentKey!==e&&this._updateGpuText(t),t._didTextUpdate=!1;const s=t._style.padding;d.updateQuadBounds(i.bounds,t._anchor,i.texture,s)}_updateGpuText(t){const e=this._getGpuText(t),r=e.batchableSprite;e.texture&&this._renderer.canvasText.decreaseReferenceCount(e.currentKey),e.texture=r.texture=this._renderer.canvasText.getManagedTexture(t),e.currentKey=t._getKey(),r.texture=e.texture}_getGpuText(t){return this._gpuText[t.uid]||this.initGpuText(t)}initGpuText(t){const e={texture:null,currentKey:"--",batchableSprite:d.BigPool.get(gi)};return e.batchableSprite.renderable=t,e.batchableSprite.transform=t.groupTransform,e.batchableSprite.bounds={minX:0,maxX:1,minY:0,maxY:0},e.batchableSprite.roundPixels=this._renderer._roundPixels|t._roundPixels,this._gpuText[t.uid]=e,t._resolution=t._autoResolution?this._renderer.resolution:t.resolution,this._updateText(t),t.on("destroyed",this._destroyRenderableBound),e}destroy(){for(const t in this._gpuText)this._destroyRenderableById(t);this._gpuText=null,this._renderer=null}}Ri.extension={type:[d.ExtensionType.WebGLPipes,d.ExtensionType.WebGPUPipes,d.ExtensionType.CanvasPipes],name:"text"};function Pr(n,t,e){for(let r=0,i=4*e*t;r<t;++r,i+=4)if(n[i+3]!==0)return!1;return!0}function Cr(n,t,e,r,i){const s=4*t;for(let o=r,a=r*s+4*e;o<=i;++o,a+=s)if(n[a+3]!==0)return!1;return!0}function _o(n,t=1){const{width:e,height:r}=n,i=n.getContext("2d",{willReadFrequently:!0});if(i===null)throw new TypeError("Failed to get canvas 2D context");const o=i.getImageData(0,0,e,r).data;let a=0,l=0,c=e-1,h=r-1;for(;l<r&&Pr(o,e,l);)++l;if(l===r)return d.Rectangle.EMPTY;for(;Pr(o,e,h);)--h;for(;Cr(o,e,a,l,h);)++a;for(;Cr(o,e,c,l,h);)--c;return++c,++h,new d.Rectangle(a/t,l/t,(c-a)/t,(h-l)/t)}class Ai{constructor(t){this._activeTextures={},this._renderer=t}getTextureSize(t,e,r){const i=$.measureText(t||" ",r);let s=Math.ceil(Math.ceil(Math.max(1,i.width)+r.padding*2)*e),o=Math.ceil(Math.ceil(Math.max(1,i.height)+r.padding*2)*e);return s=Math.ceil(s-1e-6),o=Math.ceil(o-1e-6),s=d.nextPow2(s),o=d.nextPow2(o),{width:s,height:o}}getTexture(t,e,r,i){typeof t=="string"&&(d.deprecation("8.0.0","CanvasTextSystem.getTexture: Use object TextOptions instead of separate arguments"),t={text:t,style:r,resolution:e}),t.style instanceof j||(t.style=new j(t.style));const{texture:s,canvasAndContext:o}=this.createTextureAndCanvas(t);return this._renderer.texture.initSource(s._source),J.returnCanvasAndContext(o),s}createTextureAndCanvas(t){const{text:e,style:r}=t,i=t.resolution??this._renderer.resolution,s=$.measureText(e||" ",r),o=Math.ceil(Math.ceil(Math.max(1,s.width)+r.padding*2)*i),a=Math.ceil(Math.ceil(Math.max(1,s.height)+r.padding*2)*i),l=J.getOptimalCanvasAndContext(o,a),{canvas:c}=l;this.renderTextToCanvas(e,r,i,l);const h=ki(c,o,a,i);if(r.trim){const u=_o(c,i);h.frame.copyFrom(u),h.updateUvs()}return{texture:h,canvasAndContext:l}}getManagedTexture(t){t._resolution=t._autoResolution?this._renderer.resolution:t.resolution;const e=t._getKey();if(this._activeTextures[e])return this._increaseReferenceCount(e),this._activeTextures[e].texture;const{texture:r,canvasAndContext:i}=this.createTextureAndCanvas(t);return this._activeTextures[e]={canvasAndContext:i,texture:r,usageCount:1},r}_increaseReferenceCount(t){this._activeTextures[t].usageCount++}decreaseReferenceCount(t){const e=this._activeTextures[t];if(e.usageCount--,e.usageCount===0){J.returnCanvasAndContext(e.canvasAndContext),d.TexturePool.returnTexture(e.texture);const r=e.texture.source;r.resource=null,r.uploadMethodId="unknown",r.alphaMode="no-premultiply-alpha",this._activeTextures[t]=null}}getReferenceCount(t){return this._activeTextures[t].usageCount}renderTextToCanvas(t,e,r,i){const{canvas:s,context:o}=i,a=Gt(e),l=$.measureText(t||" ",e),c=l.lines,h=l.lineHeight,u=l.lineWidths,p=l.maxLineWidth,f=l.fontProperties,g=s.height;if(o.resetTransform(),o.scale(r,r),o.textBaseline=e.textBaseline,e._stroke?.width){const y=e._stroke;o.lineWidth=y.width,o.miterLimit=y.miterLimit,o.lineJoin=y.join,o.lineCap=y.cap}o.font=a;let x,m;const _=e.dropShadow?2:1;for(let y=0;y<_;++y){const v=e.dropShadow&&y===0,b=v?Math.ceil(Math.max(1,g)+e.padding*2):0,w=b*r;if(v){o.fillStyle="black",o.strokeStyle="black";const P=e.dropShadow,A=P.color,C=P.alpha;o.shadowColor=d.Color.shared.setValue(A).setAlpha(C).toRgbaString();const M=P.blur*r,F=P.distance*r;o.shadowBlur=M,o.shadowOffsetX=Math.cos(P.angle)*F,o.shadowOffsetY=Math.sin(P.angle)*F+w}else o.fillStyle=e._fill?Ut(e._fill,o):null,e._stroke?.width&&(o.strokeStyle=Ut(e._stroke,o)),o.shadowColor="black";let S=(h-f.fontSize)/2;h-f.fontSize<0&&(S=0);const T=e._stroke?.width??0;for(let P=0;P<c.length;P++)x=T/2,m=T/2+P*h+f.ascent+S,e.align==="right"?x+=p-u[P]:e.align==="center"&&(x+=(p-u[P])/2),e._stroke?.width&&this._drawLetterSpacing(c[P],e,i,x+e.padding,m+e.padding-b,!0),e._fill!==void 0&&this._drawLetterSpacing(c[P],e,i,x+e.padding,m+e.padding-b)}}_drawLetterSpacing(t,e,r,i,s,o=!1){const{context:a}=r,l=e.letterSpacing;let c=!1;if($.experimentalLetterSpacingSupported&&($.experimentalLetterSpacing?(a.letterSpacing=`${l}px`,a.textLetterSpacing=`${l}px`,c=!0):(a.letterSpacing="0px",a.textLetterSpacing="0px")),l===0||c){o?a.strokeText(t,i,s):a.fillText(t,i,s);return}let h=i;const u=$.graphemeSegmenter(t);let p=a.measureText(t).width,f=0;for(let g=0;g<u.length;++g){const x=u[g];o?a.strokeText(x,h,s):a.fillText(x,h,s);let m="";for(let _=g+1;_<u.length;++_)m+=u[_];f=a.measureText(m).width,h+=p-f+l,p=f}}destroy(){this._activeTextures=null}}Ai.extension={type:[d.ExtensionType.WebGLSystem,d.ExtensionType.WebGPUSystem,d.ExtensionType.CanvasSystem],name:"canvasText"};d.extensions.add(zr);d.extensions.add(Er);d.extensions.add(mi);d.extensions.add(Fe);d.extensions.add(yi);d.extensions.add(Si);d.extensions.add(Ti);d.extensions.add(Ai);d.extensions.add(Ri);d.extensions.add(Mi);d.extensions.add(De);d.extensions.add(Bi);d.extensions.add(Ci);d.extensions.add(Pi);d.extensions.add(hi);d.extensions.add(ai);
//# sourceMappingURL=init.js.map
